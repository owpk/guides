/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartexamRequirementsForSp implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID          id;
    private final Integer       version;
    private final LocalDateTime createTs;
    private final String        createdBy;
    private final LocalDateTime updateTs;
    private final String        updatedBy;
    private final LocalDateTime deleteTs;
    private final String        deletedBy;
    private final Double        quantity;
    private final UUID          organizationId;
    private final UUID          divisionId;
    private final String        urgency;
    private final UUID          photoId;
    private final Double        price;
    private final Double        sum_;
    private final String        description;
    private final String        number_;
    private final String        status;
    private final UUID          nomenclatureId;
    private final UUID          repairRequestId;

    public SmartexamRequirementsForSp(SmartexamRequirementsForSp value) {
        this.id = value.id;
        this.version = value.version;
        this.createTs = value.createTs;
        this.createdBy = value.createdBy;
        this.updateTs = value.updateTs;
        this.updatedBy = value.updatedBy;
        this.deleteTs = value.deleteTs;
        this.deletedBy = value.deletedBy;
        this.quantity = value.quantity;
        this.organizationId = value.organizationId;
        this.divisionId = value.divisionId;
        this.urgency = value.urgency;
        this.photoId = value.photoId;
        this.price = value.price;
        this.sum_ = value.sum_;
        this.description = value.description;
        this.number_ = value.number_;
        this.status = value.status;
        this.nomenclatureId = value.nomenclatureId;
        this.repairRequestId = value.repairRequestId;
    }

    public SmartexamRequirementsForSp(
        UUID          id,
        Integer       version,
        LocalDateTime createTs,
        String        createdBy,
        LocalDateTime updateTs,
        String        updatedBy,
        LocalDateTime deleteTs,
        String        deletedBy,
        Double        quantity,
        UUID          organizationId,
        UUID          divisionId,
        String        urgency,
        UUID          photoId,
        Double        price,
        Double        sum_,
        String        description,
        String        number_,
        String        status,
        UUID          nomenclatureId,
        UUID          repairRequestId
    ) {
        this.id = id;
        this.version = version;
        this.createTs = createTs;
        this.createdBy = createdBy;
        this.updateTs = updateTs;
        this.updatedBy = updatedBy;
        this.deleteTs = deleteTs;
        this.deletedBy = deletedBy;
        this.quantity = quantity;
        this.organizationId = organizationId;
        this.divisionId = divisionId;
        this.urgency = urgency;
        this.photoId = photoId;
        this.price = price;
        this.sum_ = sum_;
        this.description = description;
        this.number_ = number_;
        this.status = status;
        this.nomenclatureId = nomenclatureId;
        this.repairRequestId = repairRequestId;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.version</code>.
     */
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return this.createTs;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.created_by</code>.
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return this.updateTs;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.updated_by</code>.
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return this.deleteTs;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.deleted_by</code>.
     */
    public String getDeletedBy() {
        return this.deletedBy;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.quantity</code>.
     */
    public Double getQuantity() {
        return this.quantity;
    }

    /**
     * Getter for
     * <code>public.smartexam_requirements_for_sp.organization_id</code>.
     */
    public UUID getOrganizationId() {
        return this.organizationId;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.division_id</code>.
     */
    public UUID getDivisionId() {
        return this.divisionId;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.urgency</code>.
     */
    public String getUrgency() {
        return this.urgency;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.photo_id</code>.
     */
    public UUID getPhotoId() {
        return this.photoId;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.price</code>.
     */
    public Double getPrice() {
        return this.price;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.sum_</code>.
     */
    public Double getSum_() {
        return this.sum_;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.number_</code>.
     */
    public String getNumber_() {
        return this.number_;
    }

    /**
     * Getter for <code>public.smartexam_requirements_for_sp.status</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Getter for
     * <code>public.smartexam_requirements_for_sp.nomenclature_id</code>.
     */
    public UUID getNomenclatureId() {
        return this.nomenclatureId;
    }

    /**
     * Getter for
     * <code>public.smartexam_requirements_for_sp.repair_request_id</code>.
     */
    public UUID getRepairRequestId() {
        return this.repairRequestId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SmartexamRequirementsForSp (");

        sb.append(id);
        sb.append(", ").append(version);
        sb.append(", ").append(createTs);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updateTs);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(deleteTs);
        sb.append(", ").append(deletedBy);
        sb.append(", ").append(quantity);
        sb.append(", ").append(organizationId);
        sb.append(", ").append(divisionId);
        sb.append(", ").append(urgency);
        sb.append(", ").append(photoId);
        sb.append(", ").append(price);
        sb.append(", ").append(sum_);
        sb.append(", ").append(description);
        sb.append(", ").append(number_);
        sb.append(", ").append(status);
        sb.append(", ").append(nomenclatureId);
        sb.append(", ").append(repairRequestId);

        sb.append(")");
        return sb.toString();
    }
}
