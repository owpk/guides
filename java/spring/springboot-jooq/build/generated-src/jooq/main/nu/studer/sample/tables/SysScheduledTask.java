/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables;


import java.time.LocalDateTime;
import java.time.OffsetDateTime;
import java.util.UUID;

import nu.studer.sample.Keys;
import nu.studer.sample.Public;
import nu.studer.sample.tables.records.SysScheduledTaskRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysScheduledTask extends TableImpl<SysScheduledTaskRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.sys_scheduled_task</code>
     */
    public static final SysScheduledTask SYS_SCHEDULED_TASK = new SysScheduledTask();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysScheduledTaskRecord> getRecordType() {
        return SysScheduledTaskRecord.class;
    }

    /**
     * The column <code>public.sys_scheduled_task.id</code>.
     */
    public final TableField<SysScheduledTaskRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.sys_scheduled_task.create_ts</code>.
     */
    public final TableField<SysScheduledTaskRecord, LocalDateTime> CREATE_TS = createField(DSL.name("create_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_scheduled_task.created_by</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_scheduled_task.update_ts</code>.
     */
    public final TableField<SysScheduledTaskRecord, LocalDateTime> UPDATE_TS = createField(DSL.name("update_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_scheduled_task.updated_by</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_scheduled_task.delete_ts</code>.
     */
    public final TableField<SysScheduledTaskRecord, LocalDateTime> DELETE_TS = createField(DSL.name("delete_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_scheduled_task.deleted_by</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> DELETED_BY = createField(DSL.name("deleted_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_scheduled_task.sys_tenant_id</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> SYS_TENANT_ID = createField(DSL.name("sys_tenant_id"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.sys_scheduled_task.defined_by</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> DEFINED_BY = createField(DSL.name("defined_by"), SQLDataType.VARCHAR(1).defaultValue(DSL.field("'B'::character varying", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.sys_scheduled_task.class_name</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> CLASS_NAME = createField(DSL.name("class_name"), SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>public.sys_scheduled_task.script_name</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> SCRIPT_NAME = createField(DSL.name("script_name"), SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>public.sys_scheduled_task.bean_name</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> BEAN_NAME = createField(DSL.name("bean_name"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_scheduled_task.method_name</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> METHOD_NAME = createField(DSL.name("method_name"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_scheduled_task.method_params</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> METHOD_PARAMS = createField(DSL.name("method_params"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>public.sys_scheduled_task.user_name</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> USER_NAME = createField(DSL.name("user_name"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_scheduled_task.is_singleton</code>.
     */
    public final TableField<SysScheduledTaskRecord, Boolean> IS_SINGLETON = createField(DSL.name("is_singleton"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.sys_scheduled_task.is_active</code>.
     */
    public final TableField<SysScheduledTaskRecord, Boolean> IS_ACTIVE = createField(DSL.name("is_active"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.sys_scheduled_task.period_</code>.
     */
    public final TableField<SysScheduledTaskRecord, Integer> PERIOD_ = createField(DSL.name("period_"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sys_scheduled_task.timeout</code>.
     */
    public final TableField<SysScheduledTaskRecord, Integer> TIMEOUT = createField(DSL.name("timeout"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sys_scheduled_task.start_date</code>.
     */
    public final TableField<SysScheduledTaskRecord, LocalDateTime> START_DATE = createField(DSL.name("start_date"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_scheduled_task.time_frame</code>.
     */
    public final TableField<SysScheduledTaskRecord, Integer> TIME_FRAME = createField(DSL.name("time_frame"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sys_scheduled_task.start_delay</code>.
     */
    public final TableField<SysScheduledTaskRecord, Integer> START_DELAY = createField(DSL.name("start_delay"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sys_scheduled_task.permitted_servers</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> PERMITTED_SERVERS = createField(DSL.name("permitted_servers"), SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>public.sys_scheduled_task.log_start</code>.
     */
    public final TableField<SysScheduledTaskRecord, Boolean> LOG_START = createField(DSL.name("log_start"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.sys_scheduled_task.log_finish</code>.
     */
    public final TableField<SysScheduledTaskRecord, Boolean> LOG_FINISH = createField(DSL.name("log_finish"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.sys_scheduled_task.last_start_time</code>.
     */
    public final TableField<SysScheduledTaskRecord, OffsetDateTime> LAST_START_TIME = createField(DSL.name("last_start_time"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column <code>public.sys_scheduled_task.last_start_server</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> LAST_START_SERVER = createField(DSL.name("last_start_server"), SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>public.sys_scheduled_task.description</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>public.sys_scheduled_task.cron</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> CRON = createField(DSL.name("cron"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.sys_scheduled_task.scheduling_type</code>.
     */
    public final TableField<SysScheduledTaskRecord, String> SCHEDULING_TYPE = createField(DSL.name("scheduling_type"), SQLDataType.VARCHAR(1).defaultValue(DSL.field("'P'::character varying", SQLDataType.VARCHAR)), this, "");

    private SysScheduledTask(Name alias, Table<SysScheduledTaskRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysScheduledTask(Name alias, Table<SysScheduledTaskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.sys_scheduled_task</code> table reference
     */
    public SysScheduledTask(String alias) {
        this(DSL.name(alias), SYS_SCHEDULED_TASK);
    }

    /**
     * Create an aliased <code>public.sys_scheduled_task</code> table reference
     */
    public SysScheduledTask(Name alias) {
        this(alias, SYS_SCHEDULED_TASK);
    }

    /**
     * Create a <code>public.sys_scheduled_task</code> table reference
     */
    public SysScheduledTask() {
        this(DSL.name("sys_scheduled_task"), null);
    }

    public <O extends Record> SysScheduledTask(Table<O> child, ForeignKey<O, SysScheduledTaskRecord> key) {
        super(child, key, SYS_SCHEDULED_TASK);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<SysScheduledTaskRecord> getPrimaryKey() {
        return Keys.SYS_SCHEDULED_TASK_PKEY;
    }

    @Override
    public SysScheduledTask as(String alias) {
        return new SysScheduledTask(DSL.name(alias), this);
    }

    @Override
    public SysScheduledTask as(Name alias) {
        return new SysScheduledTask(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysScheduledTask rename(String name) {
        return new SysScheduledTask(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysScheduledTask rename(Name name) {
        return new SysScheduledTask(name, null);
    }
}
