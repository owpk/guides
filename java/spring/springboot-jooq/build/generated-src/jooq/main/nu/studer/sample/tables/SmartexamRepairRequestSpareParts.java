/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import nu.studer.sample.Indexes;
import nu.studer.sample.Keys;
import nu.studer.sample.Public;
import nu.studer.sample.tables.records.SmartexamRepairRequestSparePartsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartexamRepairRequestSpareParts extends TableImpl<SmartexamRepairRequestSparePartsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>public.smartexam_repair_request_spare_parts</code>
     */
    public static final SmartexamRepairRequestSpareParts SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS = new SmartexamRepairRequestSpareParts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SmartexamRepairRequestSparePartsRecord> getRecordType() {
        return SmartexamRepairRequestSparePartsRecord.class;
    }

    /**
     * The column <code>public.smartexam_repair_request_spare_parts.id</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.version</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, Integer> VERSION = createField(DSL.name("version"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.create_ts</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, LocalDateTime> CREATE_TS = createField(DSL.name("create_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.created_by</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.update_ts</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, LocalDateTime> UPDATE_TS = createField(DSL.name("update_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.updated_by</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.delete_ts</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, LocalDateTime> DELETE_TS = createField(DSL.name("delete_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.deleted_by</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, String> DELETED_BY = createField(DSL.name("deleted_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.smartexam_repair_request_spare_parts.name</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.quantity</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, String> QUANTITY = createField(DSL.name("quantity"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.spisano_vitk</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, Boolean> SPISANO_VITK = createField(DSL.name("spisano_vitk"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.repair_request_id</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, UUID> REPAIR_REQUEST_ID = createField(DSL.name("repair_request_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.price</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, Double> PRICE = createField(DSL.name("price"), SQLDataType.DOUBLE, this, "");

    /**
     * The column
     * <code>public.smartexam_repair_request_spare_parts.repair_request_instance_id</code>.
     */
    public final TableField<SmartexamRepairRequestSparePartsRecord, UUID> REPAIR_REQUEST_INSTANCE_ID = createField(DSL.name("repair_request_instance_id"), SQLDataType.UUID, this, "");

    private SmartexamRepairRequestSpareParts(Name alias, Table<SmartexamRepairRequestSparePartsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SmartexamRepairRequestSpareParts(Name alias, Table<SmartexamRepairRequestSparePartsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>public.smartexam_repair_request_spare_parts</code> table reference
     */
    public SmartexamRepairRequestSpareParts(String alias) {
        this(DSL.name(alias), SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS);
    }

    /**
     * Create an aliased
     * <code>public.smartexam_repair_request_spare_parts</code> table reference
     */
    public SmartexamRepairRequestSpareParts(Name alias) {
        this(alias, SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS);
    }

    /**
     * Create a <code>public.smartexam_repair_request_spare_parts</code> table
     * reference
     */
    public SmartexamRepairRequestSpareParts() {
        this(DSL.name("smartexam_repair_request_spare_parts"), null);
    }

    public <O extends Record> SmartexamRepairRequestSpareParts(Table<O> child, ForeignKey<O, SmartexamRepairRequestSparePartsRecord> key) {
        super(child, key, SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.IDX_SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS_ON_REPAIR_REQUEST, Indexes.IDX_SMARTEXAM_REPAIREQUESPAREPARTS_ON_REPAIR_REQUEST_INSTANCE);
    }

    @Override
    public UniqueKey<SmartexamRepairRequestSparePartsRecord> getPrimaryKey() {
        return Keys.SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS_PKEY;
    }

    @Override
    public List<ForeignKey<SmartexamRepairRequestSparePartsRecord, ?>> getReferences() {
        return Arrays.asList(Keys.SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS__FK_SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS_ON_REPAIR_REQUEST, Keys.SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS__FK_SMARTEXAM_REPAIREQUESPAREPARTS_ON_REPAIR_REQUEST_INSTANCE);
    }

    private transient SmartexamRepairRequest _smartexamRepairRequest;
    private transient SmartexamRepairRequestInstance _smartexamRepairRequestInstance;

    public SmartexamRepairRequest smartexamRepairRequest() {
        if (_smartexamRepairRequest == null)
            _smartexamRepairRequest = new SmartexamRepairRequest(this, Keys.SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS__FK_SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS_ON_REPAIR_REQUEST);

        return _smartexamRepairRequest;
    }

    public SmartexamRepairRequestInstance smartexamRepairRequestInstance() {
        if (_smartexamRepairRequestInstance == null)
            _smartexamRepairRequestInstance = new SmartexamRepairRequestInstance(this, Keys.SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS__FK_SMARTEXAM_REPAIREQUESPAREPARTS_ON_REPAIR_REQUEST_INSTANCE);

        return _smartexamRepairRequestInstance;
    }

    @Override
    public SmartexamRepairRequestSpareParts as(String alias) {
        return new SmartexamRepairRequestSpareParts(DSL.name(alias), this);
    }

    @Override
    public SmartexamRepairRequestSpareParts as(Name alias) {
        return new SmartexamRepairRequestSpareParts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SmartexamRepairRequestSpareParts rename(String name) {
        return new SmartexamRepairRequestSpareParts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SmartexamRepairRequestSpareParts rename(Name name) {
        return new SmartexamRepairRequestSpareParts(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, String, String, Boolean, UUID, Double, UUID> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
