/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import nu.studer.sample.tables.SmartexamEmployee;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartexamEmployeeRecord extends UpdatableRecordImpl<SmartexamEmployeeRecord> implements Record17<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, UUID, String, String, UUID, String, String, UUID, UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.smartexam_employee.id</code>.
     */
    public SmartexamEmployeeRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.smartexam_employee.version</code>.
     */
    public SmartexamEmployeeRecord setVersion(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.smartexam_employee.create_ts</code>.
     */
    public SmartexamEmployeeRecord setCreateTs(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.smartexam_employee.created_by</code>.
     */
    public SmartexamEmployeeRecord setCreatedBy(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.smartexam_employee.update_ts</code>.
     */
    public SmartexamEmployeeRecord setUpdateTs(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.smartexam_employee.updated_by</code>.
     */
    public SmartexamEmployeeRecord setUpdatedBy(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.smartexam_employee.delete_ts</code>.
     */
    public SmartexamEmployeeRecord setDeleteTs(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.smartexam_employee.deleted_by</code>.
     */
    public SmartexamEmployeeRecord setDeletedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.deleted_by</code>.
     */
    public String getDeletedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.smartexam_employee.division_id</code>.
     */
    public SmartexamEmployeeRecord setDivisionId(UUID value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.division_id</code>.
     */
    public UUID getDivisionId() {
        return (UUID) get(8);
    }

    /**
     * Setter for <code>public.smartexam_employee.phone</code>.
     */
    public SmartexamEmployeeRecord setPhone(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.phone</code>.
     */
    public String getPhone() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.smartexam_employee.email</code>.
     */
    public SmartexamEmployeeRecord setEmail(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.email</code>.
     */
    public String getEmail() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.smartexam_employee.position_id</code>.
     */
    public SmartexamEmployeeRecord setPositionId(UUID value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.position_id</code>.
     */
    public UUID getPositionId() {
        return (UUID) get(11);
    }

    /**
     * Setter for <code>public.smartexam_employee.ext_uuid</code>.
     */
    public SmartexamEmployeeRecord setExtUuid(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.ext_uuid</code>.
     */
    public String getExtUuid() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.smartexam_employee.name</code>.
     */
    public SmartexamEmployeeRecord setName(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.name</code>.
     */
    public String getName() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.smartexam_employee.user_id</code>.
     */
    public SmartexamEmployeeRecord setUserId(UUID value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(14);
    }

    /**
     * Setter for <code>public.smartexam_employee.user_from1c_id</code>.
     */
    public SmartexamEmployeeRecord setUserFrom1cId(UUID value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.user_from1c_id</code>.
     */
    public UUID getUserFrom1cId() {
        return (UUID) get(15);
    }

    /**
     * Setter for <code>public.smartexam_employee.employee_from1c_id</code>.
     */
    public SmartexamEmployeeRecord setEmployeeFrom1cId(UUID value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_employee.employee_from1c_id</code>.
     */
    public UUID getEmployeeFrom1cId() {
        return (UUID) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, UUID, String, String, UUID, String, String, UUID, UUID, UUID> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, UUID, String, String, UUID, String, String, UUID, UUID, UUID> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.VERSION;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.CREATE_TS;
    }

    @Override
    public Field<String> field4() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.UPDATE_TS;
    }

    @Override
    public Field<String> field6() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.UPDATED_BY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.DELETE_TS;
    }

    @Override
    public Field<String> field8() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.DELETED_BY;
    }

    @Override
    public Field<UUID> field9() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.DIVISION_ID;
    }

    @Override
    public Field<String> field10() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.PHONE;
    }

    @Override
    public Field<String> field11() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.EMAIL;
    }

    @Override
    public Field<UUID> field12() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.POSITION_ID;
    }

    @Override
    public Field<String> field13() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.EXT_UUID;
    }

    @Override
    public Field<String> field14() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.NAME;
    }

    @Override
    public Field<UUID> field15() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.USER_ID;
    }

    @Override
    public Field<UUID> field16() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.USER_FROM1C_ID;
    }

    @Override
    public Field<UUID> field17() {
        return SmartexamEmployee.SMARTEXAM_EMPLOYEE.EMPLOYEE_FROM1C_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTs();
    }

    @Override
    public String component4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateTs();
    }

    @Override
    public String component6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime component7() {
        return getDeleteTs();
    }

    @Override
    public String component8() {
        return getDeletedBy();
    }

    @Override
    public UUID component9() {
        return getDivisionId();
    }

    @Override
    public String component10() {
        return getPhone();
    }

    @Override
    public String component11() {
        return getEmail();
    }

    @Override
    public UUID component12() {
        return getPositionId();
    }

    @Override
    public String component13() {
        return getExtUuid();
    }

    @Override
    public String component14() {
        return getName();
    }

    @Override
    public UUID component15() {
        return getUserId();
    }

    @Override
    public UUID component16() {
        return getUserFrom1cId();
    }

    @Override
    public UUID component17() {
        return getEmployeeFrom1cId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTs();
    }

    @Override
    public String value4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateTs();
    }

    @Override
    public String value6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime value7() {
        return getDeleteTs();
    }

    @Override
    public String value8() {
        return getDeletedBy();
    }

    @Override
    public UUID value9() {
        return getDivisionId();
    }

    @Override
    public String value10() {
        return getPhone();
    }

    @Override
    public String value11() {
        return getEmail();
    }

    @Override
    public UUID value12() {
        return getPositionId();
    }

    @Override
    public String value13() {
        return getExtUuid();
    }

    @Override
    public String value14() {
        return getName();
    }

    @Override
    public UUID value15() {
        return getUserId();
    }

    @Override
    public UUID value16() {
        return getUserFrom1cId();
    }

    @Override
    public UUID value17() {
        return getEmployeeFrom1cId();
    }

    @Override
    public SmartexamEmployeeRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value3(LocalDateTime value) {
        setCreateTs(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value4(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value5(LocalDateTime value) {
        setUpdateTs(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value7(LocalDateTime value) {
        setDeleteTs(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value8(String value) {
        setDeletedBy(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value9(UUID value) {
        setDivisionId(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value10(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value11(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value12(UUID value) {
        setPositionId(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value13(String value) {
        setExtUuid(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value14(String value) {
        setName(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value15(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value16(UUID value) {
        setUserFrom1cId(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord value17(UUID value) {
        setEmployeeFrom1cId(value);
        return this;
    }

    @Override
    public SmartexamEmployeeRecord values(UUID value1, Integer value2, LocalDateTime value3, String value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8, UUID value9, String value10, String value11, UUID value12, String value13, String value14, UUID value15, UUID value16, UUID value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SmartexamEmployeeRecord
     */
    public SmartexamEmployeeRecord() {
        super(SmartexamEmployee.SMARTEXAM_EMPLOYEE);
    }

    /**
     * Create a detached, initialised SmartexamEmployeeRecord
     */
    public SmartexamEmployeeRecord(UUID id, Integer version, LocalDateTime createTs, String createdBy, LocalDateTime updateTs, String updatedBy, LocalDateTime deleteTs, String deletedBy, UUID divisionId, String phone, String email, UUID positionId, String extUuid, String name, UUID userId, UUID userFrom1cId, UUID employeeFrom1cId) {
        super(SmartexamEmployee.SMARTEXAM_EMPLOYEE);

        setId(id);
        setVersion(version);
        setCreateTs(createTs);
        setCreatedBy(createdBy);
        setUpdateTs(updateTs);
        setUpdatedBy(updatedBy);
        setDeleteTs(deleteTs);
        setDeletedBy(deletedBy);
        setDivisionId(divisionId);
        setPhone(phone);
        setEmail(email);
        setPositionId(positionId);
        setExtUuid(extUuid);
        setName(name);
        setUserId(userId);
        setUserFrom1cId(userFrom1cId);
        setEmployeeFrom1cId(employeeFrom1cId);
    }

    /**
     * Create a detached, initialised SmartexamEmployeeRecord
     */
    public SmartexamEmployeeRecord(nu.studer.sample.tables.pojos.SmartexamEmployee value) {
        super(SmartexamEmployee.SMARTEXAM_EMPLOYEE);

        if (value != null) {
            setId(value.getId());
            setVersion(value.getVersion());
            setCreateTs(value.getCreateTs());
            setCreatedBy(value.getCreatedBy());
            setUpdateTs(value.getUpdateTs());
            setUpdatedBy(value.getUpdatedBy());
            setDeleteTs(value.getDeleteTs());
            setDeletedBy(value.getDeletedBy());
            setDivisionId(value.getDivisionId());
            setPhone(value.getPhone());
            setEmail(value.getEmail());
            setPositionId(value.getPositionId());
            setExtUuid(value.getExtUuid());
            setName(value.getName());
            setUserId(value.getUserId());
            setUserFrom1cId(value.getUserFrom1cId());
            setEmployeeFrom1cId(value.getEmployeeFrom1cId());
        }
    }
}
