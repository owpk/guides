/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample;


import nu.studer.sample.tables.CompanyaddonBaseCompany;
import nu.studer.sample.tables.CompanyaddonBaseContact;
import nu.studer.sample.tables.CompanyaddonBaseDepartment;
import nu.studer.sample.tables.CompanyaddonBaseDepartmentPosition;
import nu.studer.sample.tables.CompanyaddonBaseDirection;
import nu.studer.sample.tables.CompanyaddonBaseEmail;
import nu.studer.sample.tables.CompanyaddonBaseEmployee;
import nu.studer.sample.tables.CompanyaddonBaseEmployeePosition;
import nu.studer.sample.tables.CompanyaddonBaseOrganizationalUnit;
import nu.studer.sample.tables.CompanyaddonBaseOrganizationalUnitEmployee;
import nu.studer.sample.tables.CompanyaddonBasePhoneNumber;
import nu.studer.sample.tables.CompanyaddonBaseProject;
import nu.studer.sample.tables.CompanyaddonBaseProjectEmployee;
import nu.studer.sample.tables.DdcrdDiagnoseExecutionLog;
import nu.studer.sample.tables.Import1cstpSettings;
import nu.studer.sample.tables.SecConstraint;
import nu.studer.sample.tables.SecEntityLog;
import nu.studer.sample.tables.SecFilter;
import nu.studer.sample.tables.SecGroup;
import nu.studer.sample.tables.SecLocalizedConstraintMsg;
import nu.studer.sample.tables.SecLoggedAttr;
import nu.studer.sample.tables.SecPermission;
import nu.studer.sample.tables.SecPresentation;
import nu.studer.sample.tables.SecRememberMe;
import nu.studer.sample.tables.SecRole;
import nu.studer.sample.tables.SecScreenHistory;
import nu.studer.sample.tables.SecSearchFolder;
import nu.studer.sample.tables.SecSessionAttr;
import nu.studer.sample.tables.SecSessionLog;
import nu.studer.sample.tables.SecUser;
import nu.studer.sample.tables.SecUserRole;
import nu.studer.sample.tables.SecUserSubstitution;
import nu.studer.sample.tables.SmartexamBillsSupplier;
import nu.studer.sample.tables.SmartexamCheckItemValuePhotos;
import nu.studer.sample.tables.SmartexamCheckListWorkValue;
import nu.studer.sample.tables.SmartexamCheckListWorks;
import nu.studer.sample.tables.SmartexamDailyTransportStatus;
import nu.studer.sample.tables.SmartexamDivisionAccessControl;
import nu.studer.sample.tables.SmartexamEmployee;
import nu.studer.sample.tables.SmartexamExecutor;
import nu.studer.sample.tables.SmartexamFines;
import nu.studer.sample.tables.SmartexamInstanceDate;
import nu.studer.sample.tables.SmartexamKpiInstanceValue;
import nu.studer.sample.tables.SmartexamLimitsTs;
import nu.studer.sample.tables.SmartexamLogbook;
import nu.studer.sample.tables.SmartexamNfcTag;
import nu.studer.sample.tables.SmartexamOrganization;
import nu.studer.sample.tables.SmartexamPlan;
import nu.studer.sample.tables.SmartexamPositions;
import nu.studer.sample.tables.SmartexamRepairBlock;
import nu.studer.sample.tables.SmartexamRepairBlockStatus;
import nu.studer.sample.tables.SmartexamRepairRequest;
import nu.studer.sample.tables.SmartexamRepairRequestInstance;
import nu.studer.sample.tables.SmartexamRepairRequestSpareParts;
import nu.studer.sample.tables.SmartexamRepairRequestWork;
import nu.studer.sample.tables.SmartexamRepairZone;
import nu.studer.sample.tables.SmartexamRequirementsForSp;
import nu.studer.sample.tables.SmartexamRequirementsForSpItems_U74375;
import nu.studer.sample.tables.SmartexamRouteList;
import nu.studer.sample.tables.SmartexamServiceReportInstance;
import nu.studer.sample.tables.SmartexamServiceReportInstanceTotal;
import nu.studer.sample.tables.SmartexamServiceReportStatistics;
import nu.studer.sample.tables.SmartexamShop;
import nu.studer.sample.tables.SmartexamStandardTime;
import nu.studer.sample.tables.SmartexamStock;
import nu.studer.sample.tables.SmartexamTransportCosts;
import nu.studer.sample.tables.SmartexamTransportCostsItem;
import nu.studer.sample.tables.SmartexamTransportEmployeeLink;
import nu.studer.sample.tables.SmartexamTransportFrom1c;
import nu.studer.sample.tables.SmartexamTransportMileageList;
import nu.studer.sample.tables.SmartexamTransportTypeFrom1c;
import nu.studer.sample.tables.SmartexamaddonBaseDocuments;
import nu.studer.sample.tables.SmartexamaddonBaseGarbageContainer;
import nu.studer.sample.tables.SmartexamaddonBaseLicense;
import nu.studer.sample.tables.SmartexamaddonBaseTransport;
import nu.studer.sample.tables.SmartexamaddonBaseTransportType;
import nu.studer.sample.tables.SmartmonCheckItemValue;
import nu.studer.sample.tables.SmartmonCheckList;
import nu.studer.sample.tables.SmartmonCheckListInstance;
import nu.studer.sample.tables.SmartmonCheckListItem;
import nu.studer.sample.tables.SmartmonDivision;
import nu.studer.sample.tables.SmartmonTransport;
import nu.studer.sample.tables.SmartmonTransportType;
import nu.studer.sample.tables.SysAttrValue;
import nu.studer.sample.tables.SysCategory;
import nu.studer.sample.tables.SysCategoryAttr;
import nu.studer.sample.tables.SysConfig;
import nu.studer.sample.tables.SysEntitySnapshot;
import nu.studer.sample.tables.SysEntityStatistics;
import nu.studer.sample.tables.SysFtsQueue;
import nu.studer.sample.tables.SysQueryResult;
import nu.studer.sample.tables.SysScheduledExecution;
import nu.studer.sample.tables.SysSendingAttachment;
import nu.studer.sample.tables.SysSendingMessage;
import nu.studer.sample.tables.SysServer;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables in public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index IDX_CAT_ATTR_ENT_TYPE_AND_CODE = Internal.createIndex(DSL.name("idx_cat_attr_ent_type_and_code"), SysCategoryAttr.SYS_CATEGORY_ATTR, new OrderField[] { SysCategoryAttr.SYS_CATEGORY_ATTR.CATEGORY_ENTITY_TYPE, SysCategoryAttr.SYS_CATEGORY_ATTR.CODE }, true);
    public static final Index IDX_COMPANYADDON_BASE_COMPANY_ON_HEAD_PERSON = Internal.createIndex(DSL.name("idx_companyaddon_base_company_on_head_person"), CompanyaddonBaseCompany.COMPANYADDON_BASE_COMPANY, new OrderField[] { CompanyaddonBaseCompany.COMPANYADDON_BASE_COMPANY.HEAD_PERSON }, false);
    public static final Index IDX_COMPANYADDON_BASE_COMPANY_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_company_uk_kafka_key"), CompanyaddonBaseCompany.COMPANYADDON_BASE_COMPANY, new OrderField[] { CompanyaddonBaseCompany.COMPANYADDON_BASE_COMPANY.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_CONTACT_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_contact_uk_kafka_key"), CompanyaddonBaseContact.COMPANYADDON_BASE_CONTACT, new OrderField[] { CompanyaddonBaseContact.COMPANYADDON_BASE_CONTACT.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_DEPARTMENT_ON_COMPANY = Internal.createIndex(DSL.name("idx_companyaddon_base_department_on_company"), CompanyaddonBaseDepartment.COMPANYADDON_BASE_DEPARTMENT, new OrderField[] { CompanyaddonBaseDepartment.COMPANYADDON_BASE_DEPARTMENT.COMPANY_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_DEPARTMENT_ON_HEAD_PERSON = Internal.createIndex(DSL.name("idx_companyaddon_base_department_on_head_person"), CompanyaddonBaseDepartment.COMPANYADDON_BASE_DEPARTMENT, new OrderField[] { CompanyaddonBaseDepartment.COMPANYADDON_BASE_DEPARTMENT.HEAD_PERSON_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_DEPARTMENT_ON_PARENT_DEPARTMENT = Internal.createIndex(DSL.name("idx_companyaddon_base_department_on_parent_department"), CompanyaddonBaseDepartment.COMPANYADDON_BASE_DEPARTMENT, new OrderField[] { CompanyaddonBaseDepartment.COMPANYADDON_BASE_DEPARTMENT.PARENT_DEPARTMENT_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_DEPARTMENT_POSITION_ON_BASE_EMPLOYEE = Internal.createIndex(DSL.name("idx_companyaddon_base_department_position_on_base_employee"), CompanyaddonBaseDepartmentPosition.COMPANYADDON_BASE_DEPARTMENT_POSITION, new OrderField[] { CompanyaddonBaseDepartmentPosition.COMPANYADDON_BASE_DEPARTMENT_POSITION.BASE_EMPLOYEE_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_DEPARTMENT_POSITION_ON_COMPANY = Internal.createIndex(DSL.name("idx_companyaddon_base_department_position_on_company"), CompanyaddonBaseDepartmentPosition.COMPANYADDON_BASE_DEPARTMENT_POSITION, new OrderField[] { CompanyaddonBaseDepartmentPosition.COMPANYADDON_BASE_DEPARTMENT_POSITION.COMPANY_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_DEPARTMENT_POSITION_ON_DEPARTMENT = Internal.createIndex(DSL.name("idx_companyaddon_base_department_position_on_department"), CompanyaddonBaseDepartmentPosition.COMPANYADDON_BASE_DEPARTMENT_POSITION, new OrderField[] { CompanyaddonBaseDepartmentPosition.COMPANYADDON_BASE_DEPARTMENT_POSITION.DEPARTMENT_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_DEPARTMENT_POSITION_ON_POSITION = Internal.createIndex(DSL.name("idx_companyaddon_base_department_position_on_position"), CompanyaddonBaseDepartmentPosition.COMPANYADDON_BASE_DEPARTMENT_POSITION, new OrderField[] { CompanyaddonBaseDepartmentPosition.COMPANYADDON_BASE_DEPARTMENT_POSITION.POSITION_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_DEPARTMENT_POSITION_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_department_position_uk_kafka_key"), CompanyaddonBaseDepartmentPosition.COMPANYADDON_BASE_DEPARTMENT_POSITION, new OrderField[] { CompanyaddonBaseDepartmentPosition.COMPANYADDON_BASE_DEPARTMENT_POSITION.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_DEPARTMENT_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_department_uk_kafka_key"), CompanyaddonBaseDepartment.COMPANYADDON_BASE_DEPARTMENT, new OrderField[] { CompanyaddonBaseDepartment.COMPANYADDON_BASE_DEPARTMENT.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_DIRECTION_ON_DEPUTY_HEAD = Internal.createIndex(DSL.name("idx_companyaddon_base_direction_on_deputy_head"), CompanyaddonBaseDirection.COMPANYADDON_BASE_DIRECTION, new OrderField[] { CompanyaddonBaseDirection.COMPANYADDON_BASE_DIRECTION.DEPUTY_HEAD_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_DIRECTION_ON_HEAD_PERSON = Internal.createIndex(DSL.name("idx_companyaddon_base_direction_on_head_person"), CompanyaddonBaseDirection.COMPANYADDON_BASE_DIRECTION, new OrderField[] { CompanyaddonBaseDirection.COMPANYADDON_BASE_DIRECTION.HEAD_PERSON_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_DIRECTION_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_direction_uk_kafka_key"), CompanyaddonBaseDirection.COMPANYADDON_BASE_DIRECTION, new OrderField[] { CompanyaddonBaseDirection.COMPANYADDON_BASE_DIRECTION.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_DIRECTION_UK_NAME = Internal.createIndex(DSL.name("idx_companyaddon_base_direction_uk_name"), CompanyaddonBaseDirection.COMPANYADDON_BASE_DIRECTION, new OrderField[] { CompanyaddonBaseDirection.COMPANYADDON_BASE_DIRECTION.NAME }, true);
    public static final Index IDX_COMPANYADDON_BASE_EMAIL_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_email_uk_kafka_key"), CompanyaddonBaseEmail.COMPANYADDON_BASE_EMAIL, new OrderField[] { CompanyaddonBaseEmail.COMPANYADDON_BASE_EMAIL.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_EMPLOYEE_ON_CONTACTS = Internal.createIndex(DSL.name("idx_companyaddon_base_employee_on_contacts"), CompanyaddonBaseEmployee.COMPANYADDON_BASE_EMPLOYEE, new OrderField[] { CompanyaddonBaseEmployee.COMPANYADDON_BASE_EMPLOYEE.CONTACTS_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_EMPLOYEE_ON_USER = Internal.createIndex(DSL.name("idx_companyaddon_base_employee_on_user"), CompanyaddonBaseEmployee.COMPANYADDON_BASE_EMPLOYEE, new OrderField[] { CompanyaddonBaseEmployee.COMPANYADDON_BASE_EMPLOYEE.USER_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_EMPLOYEE_POSITION_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_employee_position_uk_kafka_key"), CompanyaddonBaseEmployeePosition.COMPANYADDON_BASE_EMPLOYEE_POSITION, new OrderField[] { CompanyaddonBaseEmployeePosition.COMPANYADDON_BASE_EMPLOYEE_POSITION.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_EMPLOYEE_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_employee_uk_kafka_key"), CompanyaddonBaseEmployee.COMPANYADDON_BASE_EMPLOYEE, new OrderField[] { CompanyaddonBaseEmployee.COMPANYADDON_BASE_EMPLOYEE.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_EMPLOYEE_ON_EMPLOYEE = Internal.createIndex(DSL.name("idx_companyaddon_base_organizational_unit_employee_on_employee"), CompanyaddonBaseOrganizationalUnitEmployee.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_EMPLOYEE, new OrderField[] { CompanyaddonBaseOrganizationalUnitEmployee.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_EMPLOYEE.EMPLOYEE }, false);
    public static final Index IDX_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_ON_HEAD_PERSON = Internal.createIndex(DSL.name("idx_companyaddon_base_organizational_unit_on_head_person"), CompanyaddonBaseOrganizationalUnit.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT, new OrderField[] { CompanyaddonBaseOrganizationalUnit.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT.HEAD_PERSON }, false);
    public static final Index IDX_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_ON_PARENT_UNIT = Internal.createIndex(DSL.name("idx_companyaddon_base_organizational_unit_on_parent_unit"), CompanyaddonBaseOrganizationalUnit.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT, new OrderField[] { CompanyaddonBaseOrganizationalUnit.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT.PARENT_UNIT }, false);
    public static final Index IDX_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_UK_EMAIL = Internal.createIndex(DSL.name("idx_companyaddon_base_organizational_unit_uk_email"), CompanyaddonBaseOrganizationalUnit.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT, new OrderField[] { CompanyaddonBaseOrganizationalUnit.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT.EMAIL }, true);
    public static final Index IDX_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_organizational_unit_uk_kafka_key"), CompanyaddonBaseOrganizationalUnit.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT, new OrderField[] { CompanyaddonBaseOrganizationalUnit.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_UK_NAME = Internal.createIndex(DSL.name("idx_companyaddon_base_organizational_unit_uk_name"), CompanyaddonBaseOrganizationalUnit.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT, new OrderField[] { CompanyaddonBaseOrganizationalUnit.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT.NAME }, true);
    public static final Index IDX_COMPANYADDON_BASE_PHONE_NUMBER_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_phone_number_uk_kafka_key"), CompanyaddonBasePhoneNumber.COMPANYADDON_BASE_PHONE_NUMBER, new OrderField[] { CompanyaddonBasePhoneNumber.COMPANYADDON_BASE_PHONE_NUMBER.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_PROJECT_EMPLOYEE_ON_EMPLOYEE = Internal.createIndex(DSL.name("idx_companyaddon_base_project_employee_on_employee"), CompanyaddonBaseProjectEmployee.COMPANYADDON_BASE_PROJECT_EMPLOYEE, new OrderField[] { CompanyaddonBaseProjectEmployee.COMPANYADDON_BASE_PROJECT_EMPLOYEE.EMPLOYEE_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_PROJECT_EMPLOYEE_ON_PROJECT = Internal.createIndex(DSL.name("idx_companyaddon_base_project_employee_on_project"), CompanyaddonBaseProjectEmployee.COMPANYADDON_BASE_PROJECT_EMPLOYEE, new OrderField[] { CompanyaddonBaseProjectEmployee.COMPANYADDON_BASE_PROJECT_EMPLOYEE.PROJECT_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_PROJECT_EMPLOYEE_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_project_employee_uk_kafka_key"), CompanyaddonBaseProjectEmployee.COMPANYADDON_BASE_PROJECT_EMPLOYEE, new OrderField[] { CompanyaddonBaseProjectEmployee.COMPANYADDON_BASE_PROJECT_EMPLOYEE.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_PROJECT_EMPLOYEE_UNQ = Internal.createIndex(DSL.name("idx_companyaddon_base_project_employee_unq"), CompanyaddonBaseProjectEmployee.COMPANYADDON_BASE_PROJECT_EMPLOYEE, new OrderField[] { CompanyaddonBaseProjectEmployee.COMPANYADDON_BASE_PROJECT_EMPLOYEE.PROJECT_ID, CompanyaddonBaseProjectEmployee.COMPANYADDON_BASE_PROJECT_EMPLOYEE.EMPLOYEE_ID }, true);
    public static final Index IDX_COMPANYADDON_BASE_PROJECT_ON_DEPUTY_HEAD_PERSON = Internal.createIndex(DSL.name("idx_companyaddon_base_project_on_deputy_head_person"), CompanyaddonBaseProject.COMPANYADDON_BASE_PROJECT, new OrderField[] { CompanyaddonBaseProject.COMPANYADDON_BASE_PROJECT.DEPUTY_HEAD_PERSON_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_PROJECT_ON_HEAD_PERSON = Internal.createIndex(DSL.name("idx_companyaddon_base_project_on_head_person"), CompanyaddonBaseProject.COMPANYADDON_BASE_PROJECT, new OrderField[] { CompanyaddonBaseProject.COMPANYADDON_BASE_PROJECT.HEAD_PERSON_ID }, false);
    public static final Index IDX_COMPANYADDON_BASE_PROJECT_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_base_project_uk_kafka_key"), CompanyaddonBaseProject.COMPANYADDON_BASE_PROJECT, new OrderField[] { CompanyaddonBaseProject.COMPANYADDON_BASE_PROJECT.KAFKA_KEY }, true);
    public static final Index IDX_COMPANYADDON_BASE_PROJECT_UK_NAME = Internal.createIndex(DSL.name("idx_companyaddon_base_project_uk_name"), CompanyaddonBaseProject.COMPANYADDON_BASE_PROJECT, new OrderField[] { CompanyaddonBaseProject.COMPANYADDON_BASE_PROJECT.NAME }, true);
    public static final Index IDX_COMPANYADDON_BASEORGANIUNITEMPLOY_ON_ORGANIZATIONAL_UNIT = Internal.createIndex(DSL.name("idx_companyaddon_baseorganiunitemploy_on_organizational_unit"), CompanyaddonBaseOrganizationalUnitEmployee.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_EMPLOYEE, new OrderField[] { CompanyaddonBaseOrganizationalUnitEmployee.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_EMPLOYEE.ORGANIZATIONAL_UNIT }, false);
    public static final Index IDX_COMPANYADDON_BASEORGANIUNITEMPLOY_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_companyaddon_baseorganiunitemploy_uk_kafka_key"), CompanyaddonBaseOrganizationalUnitEmployee.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_EMPLOYEE, new OrderField[] { CompanyaddonBaseOrganizationalUnitEmployee.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_EMPLOYEE.KAFKA_KEY }, true);
    public static final Index IDX_DDCRD_DIAGNOSE_EXECUTION_LOG_EXECUTION_RESULT_FILE = Internal.createIndex(DSL.name("idx_ddcrd_diagnose_execution_log_execution_result_file"), DdcrdDiagnoseExecutionLog.DDCRD_DIAGNOSE_EXECUTION_LOG, new OrderField[] { DdcrdDiagnoseExecutionLog.DDCRD_DIAGNOSE_EXECUTION_LOG.EXECUTION_RESULT_FILE_ID }, false);
    public static final Index IDX_IMPORT1CSTP_SETTINGS_UK_KEY_ = Internal.createIndex(DSL.name("idx_import1cstp_settings_uk_key_"), Import1cstpSettings.IMPORT1CSTP_SETTINGS, new OrderField[] { Import1cstpSettings.IMPORT1CSTP_SETTINGS.KEY_ }, true);
    public static final Index IDX_SEC_CONSTRAINT_GROUP = Internal.createIndex(DSL.name("idx_sec_constraint_group"), SecConstraint.SEC_CONSTRAINT, new OrderField[] { SecConstraint.SEC_CONSTRAINT.GROUP_ID }, false);
    public static final Index IDX_SEC_ENTITY_LOG_ENTITY_ID = Internal.createIndex(DSL.name("idx_sec_entity_log_entity_id"), SecEntityLog.SEC_ENTITY_LOG, new OrderField[] { SecEntityLog.SEC_ENTITY_LOG.ENTITY_ID }, false);
    public static final Index IDX_SEC_ENTITY_LOG_IENTITY_ID = Internal.createIndex(DSL.name("idx_sec_entity_log_ientity_id"), SecEntityLog.SEC_ENTITY_LOG, new OrderField[] { SecEntityLog.SEC_ENTITY_LOG.INT_ENTITY_ID }, false);
    public static final Index IDX_SEC_ENTITY_LOG_LENTITY_ID = Internal.createIndex(DSL.name("idx_sec_entity_log_lentity_id"), SecEntityLog.SEC_ENTITY_LOG, new OrderField[] { SecEntityLog.SEC_ENTITY_LOG.LONG_ENTITY_ID }, false);
    public static final Index IDX_SEC_ENTITY_LOG_SENTITY_ID = Internal.createIndex(DSL.name("idx_sec_entity_log_sentity_id"), SecEntityLog.SEC_ENTITY_LOG, new OrderField[] { SecEntityLog.SEC_ENTITY_LOG.STRING_ENTITY_ID }, false);
    public static final Index IDX_SEC_FILTER_COMPONENT_USER = Internal.createIndex(DSL.name("idx_sec_filter_component_user"), SecFilter.SEC_FILTER, new OrderField[] { SecFilter.SEC_FILTER.COMPONENT, SecFilter.SEC_FILTER.USER_ID }, false);
    public static final Index IDX_SEC_GROUP_UNIQ_NAME = Internal.createIndex(DSL.name("idx_sec_group_uniq_name"), SecGroup.SEC_GROUP, new OrderField[] { SecGroup.SEC_GROUP.NAME }, true);
    public static final Index IDX_SEC_GROUP_UNIQ_NAME_SYS_TENANT_ID_NN = Internal.createIndex(DSL.name("idx_sec_group_uniq_name_sys_tenant_id_nn"), SecGroup.SEC_GROUP, new OrderField[] { SecGroup.SEC_GROUP.NAME, SecGroup.SEC_GROUP.SYS_TENANT_ID }, true);
    public static final Index IDX_SEC_LOC_CNSTRNT_MSG_UNIQUE = Internal.createIndex(DSL.name("idx_sec_loc_cnstrnt_msg_unique"), SecLocalizedConstraintMsg.SEC_LOCALIZED_CONSTRAINT_MSG, new OrderField[] { SecLocalizedConstraintMsg.SEC_LOCALIZED_CONSTRAINT_MSG.ENTITY_NAME, SecLocalizedConstraintMsg.SEC_LOCALIZED_CONSTRAINT_MSG.OPERATION_TYPE }, true);
    public static final Index IDX_SEC_LOGGED_ATTR_ENTITY = Internal.createIndex(DSL.name("idx_sec_logged_attr_entity"), SecLoggedAttr.SEC_LOGGED_ATTR, new OrderField[] { SecLoggedAttr.SEC_LOGGED_ATTR.ENTITY_ID }, false);
    public static final Index IDX_SEC_PERMISSION_UNIQUE = Internal.createIndex(DSL.name("idx_sec_permission_unique"), SecPermission.SEC_PERMISSION, new OrderField[] { SecPermission.SEC_PERMISSION.ROLE_ID, SecPermission.SEC_PERMISSION.PERMISSION_TYPE, SecPermission.SEC_PERMISSION.TARGET }, true);
    public static final Index IDX_SEC_PRESENTATION_COMPONENT_USER = Internal.createIndex(DSL.name("idx_sec_presentation_component_user"), SecPresentation.SEC_PRESENTATION, new OrderField[] { SecPresentation.SEC_PRESENTATION.COMPONENT, SecPresentation.SEC_PRESENTATION.USER_ID }, false);
    public static final Index IDX_SEC_REMEMBER_ME_TOKEN = Internal.createIndex(DSL.name("idx_sec_remember_me_token"), SecRememberMe.SEC_REMEMBER_ME, new OrderField[] { SecRememberMe.SEC_REMEMBER_ME.TOKEN }, false);
    public static final Index IDX_SEC_REMEMBER_ME_USER = Internal.createIndex(DSL.name("idx_sec_remember_me_user"), SecRememberMe.SEC_REMEMBER_ME, new OrderField[] { SecRememberMe.SEC_REMEMBER_ME.USER_ID }, false);
    public static final Index IDX_SEC_ROLE_UNIQ_NAME = Internal.createIndex(DSL.name("idx_sec_role_uniq_name"), SecRole.SEC_ROLE, new OrderField[] { SecRole.SEC_ROLE.NAME }, true);
    public static final Index IDX_SEC_ROLE_UNIQ_NAME_SYS_TENANT_ID_NN = Internal.createIndex(DSL.name("idx_sec_role_uniq_name_sys_tenant_id_nn"), SecRole.SEC_ROLE, new OrderField[] { SecRole.SEC_ROLE.NAME, SecRole.SEC_ROLE.SYS_TENANT_ID }, true);
    public static final Index IDX_SEC_SCREEN_HIST_SUB_USER = Internal.createIndex(DSL.name("idx_sec_screen_hist_sub_user"), SecScreenHistory.SEC_SCREEN_HISTORY, new OrderField[] { SecScreenHistory.SEC_SCREEN_HISTORY.SUBSTITUTED_USER_ID }, false);
    public static final Index IDX_SEC_SCREEN_HISTORY_ENTITY_ID = Internal.createIndex(DSL.name("idx_sec_screen_history_entity_id"), SecScreenHistory.SEC_SCREEN_HISTORY, new OrderField[] { SecScreenHistory.SEC_SCREEN_HISTORY.ENTITY_ID }, false);
    public static final Index IDX_SEC_SCREEN_HISTORY_IENTITY_ID = Internal.createIndex(DSL.name("idx_sec_screen_history_ientity_id"), SecScreenHistory.SEC_SCREEN_HISTORY, new OrderField[] { SecScreenHistory.SEC_SCREEN_HISTORY.INT_ENTITY_ID }, false);
    public static final Index IDX_SEC_SCREEN_HISTORY_LENTITY_ID = Internal.createIndex(DSL.name("idx_sec_screen_history_lentity_id"), SecScreenHistory.SEC_SCREEN_HISTORY, new OrderField[] { SecScreenHistory.SEC_SCREEN_HISTORY.LONG_ENTITY_ID }, false);
    public static final Index IDX_SEC_SCREEN_HISTORY_SENTITY_ID = Internal.createIndex(DSL.name("idx_sec_screen_history_sentity_id"), SecScreenHistory.SEC_SCREEN_HISTORY, new OrderField[] { SecScreenHistory.SEC_SCREEN_HISTORY.STRING_ENTITY_ID }, false);
    public static final Index IDX_SEC_SCREEN_HISTORY_USER = Internal.createIndex(DSL.name("idx_sec_screen_history_user"), SecScreenHistory.SEC_SCREEN_HISTORY, new OrderField[] { SecScreenHistory.SEC_SCREEN_HISTORY.USER_ID }, false);
    public static final Index IDX_SEC_SEARCH_FOLDER_USER = Internal.createIndex(DSL.name("idx_sec_search_folder_user"), SecSearchFolder.SEC_SEARCH_FOLDER, new OrderField[] { SecSearchFolder.SEC_SEARCH_FOLDER.USER_ID }, false);
    public static final Index IDX_SEC_SESSION_ATTR_GROUP = Internal.createIndex(DSL.name("idx_sec_session_attr_group"), SecSessionAttr.SEC_SESSION_ATTR, new OrderField[] { SecSessionAttr.SEC_SESSION_ATTR.GROUP_ID }, false);
    public static final Index IDX_SEC_SESSION_LOG_SESSION = Internal.createIndex(DSL.name("idx_sec_session_log_session"), SecSessionLog.SEC_SESSION_LOG, new OrderField[] { SecSessionLog.SEC_SESSION_LOG.SESSION_ID }, false);
    public static final Index IDX_SEC_SESSION_LOG_SUBUSER = Internal.createIndex(DSL.name("idx_sec_session_log_subuser"), SecSessionLog.SEC_SESSION_LOG, new OrderField[] { SecSessionLog.SEC_SESSION_LOG.SUBSTITUTED_USER_ID }, false);
    public static final Index IDX_SEC_SESSION_LOG_USER = Internal.createIndex(DSL.name("idx_sec_session_log_user"), SecSessionLog.SEC_SESSION_LOG, new OrderField[] { SecSessionLog.SEC_SESSION_LOG.USER_ID }, false);
    public static final Index IDX_SEC_USER_ROLE_UNIQ_ROLE = Internal.createIndex(DSL.name("idx_sec_user_role_uniq_role"), SecUserRole.SEC_USER_ROLE, new OrderField[] { SecUserRole.SEC_USER_ROLE.USER_ID, SecUserRole.SEC_USER_ROLE.ROLE_ID }, true);
    public static final Index IDX_SEC_USER_SUBSTITUTION_USER = Internal.createIndex(DSL.name("idx_sec_user_substitution_user"), SecUserSubstitution.SEC_USER_SUBSTITUTION, new OrderField[] { SecUserSubstitution.SEC_USER_SUBSTITUTION.USER_ID }, false);
    public static final Index IDX_SEC_USER_UNIQ_LOGIN = Internal.createIndex(DSL.name("idx_sec_user_uniq_login"), SecUser.SEC_USER, new OrderField[] { SecUser.SEC_USER.LOGIN_LC }, true);
    public static final Index IDX_SEC_USER_UNIQ_LOGIN_SYS_TENANT_ID_NN = Internal.createIndex(DSL.name("idx_sec_user_uniq_login_sys_tenant_id_nn"), SecUser.SEC_USER, new OrderField[] { SecUser.SEC_USER.LOGIN_LC, SecUser.SEC_USER.SYS_TENANT_ID }, true);
    public static final Index IDX_SESSION_LOG_STARTED_TS = Internal.createIndex(DSL.name("idx_session_log_started_ts"), SecSessionLog.SEC_SESSION_LOG, new OrderField[] { SecSessionLog.SEC_SESSION_LOG.STARTED_TS.desc() }, false);
    public static final Index IDX_SMARTEXAM_BILLS_SUPPLIER_UK_TAX = Internal.createIndex(DSL.name("idx_smartexam_bills_supplier_uk_tax"), SmartexamBillsSupplier.SMARTEXAM_BILLS_SUPPLIER, new OrderField[] { SmartexamBillsSupplier.SMARTEXAM_BILLS_SUPPLIER.TAX }, true);
    public static final Index IDX_SMARTEXAM_CHECK_ITEM_VALUE_PHOTOS_ON_CHECK_ITEM_VALUE = Internal.createIndex(DSL.name("idx_smartexam_check_item_value_photos_on_check_item_value"), SmartexamCheckItemValuePhotos.SMARTEXAM_CHECK_ITEM_VALUE_PHOTOS, new OrderField[] { SmartexamCheckItemValuePhotos.SMARTEXAM_CHECK_ITEM_VALUE_PHOTOS.CHECK_ITEM_VALUE_ID }, false);
    public static final Index IDX_SMARTEXAM_CHECK_ITEM_VALUE_PHOTOS_ON_PHOTO = Internal.createIndex(DSL.name("idx_smartexam_check_item_value_photos_on_photo"), SmartexamCheckItemValuePhotos.SMARTEXAM_CHECK_ITEM_VALUE_PHOTOS, new OrderField[] { SmartexamCheckItemValuePhotos.SMARTEXAM_CHECK_ITEM_VALUE_PHOTOS.PHOTO_ID }, false);
    public static final Index IDX_SMARTEXAM_CHECK_LIST_WORK_VALUE_ON_PHOTO = Internal.createIndex(DSL.name("idx_smartexam_check_list_work_value_on_photo"), SmartexamCheckListWorkValue.SMARTEXAM_CHECK_LIST_WORK_VALUE, new OrderField[] { SmartexamCheckListWorkValue.SMARTEXAM_CHECK_LIST_WORK_VALUE.PHOTO_ID }, false);
    public static final Index IDX_SMARTEXAM_CHECK_LIST_WORK_VALUE_ON_PLAN = Internal.createIndex(DSL.name("idx_smartexam_check_list_work_value_on_plan"), SmartexamCheckListWorkValue.SMARTEXAM_CHECK_LIST_WORK_VALUE, new OrderField[] { SmartexamCheckListWorkValue.SMARTEXAM_CHECK_LIST_WORK_VALUE.PLAN_ID }, false);
    public static final Index IDX_SMARTEXAM_CHECK_LIST_WORK_VALUE_ON_REPAIR_REQUEST_WORK = Internal.createIndex(DSL.name("idx_smartexam_check_list_work_value_on_repair_request_work"), SmartexamCheckListWorkValue.SMARTEXAM_CHECK_LIST_WORK_VALUE, new OrderField[] { SmartexamCheckListWorkValue.SMARTEXAM_CHECK_LIST_WORK_VALUE.REPAIR_REQUEST_WORK_ID }, false);
    public static final Index IDX_SMARTEXAM_CHECK_LIST_WORKS_ON_TRANSPORT_TYPE = Internal.createIndex(DSL.name("idx_smartexam_check_list_works_on_transport_type"), SmartexamCheckListWorks.SMARTEXAM_CHECK_LIST_WORKS, new OrderField[] { SmartexamCheckListWorks.SMARTEXAM_CHECK_LIST_WORKS.TRANSPORT_TYPE_ID }, false);
    public static final Index IDX_SMARTEXAM_DAILY_TRANSPORT_STATUS_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_daily_transport_status_on_transport"), SmartexamDailyTransportStatus.SMARTEXAM_DAILY_TRANSPORT_STATUS, new OrderField[] { SmartexamDailyTransportStatus.SMARTEXAM_DAILY_TRANSPORT_STATUS.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_DIVISION_ACCESS_CONTROL_ON_USER = Internal.createIndex(DSL.name("idx_smartexam_division_access_control_on_user"), SmartexamDivisionAccessControl.SMARTEXAM_DIVISION_ACCESS_CONTROL, new OrderField[] { SmartexamDivisionAccessControl.SMARTEXAM_DIVISION_ACCESS_CONTROL.USER_ID }, false);
    public static final Index IDX_SMARTEXAM_EMPLOYEE_ON_DIVISION = Internal.createIndex(DSL.name("idx_smartexam_employee_on_division"), SmartexamEmployee.SMARTEXAM_EMPLOYEE, new OrderField[] { SmartexamEmployee.SMARTEXAM_EMPLOYEE.DIVISION_ID }, false);
    public static final Index IDX_SMARTEXAM_EMPLOYEE_ON_EMPLOYEE_FROM1C = Internal.createIndex(DSL.name("idx_smartexam_employee_on_employee_from1c"), SmartexamEmployee.SMARTEXAM_EMPLOYEE, new OrderField[] { SmartexamEmployee.SMARTEXAM_EMPLOYEE.EMPLOYEE_FROM1C_ID }, false);
    public static final Index IDX_SMARTEXAM_EMPLOYEE_ON_POSITION = Internal.createIndex(DSL.name("idx_smartexam_employee_on_position"), SmartexamEmployee.SMARTEXAM_EMPLOYEE, new OrderField[] { SmartexamEmployee.SMARTEXAM_EMPLOYEE.POSITION_ID }, false);
    public static final Index IDX_SMARTEXAM_EMPLOYEE_ON_USER = Internal.createIndex(DSL.name("idx_smartexam_employee_on_user"), SmartexamEmployee.SMARTEXAM_EMPLOYEE, new OrderField[] { SmartexamEmployee.SMARTEXAM_EMPLOYEE.USER_ID }, false);
    public static final Index IDX_SMARTEXAM_EMPLOYEE_ON_USER_FROM1C = Internal.createIndex(DSL.name("idx_smartexam_employee_on_user_from1c"), SmartexamEmployee.SMARTEXAM_EMPLOYEE, new OrderField[] { SmartexamEmployee.SMARTEXAM_EMPLOYEE.USER_FROM1C_ID }, false);
    public static final Index IDX_SMARTEXAM_EXECUTOR_ON_EMPLOYEE = Internal.createIndex(DSL.name("idx_smartexam_executor_on_employee"), SmartexamExecutor.SMARTEXAM_EXECUTOR, new OrderField[] { SmartexamExecutor.SMARTEXAM_EXECUTOR.EMPLOYEE_ID }, false);
    public static final Index IDX_SMARTEXAM_EXECUTOR_ON_REPAIR_REQUEST = Internal.createIndex(DSL.name("idx_smartexam_executor_on_repair_request"), SmartexamExecutor.SMARTEXAM_EXECUTOR, new OrderField[] { SmartexamExecutor.SMARTEXAM_EXECUTOR.REPAIR_REQUEST_ID }, false);
    public static final Index IDX_SMARTEXAM_FINES_ON_COST_ORGANIZATION = Internal.createIndex(DSL.name("idx_smartexam_fines_on_cost_organization"), SmartexamFines.SMARTEXAM_FINES, new OrderField[] { SmartexamFines.SMARTEXAM_FINES.COST_ORGANIZATION_ID }, false);
    public static final Index IDX_SMARTEXAM_FINES_ON_DIRVER = Internal.createIndex(DSL.name("idx_smartexam_fines_on_dirver"), SmartexamFines.SMARTEXAM_FINES, new OrderField[] { SmartexamFines.SMARTEXAM_FINES.DIRVER_ID }, false);
    public static final Index IDX_SMARTEXAM_FINES_ON_DIVISION = Internal.createIndex(DSL.name("idx_smartexam_fines_on_division"), SmartexamFines.SMARTEXAM_FINES, new OrderField[] { SmartexamFines.SMARTEXAM_FINES.DIVISION_ID }, false);
    public static final Index IDX_SMARTEXAM_FINES_ON_SUPPLIER = Internal.createIndex(DSL.name("idx_smartexam_fines_on_supplier"), SmartexamFines.SMARTEXAM_FINES, new OrderField[] { SmartexamFines.SMARTEXAM_FINES.SUPPLIER_ID }, false);
    public static final Index IDX_SMARTEXAM_FINES_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_fines_on_transport"), SmartexamFines.SMARTEXAM_FINES, new OrderField[] { SmartexamFines.SMARTEXAM_FINES.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_INSTANCE_DATE_ON_DIVISION = Internal.createIndex(DSL.name("idx_smartexam_instance_date_on_division"), SmartexamInstanceDate.SMARTEXAM_INSTANCE_DATE, new OrderField[] { SmartexamInstanceDate.SMARTEXAM_INSTANCE_DATE.DIVISION_ID }, false);
    public static final Index IDX_SMARTEXAM_KPI_INSTANCE_VALUE_ON_KPI_INSTANCE = Internal.createIndex(DSL.name("idx_smartexam_kpi_instance_value_on_kpi_instance"), SmartexamKpiInstanceValue.SMARTEXAM_KPI_INSTANCE_VALUE, new OrderField[] { SmartexamKpiInstanceValue.SMARTEXAM_KPI_INSTANCE_VALUE.KPI_INSTANCE_ID }, false);
    public static final Index IDX_SMARTEXAM_LIMITS_TS_ON_TRANSPORT_TYPE = Internal.createIndex(DSL.name("idx_smartexam_limits_ts_on_transport_type"), SmartexamLimitsTs.SMARTEXAM_LIMITS_TS, new OrderField[] { SmartexamLimitsTs.SMARTEXAM_LIMITS_TS.TRANSPORT_TYPE_ID }, false);
    public static final Index IDX_SMARTEXAM_LOGBOOK_ON_EMPLOYEE = Internal.createIndex(DSL.name("idx_smartexam_logbook_on_employee"), SmartexamLogbook.SMARTEXAM_LOGBOOK, new OrderField[] { SmartexamLogbook.SMARTEXAM_LOGBOOK.EMPLOYEE_ID }, false);
    public static final Index IDX_SMARTEXAM_LOGBOOK_ON_RESPONSIBLE = Internal.createIndex(DSL.name("idx_smartexam_logbook_on_responsible"), SmartexamLogbook.SMARTEXAM_LOGBOOK, new OrderField[] { SmartexamLogbook.SMARTEXAM_LOGBOOK.RESPONSIBLE_ID }, false);
    public static final Index IDX_SMARTEXAM_LOGBOOK_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_logbook_on_transport"), SmartexamLogbook.SMARTEXAM_LOGBOOK, new OrderField[] { SmartexamLogbook.SMARTEXAM_LOGBOOK.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_NFC_TAG_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_nfc_tag_on_transport"), SmartexamNfcTag.SMARTEXAM_NFC_TAG, new OrderField[] { SmartexamNfcTag.SMARTEXAM_NFC_TAG.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_NFC_TAG_UK_SERIAL_NUMBER = Internal.createIndex(DSL.name("idx_smartexam_nfc_tag_uk_serial_number"), SmartexamNfcTag.SMARTEXAM_NFC_TAG, new OrderField[] { SmartexamNfcTag.SMARTEXAM_NFC_TAG.SERIAL_NUMBER }, true);
    public static final Index IDX_SMARTEXAM_ORGANIZATION_ON_HEAD_PERSON = Internal.createIndex(DSL.name("idx_smartexam_organization_on_head_person"), SmartexamOrganization.SMARTEXAM_ORGANIZATION, new OrderField[] { SmartexamOrganization.SMARTEXAM_ORGANIZATION.HEAD_PERSON }, false);
    public static final Index IDX_SMARTEXAM_ORGANIZATION_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_smartexam_organization_uk_kafka_key"), SmartexamOrganization.SMARTEXAM_ORGANIZATION, new OrderField[] { SmartexamOrganization.SMARTEXAM_ORGANIZATION.KAFKA_KEY }, true);
    public static final Index IDX_SMARTEXAM_PLAN_ON_CHECK_LIST_WORK = Internal.createIndex(DSL.name("idx_smartexam_plan_on_check_list_work"), SmartexamPlan.SMARTEXAM_PLAN, new OrderField[] { SmartexamPlan.SMARTEXAM_PLAN.CHECK_LIST_WORK_ID }, false);
    public static final Index IDX_SMARTEXAM_PLAN_ON_EMPLOYEE = Internal.createIndex(DSL.name("idx_smartexam_plan_on_employee"), SmartexamPlan.SMARTEXAM_PLAN, new OrderField[] { SmartexamPlan.SMARTEXAM_PLAN.EMPLOYEE_ID }, false);
    public static final Index IDX_SMARTEXAM_PLAN_ON_REPAIR_BLOCK = Internal.createIndex(DSL.name("idx_smartexam_plan_on_repair_block"), SmartexamPlan.SMARTEXAM_PLAN, new OrderField[] { SmartexamPlan.SMARTEXAM_PLAN.REPAIR_BLOCK_ID }, false);
    public static final Index IDX_SMARTEXAM_PLAN_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_plan_on_transport"), SmartexamPlan.SMARTEXAM_PLAN, new OrderField[] { SmartexamPlan.SMARTEXAM_PLAN.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_POSITIONS_UK_EXT_UUID = Internal.createIndex(DSL.name("idx_smartexam_positions_uk_ext_uuid"), SmartexamPositions.SMARTEXAM_POSITIONS, new OrderField[] { SmartexamPositions.SMARTEXAM_POSITIONS.EXT_UUID }, true);
    public static final Index IDX_SMARTEXAM_REPAIR_BLOCK_ON_DIVISION = Internal.createIndex(DSL.name("idx_smartexam_repair_block_on_division"), SmartexamRepairBlock.SMARTEXAM_REPAIR_BLOCK, new OrderField[] { SmartexamRepairBlock.SMARTEXAM_REPAIR_BLOCK.DIVISION_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_BLOCK_STATUS_ON_PLAN = Internal.createIndex(DSL.name("idx_smartexam_repair_block_status_on_plan"), SmartexamRepairBlockStatus.SMARTEXAM_REPAIR_BLOCK_STATUS, new OrderField[] { SmartexamRepairBlockStatus.SMARTEXAM_REPAIR_BLOCK_STATUS.PLAN_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_BLOCK_STATUS_ON_REPAIR_BLOCK = Internal.createIndex(DSL.name("idx_smartexam_repair_block_status_on_repair_block"), SmartexamRepairBlockStatus.SMARTEXAM_REPAIR_BLOCK_STATUS, new OrderField[] { SmartexamRepairBlockStatus.SMARTEXAM_REPAIR_BLOCK_STATUS.REPAIR_BLOCK_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_INSTANCE_ON_PARENT_INSTANCE = Internal.createIndex(DSL.name("idx_smartexam_repair_request_instance_on_parent_instance"), SmartexamRepairRequestInstance.SMARTEXAM_REPAIR_REQUEST_INSTANCE, new OrderField[] { SmartexamRepairRequestInstance.SMARTEXAM_REPAIR_REQUEST_INSTANCE.PARENT_INSTANCE_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_INSTANCE_ON_REPAIR_REQUEST = Internal.createIndex(DSL.name("idx_smartexam_repair_request_instance_on_repair_request"), SmartexamRepairRequestInstance.SMARTEXAM_REPAIR_REQUEST_INSTANCE, new OrderField[] { SmartexamRepairRequestInstance.SMARTEXAM_REPAIR_REQUEST_INSTANCE.REPAIR_REQUEST_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_INSTANCE_ON_WORK = Internal.createIndex(DSL.name("idx_smartexam_repair_request_instance_on_work"), SmartexamRepairRequestInstance.SMARTEXAM_REPAIR_REQUEST_INSTANCE, new OrderField[] { SmartexamRepairRequestInstance.SMARTEXAM_REPAIR_REQUEST_INSTANCE.WORK_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_ON_CHECK_LIST = Internal.createIndex(DSL.name("idx_smartexam_repair_request_on_check_list"), SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST, new OrderField[] { SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST.CHECK_LIST_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_ON_DRIVER = Internal.createIndex(DSL.name("idx_smartexam_repair_request_on_driver"), SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST, new OrderField[] { SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST.DRIVER_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_ON_EMPLOYEE = Internal.createIndex(DSL.name("idx_smartexam_repair_request_on_employee"), SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST, new OrderField[] { SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST.EMPLOYEE_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_ON_MASTER = Internal.createIndex(DSL.name("idx_smartexam_repair_request_on_master"), SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST, new OrderField[] { SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST.MASTER_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_ON_MECHANIC = Internal.createIndex(DSL.name("idx_smartexam_repair_request_on_mechanic"), SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST, new OrderField[] { SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST.MECHANIC_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_ON_ORGANIZATION = Internal.createIndex(DSL.name("idx_smartexam_repair_request_on_organization"), SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST, new OrderField[] { SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST.ORGANIZATION_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_ON_SHOP = Internal.createIndex(DSL.name("idx_smartexam_repair_request_on_shop"), SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST, new OrderField[] { SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST.SHOP_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_ON_STOCK = Internal.createIndex(DSL.name("idx_smartexam_repair_request_on_stock"), SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST, new OrderField[] { SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST.STOCK_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_repair_request_on_transport"), SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST, new OrderField[] { SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS_ON_REPAIR_REQUEST = Internal.createIndex(DSL.name("idx_smartexam_repair_request_spare_parts_on_repair_request"), SmartexamRepairRequestSpareParts.SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS, new OrderField[] { SmartexamRepairRequestSpareParts.SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS.REPAIR_REQUEST_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_UK_NAME = Internal.createIndex(DSL.name("idx_smartexam_repair_request_uk_name"), SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST, new OrderField[] { SmartexamRepairRequest.SMARTEXAM_REPAIR_REQUEST.NAME }, true);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_WORK_ON_PARENT = Internal.createIndex(DSL.name("idx_smartexam_repair_request_work_on_parent"), SmartexamRepairRequestWork.SMARTEXAM_REPAIR_REQUEST_WORK, new OrderField[] { SmartexamRepairRequestWork.SMARTEXAM_REPAIR_REQUEST_WORK.PARENT_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIR_REQUEST_WORK_UK_EXT_UUID = Internal.createIndex(DSL.name("idx_smartexam_repair_request_work_uk_ext_uuid"), SmartexamRepairRequestWork.SMARTEXAM_REPAIR_REQUEST_WORK, new OrderField[] { SmartexamRepairRequestWork.SMARTEXAM_REPAIR_REQUEST_WORK.EXT_UUID }, true);
    public static final Index IDX_SMARTEXAM_REPAIR_ZONE_ON_ORGANIZATION = Internal.createIndex(DSL.name("idx_smartexam_repair_zone_on_organization"), SmartexamRepairZone.SMARTEXAM_REPAIR_ZONE, new OrderField[] { SmartexamRepairZone.SMARTEXAM_REPAIR_ZONE.ORGANIZATION_ID }, false);
    public static final Index IDX_SMARTEXAM_REPAIREQUESPAREPARTS_ON_REPAIR_REQUEST_INSTANCE = Internal.createIndex(DSL.name("idx_smartexam_repairequespareparts_on_repair_request_instance"), SmartexamRepairRequestSpareParts.SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS, new OrderField[] { SmartexamRepairRequestSpareParts.SMARTEXAM_REPAIR_REQUEST_SPARE_PARTS.REPAIR_REQUEST_INSTANCE_ID }, false);
    public static final Index IDX_SMARTEXAM_REQUIREMENTS_FOR_SP_ITEMS_ON_NOMENCLATURE = Internal.createIndex(DSL.name("idx_smartexam_requirements_for_sp_items_on_nomenclature"), SmartexamRequirementsForSpItems_U74375.SMARTEXAM_REQUIREMENTS_FOR_SP_ITEMS__U74375, new OrderField[] { SmartexamRequirementsForSpItems_U74375.SMARTEXAM_REQUIREMENTS_FOR_SP_ITEMS__U74375.NOMENCLATURE_ID }, false);
    public static final Index IDX_SMARTEXAM_REQUIREMENTS_FOR_SP_ITEMS_ON_REQUIREMENTS_FOR_SP = Internal.createIndex(DSL.name("idx_smartexam_requirements_for_sp_items_on_requirements_for_sp"), SmartexamRequirementsForSpItems_U74375.SMARTEXAM_REQUIREMENTS_FOR_SP_ITEMS__U74375, new OrderField[] { SmartexamRequirementsForSpItems_U74375.SMARTEXAM_REQUIREMENTS_FOR_SP_ITEMS__U74375.REQUIREMENTS_FOR_SP_ID }, false);
    public static final Index IDX_SMARTEXAM_REQUIREMENTS_FOR_SP_ON_DIVISION = Internal.createIndex(DSL.name("idx_smartexam_requirements_for_sp_on_division"), SmartexamRequirementsForSp.SMARTEXAM_REQUIREMENTS_FOR_SP, new OrderField[] { SmartexamRequirementsForSp.SMARTEXAM_REQUIREMENTS_FOR_SP.DIVISION_ID }, false);
    public static final Index IDX_SMARTEXAM_REQUIREMENTS_FOR_SP_ON_NOMENCLATURE = Internal.createIndex(DSL.name("idx_smartexam_requirements_for_sp_on_nomenclature"), SmartexamRequirementsForSp.SMARTEXAM_REQUIREMENTS_FOR_SP, new OrderField[] { SmartexamRequirementsForSp.SMARTEXAM_REQUIREMENTS_FOR_SP.NOMENCLATURE_ID }, false);
    public static final Index IDX_SMARTEXAM_REQUIREMENTS_FOR_SP_ON_ORGANIZATION = Internal.createIndex(DSL.name("idx_smartexam_requirements_for_sp_on_organization"), SmartexamRequirementsForSp.SMARTEXAM_REQUIREMENTS_FOR_SP, new OrderField[] { SmartexamRequirementsForSp.SMARTEXAM_REQUIREMENTS_FOR_SP.ORGANIZATION_ID }, false);
    public static final Index IDX_SMARTEXAM_REQUIREMENTS_FOR_SP_ON_PHOTO = Internal.createIndex(DSL.name("idx_smartexam_requirements_for_sp_on_photo"), SmartexamRequirementsForSp.SMARTEXAM_REQUIREMENTS_FOR_SP, new OrderField[] { SmartexamRequirementsForSp.SMARTEXAM_REQUIREMENTS_FOR_SP.PHOTO_ID }, false);
    public static final Index IDX_SMARTEXAM_REQUIREMENTS_FOR_SP_ON_REPAIR_REQUEST = Internal.createIndex(DSL.name("idx_smartexam_requirements_for_sp_on_repair_request"), SmartexamRequirementsForSp.SMARTEXAM_REQUIREMENTS_FOR_SP, new OrderField[] { SmartexamRequirementsForSp.SMARTEXAM_REQUIREMENTS_FOR_SP.REPAIR_REQUEST_ID }, false);
    public static final Index IDX_SMARTEXAM_ROUTE_LIST_ON_DIVISION = Internal.createIndex(DSL.name("idx_smartexam_route_list_on_division"), SmartexamRouteList.SMARTEXAM_ROUTE_LIST, new OrderField[] { SmartexamRouteList.SMARTEXAM_ROUTE_LIST.DIVISION_ID }, false);
    public static final Index IDX_SMARTEXAM_ROUTE_LIST_ON_DRIVER = Internal.createIndex(DSL.name("idx_smartexam_route_list_on_driver"), SmartexamRouteList.SMARTEXAM_ROUTE_LIST, new OrderField[] { SmartexamRouteList.SMARTEXAM_ROUTE_LIST.DRIVER_ID }, false);
    public static final Index IDX_SMARTEXAM_ROUTE_LIST_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_route_list_on_transport"), SmartexamRouteList.SMARTEXAM_ROUTE_LIST, new OrderField[] { SmartexamRouteList.SMARTEXAM_ROUTE_LIST.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_SERVICE_REPORT_INSTANCE_ON_CHECK_LIST_INSTANCE = Internal.createIndex(DSL.name("idx_smartexam_service_report_instance_on_check_list_instance"), SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE, new OrderField[] { SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.CHECK_LIST_INSTANCE_ID }, false);
    public static final Index IDX_SMARTEXAM_SERVICE_REPORT_INSTANCE_ON_DIVISION = Internal.createIndex(DSL.name("idx_smartexam_service_report_instance_on_division"), SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE, new OrderField[] { SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.DIVISION_ID }, false);
    public static final Index IDX_SMARTEXAM_SERVICE_REPORT_INSTANCE_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_service_report_instance_on_transport"), SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE, new OrderField[] { SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL_ON_DIVISION = Internal.createIndex(DSL.name("idx_smartexam_service_report_instance_total_on_division"), SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL, new OrderField[] { SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.DIVISION_ID }, false);
    public static final Index IDX_SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_service_report_instance_total_on_transport"), SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL, new OrderField[] { SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_SERVICE_REPORT_STATISTICS_ON_DIVISION = Internal.createIndex(DSL.name("idx_smartexam_service_report_statistics_on_division"), SmartexamServiceReportStatistics.SMARTEXAM_SERVICE_REPORT_STATISTICS, new OrderField[] { SmartexamServiceReportStatistics.SMARTEXAM_SERVICE_REPORT_STATISTICS.DIVISION_ID }, false);
    public static final Index IDX_SMARTEXAM_SERVICE_REPORT_STATISTICS_ON_TRANSPORT_TYPE = Internal.createIndex(DSL.name("idx_smartexam_service_report_statistics_on_transport_type"), SmartexamServiceReportStatistics.SMARTEXAM_SERVICE_REPORT_STATISTICS, new OrderField[] { SmartexamServiceReportStatistics.SMARTEXAM_SERVICE_REPORT_STATISTICS.TRANSPORT_TYPE_ID }, false);
    public static final Index IDX_SMARTEXAM_SHOP_ON_PARENT_SHOP = Internal.createIndex(DSL.name("idx_smartexam_shop_on_parent_shop"), SmartexamShop.SMARTEXAM_SHOP, new OrderField[] { SmartexamShop.SMARTEXAM_SHOP.PARENT_SHOP_ID }, false);
    public static final Index IDX_SMARTEXAM_STANDARD_TIME_ON_REPAIR_REQUEST_WORK = Internal.createIndex(DSL.name("idx_smartexam_standard_time_on_repair_request_work"), SmartexamStandardTime.SMARTEXAM_STANDARD_TIME, new OrderField[] { SmartexamStandardTime.SMARTEXAM_STANDARD_TIME.REPAIR_REQUEST_WORK_ID }, false);
    public static final Index IDX_SMARTEXAM_STANDARD_TIME_ON_TRANSPORT_TYPE = Internal.createIndex(DSL.name("idx_smartexam_standard_time_on_transport_type"), SmartexamStandardTime.SMARTEXAM_STANDARD_TIME, new OrderField[] { SmartexamStandardTime.SMARTEXAM_STANDARD_TIME.TRANSPORT_TYPE_ID }, false);
    public static final Index IDX_SMARTEXAM_STOCK_ON_PARENT_STOCK = Internal.createIndex(DSL.name("idx_smartexam_stock_on_parent_stock"), SmartexamStock.SMARTEXAM_STOCK, new OrderField[] { SmartexamStock.SMARTEXAM_STOCK.PARENT_STOCK_ID }, false);
    public static final Index IDX_SMARTEXAM_TRANSPORT_COSTS_ITEM_ON_COST = Internal.createIndex(DSL.name("idx_smartexam_transport_costs_item_on_cost"), SmartexamTransportCostsItem.SMARTEXAM_TRANSPORT_COSTS_ITEM, new OrderField[] { SmartexamTransportCostsItem.SMARTEXAM_TRANSPORT_COSTS_ITEM.COST_ID }, false);
    public static final Index IDX_SMARTEXAM_TRANSPORT_COSTS_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_transport_costs_on_transport"), SmartexamTransportCosts.SMARTEXAM_TRANSPORT_COSTS, new OrderField[] { SmartexamTransportCosts.SMARTEXAM_TRANSPORT_COSTS.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_TRANSPORT_EMPLOYEE_LINK_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_transport_employee_link_on_transport"), SmartexamTransportEmployeeLink.SMARTEXAM_TRANSPORT_EMPLOYEE_LINK, new OrderField[] { SmartexamTransportEmployeeLink.SMARTEXAM_TRANSPORT_EMPLOYEE_LINK.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_TRANSPORT_FROM1C_ON_BASE_GARBAGE_CONTAINER = Internal.createIndex(DSL.name("idx_smartexam_transport_from1c_on_base_garbage_container"), SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C, new OrderField[] { SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C.BASE_GARBAGE_CONTAINER_ID }, false);
    public static final Index IDX_SMARTEXAM_TRANSPORT_FROM1C_ON_COSTS_ORGANIZATION = Internal.createIndex(DSL.name("idx_smartexam_transport_from1c_on_costs_organization"), SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C, new OrderField[] { SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C.COSTS_ORGANIZATION_ID }, false);
    public static final Index IDX_SMARTEXAM_TRANSPORT_FROM1C_ON_ORGANIZATION = Internal.createIndex(DSL.name("idx_smartexam_transport_from1c_on_organization"), SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C, new OrderField[] { SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C.ORGANIZATION_ID }, false);
    public static final Index IDX_SMARTEXAM_TRANSPORT_FROM1C_ON_TRANSPORT_TYPE = Internal.createIndex(DSL.name("idx_smartexam_transport_from1c_on_transport_type"), SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C, new OrderField[] { SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C.TRANSPORT_TYPE_ID }, false);
    public static final Index IDX_SMARTEXAM_TRANSPORT_FROM1C_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_smartexam_transport_from1c_uk_kafka_key"), SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C, new OrderField[] { SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C.KAFKA_KEY }, true);
    public static final Index IDX_SMARTEXAM_TRANSPORT_MILEAGE_LIST_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexam_transport_mileage_list_on_transport"), SmartexamTransportMileageList.SMARTEXAM_TRANSPORT_MILEAGE_LIST, new OrderField[] { SmartexamTransportMileageList.SMARTEXAM_TRANSPORT_MILEAGE_LIST.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAM_TRANSPORT_TYPE_FROM1C_ON_PARENT = Internal.createIndex(DSL.name("idx_smartexam_transport_type_from1c_on_parent"), SmartexamTransportTypeFrom1c.SMARTEXAM_TRANSPORT_TYPE_FROM1C, new OrderField[] { SmartexamTransportTypeFrom1c.SMARTEXAM_TRANSPORT_TYPE_FROM1C.PARENT_ID }, false);
    public static final Index IDX_SMARTEXAM_TRANSPORT_TYPE_FROM1C_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_smartexam_transport_type_from1c_uk_kafka_key"), SmartexamTransportTypeFrom1c.SMARTEXAM_TRANSPORT_TYPE_FROM1C, new OrderField[] { SmartexamTransportTypeFrom1c.SMARTEXAM_TRANSPORT_TYPE_FROM1C.KAFKA_KEY }, true);
    public static final Index IDX_SMARTEXAMADDON_BASE_DOCUMENTS_ON_BASE_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexamaddon_base_documents_on_base_transport"), SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS, new OrderField[] { SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.BASE_TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAMADDON_BASE_DOCUMENTS_ON_PHOTO = Internal.createIndex(DSL.name("idx_smartexamaddon_base_documents_on_photo"), SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS, new OrderField[] { SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.PHOTO_ID }, false);
    public static final Index IDX_SMARTEXAMADDON_BASE_DOCUMENTS_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_smartexamaddon_base_documents_uk_kafka_key"), SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS, new OrderField[] { SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.KAFKA_KEY }, true);
    public static final Index IDX_SMARTEXAMADDON_BASE_GARBAGE_CONTAINER_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_smartexamaddon_base_garbage_container_uk_kafka_key"), SmartexamaddonBaseGarbageContainer.SMARTEXAMADDON_BASE_GARBAGE_CONTAINER, new OrderField[] { SmartexamaddonBaseGarbageContainer.SMARTEXAMADDON_BASE_GARBAGE_CONTAINER.KAFKA_KEY }, true);
    public static final Index IDX_SMARTEXAMADDON_BASE_LICENSE_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartexamaddon_base_license_on_transport"), SmartexamaddonBaseLicense.SMARTEXAMADDON_BASE_LICENSE, new OrderField[] { SmartexamaddonBaseLicense.SMARTEXAMADDON_BASE_LICENSE.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTEXAMADDON_BASE_LICENSE_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_smartexamaddon_base_license_uk_kafka_key"), SmartexamaddonBaseLicense.SMARTEXAMADDON_BASE_LICENSE, new OrderField[] { SmartexamaddonBaseLicense.SMARTEXAMADDON_BASE_LICENSE.KAFKA_KEY }, true);
    public static final Index IDX_SMARTEXAMADDON_BASE_TRANSPORT_ON_BASE_GARBAGE_CONTAINER = Internal.createIndex(DSL.name("idx_smartexamaddon_base_transport_on_base_garbage_container"), SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT, new OrderField[] { SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT.BASE_GARBAGE_CONTAINER_ID }, false);
    public static final Index IDX_SMARTEXAMADDON_BASE_TRANSPORT_ON_COSTS_ORGANIZATION = Internal.createIndex(DSL.name("idx_smartexamaddon_base_transport_on_costs_organization"), SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT, new OrderField[] { SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT.COSTS_ORGANIZATION_ID }, false);
    public static final Index IDX_SMARTEXAMADDON_BASE_TRANSPORT_ON_LICENSE = Internal.createIndex(DSL.name("idx_smartexamaddon_base_transport_on_license"), SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT, new OrderField[] { SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT.LICENSE_ID }, false);
    public static final Index IDX_SMARTEXAMADDON_BASE_TRANSPORT_ON_ORGANIZATION = Internal.createIndex(DSL.name("idx_smartexamaddon_base_transport_on_organization"), SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT, new OrderField[] { SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT.ORGANIZATION_ID }, false);
    public static final Index IDX_SMARTEXAMADDON_BASE_TRANSPORT_ON_TRANSPORT_TYPE = Internal.createIndex(DSL.name("idx_smartexamaddon_base_transport_on_transport_type"), SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT, new OrderField[] { SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT.TRANSPORT_TYPE_ID }, false);
    public static final Index IDX_SMARTEXAMADDON_BASE_TRANSPORT_TYPE_ON_PARENT = Internal.createIndex(DSL.name("idx_smartexamaddon_base_transport_type_on_parent"), SmartexamaddonBaseTransportType.SMARTEXAMADDON_BASE_TRANSPORT_TYPE, new OrderField[] { SmartexamaddonBaseTransportType.SMARTEXAMADDON_BASE_TRANSPORT_TYPE.PARENT_ID }, false);
    public static final Index IDX_SMARTEXAMADDON_BASE_TRANSPORT_TYPE_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_smartexamaddon_base_transport_type_uk_kafka_key"), SmartexamaddonBaseTransportType.SMARTEXAMADDON_BASE_TRANSPORT_TYPE, new OrderField[] { SmartexamaddonBaseTransportType.SMARTEXAMADDON_BASE_TRANSPORT_TYPE.KAFKA_KEY }, true);
    public static final Index IDX_SMARTEXAMADDON_BASE_TRANSPORT_UK_KAFKA_KEY = Internal.createIndex(DSL.name("idx_smartexamaddon_base_transport_uk_kafka_key"), SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT, new OrderField[] { SmartexamaddonBaseTransport.SMARTEXAMADDON_BASE_TRANSPORT.KAFKA_KEY }, true);
    public static final Index IDX_SMARTMON_CHECK_ITEM_VALUE_ON_INSTANCE = Internal.createIndex(DSL.name("idx_smartmon_check_item_value_on_instance"), SmartmonCheckItemValue.SMARTMON_CHECK_ITEM_VALUE, new OrderField[] { SmartmonCheckItemValue.SMARTMON_CHECK_ITEM_VALUE.INSTANCE_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_ITEM_VALUE_ON_ITEM = Internal.createIndex(DSL.name("idx_smartmon_check_item_value_on_item"), SmartmonCheckItemValue.SMARTMON_CHECK_ITEM_VALUE, new OrderField[] { SmartmonCheckItemValue.SMARTMON_CHECK_ITEM_VALUE.ITEM_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_ITEM_VALUE_ON_PARENT = Internal.createIndex(DSL.name("idx_smartmon_check_item_value_on_parent"), SmartmonCheckItemValue.SMARTMON_CHECK_ITEM_VALUE, new OrderField[] { SmartmonCheckItemValue.SMARTMON_CHECK_ITEM_VALUE.PARENT_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_ITEM_VALUE_ON_PHOTO = Internal.createIndex(DSL.name("idx_smartmon_check_item_value_on_photo"), SmartmonCheckItemValue.SMARTMON_CHECK_ITEM_VALUE, new OrderField[] { SmartmonCheckItemValue.SMARTMON_CHECK_ITEM_VALUE.PHOTO_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_LIST_INSTANCE_ON_CHECK_LIST = Internal.createIndex(DSL.name("idx_smartmon_check_list_instance_on_check_list"), SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE, new OrderField[] { SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE.CHECK_LIST_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_LIST_INSTANCE_ON_DIVISION = Internal.createIndex(DSL.name("idx_smartmon_check_list_instance_on_division"), SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE, new OrderField[] { SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE.DIVISION_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_LIST_INSTANCE_ON_EMPLOYEE = Internal.createIndex(DSL.name("idx_smartmon_check_list_instance_on_employee"), SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE, new OrderField[] { SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE.EMPLOYEE_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_LIST_INSTANCE_ON_RESPONSIBLE = Internal.createIndex(DSL.name("idx_smartmon_check_list_instance_on_responsible"), SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE, new OrderField[] { SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE.RESPONSIBLE_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_LIST_INSTANCE_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartmon_check_list_instance_on_transport"), SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE, new OrderField[] { SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_LIST_INSTANCE_UK_SYNC_ID = Internal.createIndex(DSL.name("idx_smartmon_check_list_instance_uk_sync_id"), SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE, new OrderField[] { SmartmonCheckListInstance.SMARTMON_CHECK_LIST_INSTANCE.SYNC_ID }, true);
    public static final Index IDX_SMARTMON_CHECK_LIST_ITEM_ON_LIST_TEMPLATE = Internal.createIndex(DSL.name("idx_smartmon_check_list_item_on_list_template"), SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM, new OrderField[] { SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.LIST_TEMPLATE_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_LIST_ITEM_ON_PARENT_ITEM = Internal.createIndex(DSL.name("idx_smartmon_check_list_item_on_parent_item"), SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM, new OrderField[] { SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.PARENT_ITEM_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_LIST_ON_TRANSPORT = Internal.createIndex(DSL.name("idx_smartmon_check_list_on_transport"), SmartmonCheckList.SMARTMON_CHECK_LIST, new OrderField[] { SmartmonCheckList.SMARTMON_CHECK_LIST.TRANSPORT_ID }, false);
    public static final Index IDX_SMARTMON_CHECK_LIST_ON_TRANSPORT_TYPE = Internal.createIndex(DSL.name("idx_smartmon_check_list_on_transport_type"), SmartmonCheckList.SMARTMON_CHECK_LIST, new OrderField[] { SmartmonCheckList.SMARTMON_CHECK_LIST.TRANSPORT_TYPE_ID }, false);
    public static final Index IDX_SMARTMON_DIVISION_ON_KPI_INSTANCE = Internal.createIndex(DSL.name("idx_smartmon_division_on_kpi_instance"), SmartmonDivision.SMARTMON_DIVISION, new OrderField[] { SmartmonDivision.SMARTMON_DIVISION.KPI_INSTANCE_ID }, false);
    public static final Index IDX_SMARTMON_TRANSPORT_ON_DIVISION = Internal.createIndex(DSL.name("idx_smartmon_transport_on_division"), SmartmonTransport.SMARTMON_TRANSPORT, new OrderField[] { SmartmonTransport.SMARTMON_TRANSPORT.DIVISION_ID }, false);
    public static final Index IDX_SMARTMON_TRANSPORT_ON_PHOTO = Internal.createIndex(DSL.name("idx_smartmon_transport_on_photo"), SmartmonTransport.SMARTMON_TRANSPORT, new OrderField[] { SmartmonTransport.SMARTMON_TRANSPORT.PHOTO_ID }, false);
    public static final Index IDX_SMARTMON_TRANSPORT_ON_TRANSPORT_FROM1C = Internal.createIndex(DSL.name("idx_smartmon_transport_on_transport_from1c"), SmartmonTransport.SMARTMON_TRANSPORT, new OrderField[] { SmartmonTransport.SMARTMON_TRANSPORT.TRANSPORT_FROM1C_ID }, false);
    public static final Index IDX_SMARTMON_TRANSPORT_ON_TRANSPORT_TYPE = Internal.createIndex(DSL.name("idx_smartmon_transport_on_transport_type"), SmartmonTransport.SMARTMON_TRANSPORT, new OrderField[] { SmartmonTransport.SMARTMON_TRANSPORT.TRANSPORT_TYPE_ID }, false);
    public static final Index IDX_SMARTMON_TRANSPORT_TYPE_ON_TRANSPORT_TYPE_GROUPING = Internal.createIndex(DSL.name("idx_smartmon_transport_type_on_transport_type_grouping"), SmartmonTransportType.SMARTMON_TRANSPORT_TYPE, new OrderField[] { SmartmonTransportType.SMARTMON_TRANSPORT_TYPE.TRANSPORT_TYPE_GROUPING_ID }, false);
    public static final Index IDX_SMARTMON_TRANSPORT_TYPE_UK_EXT_UUID = Internal.createIndex(DSL.name("idx_smartmon_transport_type_uk_ext_uuid"), SmartmonTransportType.SMARTMON_TRANSPORT_TYPE, new OrderField[] { SmartmonTransportType.SMARTMON_TRANSPORT_TYPE.EXT_UUID }, true);
    public static final Index IDX_SMARTMON_TRANSPORT_TYPE_UK_SHORT_NAME = Internal.createIndex(DSL.name("idx_smartmon_transport_type_uk_short_name"), SmartmonTransportType.SMARTMON_TRANSPORT_TYPE, new OrderField[] { SmartmonTransportType.SMARTMON_TRANSPORT_TYPE.SHORT_NAME }, true);
    public static final Index IDX_SMARTMON_TRANSPORT_UK_REG_NUM = Internal.createIndex(DSL.name("idx_smartmon_transport_uk_reg_num"), SmartmonTransport.SMARTMON_TRANSPORT, new OrderField[] { SmartmonTransport.SMARTMON_TRANSPORT.REG_NUM }, true);
    public static final Index IDX_SYS_ATTR_VALUE_ENTITY = Internal.createIndex(DSL.name("idx_sys_attr_value_entity"), SysAttrValue.SYS_ATTR_VALUE, new OrderField[] { SysAttrValue.SYS_ATTR_VALUE.ENTITY_ID }, false);
    public static final Index IDX_SYS_ATTR_VALUE_IENTITY = Internal.createIndex(DSL.name("idx_sys_attr_value_ientity"), SysAttrValue.SYS_ATTR_VALUE, new OrderField[] { SysAttrValue.SYS_ATTR_VALUE.INT_ENTITY_ID }, false);
    public static final Index IDX_SYS_ATTR_VALUE_LENTITY = Internal.createIndex(DSL.name("idx_sys_attr_value_lentity"), SysAttrValue.SYS_ATTR_VALUE, new OrderField[] { SysAttrValue.SYS_ATTR_VALUE.LONG_ENTITY_ID }, false);
    public static final Index IDX_SYS_ATTR_VALUE_SENTITY = Internal.createIndex(DSL.name("idx_sys_attr_value_sentity"), SysAttrValue.SYS_ATTR_VALUE, new OrderField[] { SysAttrValue.SYS_ATTR_VALUE.STRING_ENTITY_ID }, false);
    public static final Index IDX_SYS_CATEGORY_ATTR_CATEGORY = Internal.createIndex(DSL.name("idx_sys_category_attr_category"), SysCategoryAttr.SYS_CATEGORY_ATTR, new OrderField[] { SysCategoryAttr.SYS_CATEGORY_ATTR.CATEGORY_ID }, false);
    public static final Index IDX_SYS_CATEGORY_UNIQ_NAME_ENTITY_TYPE = Internal.createIndex(DSL.name("idx_sys_category_uniq_name_entity_type"), SysCategory.SYS_CATEGORY, new OrderField[] { SysCategory.SYS_CATEGORY.NAME, SysCategory.SYS_CATEGORY.ENTITY_TYPE }, true);
    public static final Index IDX_SYS_CONFIG_UNIQ_NAME = Internal.createIndex(DSL.name("idx_sys_config_uniq_name"), SysConfig.SYS_CONFIG, new OrderField[] { SysConfig.SYS_CONFIG.NAME }, true);
    public static final Index IDX_SYS_ENTITY_SNAPSHOT_ENTITY_ID = Internal.createIndex(DSL.name("idx_sys_entity_snapshot_entity_id"), SysEntitySnapshot.SYS_ENTITY_SNAPSHOT, new OrderField[] { SysEntitySnapshot.SYS_ENTITY_SNAPSHOT.ENTITY_ID }, false);
    public static final Index IDX_SYS_ENTITY_SNAPSHOT_IENTITY_ID = Internal.createIndex(DSL.name("idx_sys_entity_snapshot_ientity_id"), SysEntitySnapshot.SYS_ENTITY_SNAPSHOT, new OrderField[] { SysEntitySnapshot.SYS_ENTITY_SNAPSHOT.INT_ENTITY_ID }, false);
    public static final Index IDX_SYS_ENTITY_SNAPSHOT_LENTITY_ID = Internal.createIndex(DSL.name("idx_sys_entity_snapshot_lentity_id"), SysEntitySnapshot.SYS_ENTITY_SNAPSHOT, new OrderField[] { SysEntitySnapshot.SYS_ENTITY_SNAPSHOT.LONG_ENTITY_ID }, false);
    public static final Index IDX_SYS_ENTITY_SNAPSHOT_SENTITY_ID = Internal.createIndex(DSL.name("idx_sys_entity_snapshot_sentity_id"), SysEntitySnapshot.SYS_ENTITY_SNAPSHOT, new OrderField[] { SysEntitySnapshot.SYS_ENTITY_SNAPSHOT.STRING_ENTITY_ID }, false);
    public static final Index IDX_SYS_ENTITY_STATISTICS_UNIQ_NAME = Internal.createIndex(DSL.name("idx_sys_entity_statistics_uniq_name"), SysEntityStatistics.SYS_ENTITY_STATISTICS, new OrderField[] { SysEntityStatistics.SYS_ENTITY_STATISTICS.NAME }, true);
    public static final Index IDX_SYS_FTS_QUEUE_IDXHOST_CRTS = Internal.createIndex(DSL.name("idx_sys_fts_queue_idxhost_crts"), SysFtsQueue.SYS_FTS_QUEUE, new OrderField[] { SysFtsQueue.SYS_FTS_QUEUE.INDEXING_HOST, SysFtsQueue.SYS_FTS_QUEUE.CREATE_TS }, false);
    public static final Index IDX_SYS_QUERY_RESULT_ENTITY_SESSION_KEY = Internal.createIndex(DSL.name("idx_sys_query_result_entity_session_key"), SysQueryResult.SYS_QUERY_RESULT, new OrderField[] { SysQueryResult.SYS_QUERY_RESULT.ENTITY_ID, SysQueryResult.SYS_QUERY_RESULT.SESSION_ID, SysQueryResult.SYS_QUERY_RESULT.QUERY_KEY }, false);
    public static final Index IDX_SYS_QUERY_RESULT_IENTITY_SESSION_KEY = Internal.createIndex(DSL.name("idx_sys_query_result_ientity_session_key"), SysQueryResult.SYS_QUERY_RESULT, new OrderField[] { SysQueryResult.SYS_QUERY_RESULT.INT_ENTITY_ID, SysQueryResult.SYS_QUERY_RESULT.SESSION_ID, SysQueryResult.SYS_QUERY_RESULT.QUERY_KEY }, false);
    public static final Index IDX_SYS_QUERY_RESULT_LENTITY_SESSION_KEY = Internal.createIndex(DSL.name("idx_sys_query_result_lentity_session_key"), SysQueryResult.SYS_QUERY_RESULT, new OrderField[] { SysQueryResult.SYS_QUERY_RESULT.LONG_ENTITY_ID, SysQueryResult.SYS_QUERY_RESULT.SESSION_ID, SysQueryResult.SYS_QUERY_RESULT.QUERY_KEY }, false);
    public static final Index IDX_SYS_QUERY_RESULT_SENTITY_SESSION_KEY = Internal.createIndex(DSL.name("idx_sys_query_result_sentity_session_key"), SysQueryResult.SYS_QUERY_RESULT, new OrderField[] { SysQueryResult.SYS_QUERY_RESULT.STRING_ENTITY_ID, SysQueryResult.SYS_QUERY_RESULT.SESSION_ID, SysQueryResult.SYS_QUERY_RESULT.QUERY_KEY }, false);
    public static final Index IDX_SYS_QUERY_RESULT_SESSION_KEY = Internal.createIndex(DSL.name("idx_sys_query_result_session_key"), SysQueryResult.SYS_QUERY_RESULT, new OrderField[] { SysQueryResult.SYS_QUERY_RESULT.SESSION_ID, SysQueryResult.SYS_QUERY_RESULT.QUERY_KEY }, false);
    public static final Index IDX_SYS_SCHEDULED_EXECUTION_TASK_FINISH_TIME = Internal.createIndex(DSL.name("idx_sys_scheduled_execution_task_finish_time"), SysScheduledExecution.SYS_SCHEDULED_EXECUTION, new OrderField[] { SysScheduledExecution.SYS_SCHEDULED_EXECUTION.TASK_ID, SysScheduledExecution.SYS_SCHEDULED_EXECUTION.FINISH_TIME }, false);
    public static final Index IDX_SYS_SCHEDULED_EXECUTION_TASK_START_TIME = Internal.createIndex(DSL.name("idx_sys_scheduled_execution_task_start_time"), SysScheduledExecution.SYS_SCHEDULED_EXECUTION, new OrderField[] { SysScheduledExecution.SYS_SCHEDULED_EXECUTION.TASK_ID, SysScheduledExecution.SYS_SCHEDULED_EXECUTION.START_TIME }, false);
    public static final Index IDX_SYS_SENDING_MESSAGE_DATE_SENT = Internal.createIndex(DSL.name("idx_sys_sending_message_date_sent"), SysSendingMessage.SYS_SENDING_MESSAGE, new OrderField[] { SysSendingMessage.SYS_SENDING_MESSAGE.DATE_SENT }, false);
    public static final Index IDX_SYS_SENDING_MESSAGE_STATUS = Internal.createIndex(DSL.name("idx_sys_sending_message_status"), SysSendingMessage.SYS_SENDING_MESSAGE, new OrderField[] { SysSendingMessage.SYS_SENDING_MESSAGE.STATUS }, false);
    public static final Index IDX_SYS_SENDING_MESSAGE_UPDATE_TS = Internal.createIndex(DSL.name("idx_sys_sending_message_update_ts"), SysSendingMessage.SYS_SENDING_MESSAGE, new OrderField[] { SysSendingMessage.SYS_SENDING_MESSAGE.UPDATE_TS }, false);
    public static final Index IDX_SYS_SERVER_UNIQ_NAME = Internal.createIndex(DSL.name("idx_sys_server_uniq_name"), SysServer.SYS_SERVER, new OrderField[] { SysServer.SYS_SERVER.NAME }, true);
    public static final Index SYS_SENDING_ATTACHMENT_MESSAGE_IDX = Internal.createIndex(DSL.name("sys_sending_attachment_message_idx"), SysSendingAttachment.SYS_SENDING_ATTACHMENT, new OrderField[] { SysSendingAttachment.SYS_SENDING_ATTACHMENT.MESSAGE_ID }, false);
}
