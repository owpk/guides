/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables;


import java.time.LocalDateTime;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import nu.studer.sample.Indexes;
import nu.studer.sample.Keys;
import nu.studer.sample.Public;
import nu.studer.sample.tables.records.SysSendingMessageRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysSendingMessage extends TableImpl<SysSendingMessageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.sys_sending_message</code>
     */
    public static final SysSendingMessage SYS_SENDING_MESSAGE = new SysSendingMessage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysSendingMessageRecord> getRecordType() {
        return SysSendingMessageRecord.class;
    }

    /**
     * The column <code>public.sys_sending_message.id</code>.
     */
    public final TableField<SysSendingMessageRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.sys_sending_message.create_ts</code>.
     */
    public final TableField<SysSendingMessageRecord, LocalDateTime> CREATE_TS = createField(DSL.name("create_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_sending_message.created_by</code>.
     */
    public final TableField<SysSendingMessageRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_sending_message.version</code>.
     */
    public final TableField<SysSendingMessageRecord, Integer> VERSION = createField(DSL.name("version"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.sys_sending_message.update_ts</code>.
     */
    public final TableField<SysSendingMessageRecord, OffsetDateTime> UPDATE_TS = createField(DSL.name("update_ts"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column <code>public.sys_sending_message.updated_by</code>.
     */
    public final TableField<SysSendingMessageRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_sending_message.delete_ts</code>.
     */
    public final TableField<SysSendingMessageRecord, LocalDateTime> DELETE_TS = createField(DSL.name("delete_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_sending_message.deleted_by</code>.
     */
    public final TableField<SysSendingMessageRecord, String> DELETED_BY = createField(DSL.name("deleted_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_sending_message.sys_tenant_id</code>.
     */
    public final TableField<SysSendingMessageRecord, String> SYS_TENANT_ID = createField(DSL.name("sys_tenant_id"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.sys_sending_message.address_to</code>.
     */
    public final TableField<SysSendingMessageRecord, String> ADDRESS_TO = createField(DSL.name("address_to"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.sys_sending_message.address_cc</code>.
     */
    public final TableField<SysSendingMessageRecord, String> ADDRESS_CC = createField(DSL.name("address_cc"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.sys_sending_message.address_bcc</code>.
     */
    public final TableField<SysSendingMessageRecord, String> ADDRESS_BCC = createField(DSL.name("address_bcc"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.sys_sending_message.address_from</code>.
     */
    public final TableField<SysSendingMessageRecord, String> ADDRESS_FROM = createField(DSL.name("address_from"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.sys_sending_message.caption</code>.
     */
    public final TableField<SysSendingMessageRecord, String> CAPTION = createField(DSL.name("caption"), SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>public.sys_sending_message.email_headers</code>.
     */
    public final TableField<SysSendingMessageRecord, String> EMAIL_HEADERS = createField(DSL.name("email_headers"), SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>public.sys_sending_message.content_text</code>.
     */
    public final TableField<SysSendingMessageRecord, String> CONTENT_TEXT = createField(DSL.name("content_text"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.sys_sending_message.content_text_file_id</code>.
     */
    public final TableField<SysSendingMessageRecord, UUID> CONTENT_TEXT_FILE_ID = createField(DSL.name("content_text_file_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.sys_sending_message.deadline</code>.
     */
    public final TableField<SysSendingMessageRecord, OffsetDateTime> DEADLINE = createField(DSL.name("deadline"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column <code>public.sys_sending_message.status</code>.
     */
    public final TableField<SysSendingMessageRecord, Integer> STATUS = createField(DSL.name("status"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sys_sending_message.date_sent</code>.
     */
    public final TableField<SysSendingMessageRecord, LocalDateTime> DATE_SENT = createField(DSL.name("date_sent"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_sending_message.attempts_count</code>.
     */
    public final TableField<SysSendingMessageRecord, Integer> ATTEMPTS_COUNT = createField(DSL.name("attempts_count"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sys_sending_message.attempts_made</code>.
     */
    public final TableField<SysSendingMessageRecord, Integer> ATTEMPTS_MADE = createField(DSL.name("attempts_made"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sys_sending_message.attachments_name</code>.
     */
    public final TableField<SysSendingMessageRecord, String> ATTACHMENTS_NAME = createField(DSL.name("attachments_name"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.sys_sending_message.body_content_type</code>.
     */
    public final TableField<SysSendingMessageRecord, String> BODY_CONTENT_TYPE = createField(DSL.name("body_content_type"), SQLDataType.VARCHAR(50), this, "");

    private SysSendingMessage(Name alias, Table<SysSendingMessageRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysSendingMessage(Name alias, Table<SysSendingMessageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.sys_sending_message</code> table reference
     */
    public SysSendingMessage(String alias) {
        this(DSL.name(alias), SYS_SENDING_MESSAGE);
    }

    /**
     * Create an aliased <code>public.sys_sending_message</code> table reference
     */
    public SysSendingMessage(Name alias) {
        this(alias, SYS_SENDING_MESSAGE);
    }

    /**
     * Create a <code>public.sys_sending_message</code> table reference
     */
    public SysSendingMessage() {
        this(DSL.name("sys_sending_message"), null);
    }

    public <O extends Record> SysSendingMessage(Table<O> child, ForeignKey<O, SysSendingMessageRecord> key) {
        super(child, key, SYS_SENDING_MESSAGE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.IDX_SYS_SENDING_MESSAGE_DATE_SENT, Indexes.IDX_SYS_SENDING_MESSAGE_STATUS, Indexes.IDX_SYS_SENDING_MESSAGE_UPDATE_TS);
    }

    @Override
    public UniqueKey<SysSendingMessageRecord> getPrimaryKey() {
        return Keys.SYS_SENDING_MESSAGE_PKEY;
    }

    @Override
    public List<ForeignKey<SysSendingMessageRecord, ?>> getReferences() {
        return Arrays.asList(Keys.SYS_SENDING_MESSAGE__FK_SYS_SENDING_MESSAGE_CONTENT_FILE);
    }

    private transient SysFile _sysFile;

    public SysFile sysFile() {
        if (_sysFile == null)
            _sysFile = new SysFile(this, Keys.SYS_SENDING_MESSAGE__FK_SYS_SENDING_MESSAGE_CONTENT_FILE);

        return _sysFile;
    }

    @Override
    public SysSendingMessage as(String alias) {
        return new SysSendingMessage(DSL.name(alias), this);
    }

    @Override
    public SysSendingMessage as(Name alias) {
        return new SysSendingMessage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysSendingMessage rename(String name) {
        return new SysSendingMessage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysSendingMessage rename(Name name) {
        return new SysSendingMessage(name, null);
    }
}
