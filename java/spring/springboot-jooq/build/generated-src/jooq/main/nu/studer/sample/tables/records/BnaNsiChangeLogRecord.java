/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import nu.studer.sample.tables.BnaNsiChangeLog;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BnaNsiChangeLogRecord extends UpdatableRecordImpl<BnaNsiChangeLogRecord> implements Record19<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, Boolean, String, String, String, String, String, String, Boolean, Boolean, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.bna_nsi_change_log.id</code>.
     */
    public BnaNsiChangeLogRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.version</code>.
     */
    public BnaNsiChangeLogRecord setVersion(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.create_ts</code>.
     */
    public BnaNsiChangeLogRecord setCreateTs(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.created_by</code>.
     */
    public BnaNsiChangeLogRecord setCreatedBy(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.update_ts</code>.
     */
    public BnaNsiChangeLogRecord setUpdateTs(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.updated_by</code>.
     */
    public BnaNsiChangeLogRecord setUpdatedBy(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.delete_ts</code>.
     */
    public BnaNsiChangeLogRecord setDeleteTs(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.deleted_by</code>.
     */
    public BnaNsiChangeLogRecord setDeletedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.deleted_by</code>.
     */
    public String getDeletedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.received</code>.
     */
    public BnaNsiChangeLogRecord setReceived(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.received</code>.
     */
    public Boolean getReceived() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.kafka_key</code>.
     */
    public BnaNsiChangeLogRecord setKafkaKey(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.kafka_key</code>.
     */
    public String getKafkaKey() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.topic_name</code>.
     */
    public BnaNsiChangeLogRecord setTopicName(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.topic_name</code>.
     */
    public String getTopicName() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.key_</code>.
     */
    public BnaNsiChangeLogRecord setKey_(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.key_</code>.
     */
    public String getKey_() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.message</code>.
     */
    public BnaNsiChangeLogRecord setMessage(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.message</code>.
     */
    public String getMessage() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.direction</code>.
     */
    public BnaNsiChangeLogRecord setDirection(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.direction</code>.
     */
    public String getDirection() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.message_type</code>.
     */
    public BnaNsiChangeLogRecord setMessageType(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.message_type</code>.
     */
    public String getMessageType() {
        return (String) get(14);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.processed</code>.
     */
    public BnaNsiChangeLogRecord setProcessed(Boolean value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.processed</code>.
     */
    public Boolean getProcessed() {
        return (Boolean) get(15);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.manual_check</code>.
     */
    public BnaNsiChangeLogRecord setManualCheck(Boolean value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.manual_check</code>.
     */
    public Boolean getManualCheck() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.sender_name</code>.
     */
    public BnaNsiChangeLogRecord setSenderName(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.sender_name</code>.
     */
    public String getSenderName() {
        return (String) get(17);
    }

    /**
     * Setter for <code>public.bna_nsi_change_log.recipient_name</code>.
     */
    public BnaNsiChangeLogRecord setRecipientName(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>public.bna_nsi_change_log.recipient_name</code>.
     */
    public String getRecipientName() {
        return (String) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row19<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, Boolean, String, String, String, String, String, String, Boolean, Boolean, String, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    @Override
    public Row19<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, Boolean, String, String, String, String, String, String, Boolean, Boolean, String, String> valuesRow() {
        return (Row19) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.ID;
    }

    @Override
    public Field<Integer> field2() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.VERSION;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.CREATE_TS;
    }

    @Override
    public Field<String> field4() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.UPDATE_TS;
    }

    @Override
    public Field<String> field6() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.UPDATED_BY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.DELETE_TS;
    }

    @Override
    public Field<String> field8() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.DELETED_BY;
    }

    @Override
    public Field<Boolean> field9() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.RECEIVED;
    }

    @Override
    public Field<String> field10() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.KAFKA_KEY;
    }

    @Override
    public Field<String> field11() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.TOPIC_NAME;
    }

    @Override
    public Field<String> field12() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.KEY_;
    }

    @Override
    public Field<String> field13() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.MESSAGE;
    }

    @Override
    public Field<String> field14() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.DIRECTION;
    }

    @Override
    public Field<String> field15() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.MESSAGE_TYPE;
    }

    @Override
    public Field<Boolean> field16() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.PROCESSED;
    }

    @Override
    public Field<Boolean> field17() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.MANUAL_CHECK;
    }

    @Override
    public Field<String> field18() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.SENDER_NAME;
    }

    @Override
    public Field<String> field19() {
        return BnaNsiChangeLog.BNA_NSI_CHANGE_LOG.RECIPIENT_NAME;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTs();
    }

    @Override
    public String component4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateTs();
    }

    @Override
    public String component6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime component7() {
        return getDeleteTs();
    }

    @Override
    public String component8() {
        return getDeletedBy();
    }

    @Override
    public Boolean component9() {
        return getReceived();
    }

    @Override
    public String component10() {
        return getKafkaKey();
    }

    @Override
    public String component11() {
        return getTopicName();
    }

    @Override
    public String component12() {
        return getKey_();
    }

    @Override
    public String component13() {
        return getMessage();
    }

    @Override
    public String component14() {
        return getDirection();
    }

    @Override
    public String component15() {
        return getMessageType();
    }

    @Override
    public Boolean component16() {
        return getProcessed();
    }

    @Override
    public Boolean component17() {
        return getManualCheck();
    }

    @Override
    public String component18() {
        return getSenderName();
    }

    @Override
    public String component19() {
        return getRecipientName();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTs();
    }

    @Override
    public String value4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateTs();
    }

    @Override
    public String value6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime value7() {
        return getDeleteTs();
    }

    @Override
    public String value8() {
        return getDeletedBy();
    }

    @Override
    public Boolean value9() {
        return getReceived();
    }

    @Override
    public String value10() {
        return getKafkaKey();
    }

    @Override
    public String value11() {
        return getTopicName();
    }

    @Override
    public String value12() {
        return getKey_();
    }

    @Override
    public String value13() {
        return getMessage();
    }

    @Override
    public String value14() {
        return getDirection();
    }

    @Override
    public String value15() {
        return getMessageType();
    }

    @Override
    public Boolean value16() {
        return getProcessed();
    }

    @Override
    public Boolean value17() {
        return getManualCheck();
    }

    @Override
    public String value18() {
        return getSenderName();
    }

    @Override
    public String value19() {
        return getRecipientName();
    }

    @Override
    public BnaNsiChangeLogRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value3(LocalDateTime value) {
        setCreateTs(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value4(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value5(LocalDateTime value) {
        setUpdateTs(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value7(LocalDateTime value) {
        setDeleteTs(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value8(String value) {
        setDeletedBy(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value9(Boolean value) {
        setReceived(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value10(String value) {
        setKafkaKey(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value11(String value) {
        setTopicName(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value12(String value) {
        setKey_(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value13(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value14(String value) {
        setDirection(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value15(String value) {
        setMessageType(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value16(Boolean value) {
        setProcessed(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value17(Boolean value) {
        setManualCheck(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value18(String value) {
        setSenderName(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord value19(String value) {
        setRecipientName(value);
        return this;
    }

    @Override
    public BnaNsiChangeLogRecord values(UUID value1, Integer value2, LocalDateTime value3, String value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8, Boolean value9, String value10, String value11, String value12, String value13, String value14, String value15, Boolean value16, Boolean value17, String value18, String value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BnaNsiChangeLogRecord
     */
    public BnaNsiChangeLogRecord() {
        super(BnaNsiChangeLog.BNA_NSI_CHANGE_LOG);
    }

    /**
     * Create a detached, initialised BnaNsiChangeLogRecord
     */
    public BnaNsiChangeLogRecord(UUID id, Integer version, LocalDateTime createTs, String createdBy, LocalDateTime updateTs, String updatedBy, LocalDateTime deleteTs, String deletedBy, Boolean received, String kafkaKey, String topicName, String key_, String message, String direction, String messageType, Boolean processed, Boolean manualCheck, String senderName, String recipientName) {
        super(BnaNsiChangeLog.BNA_NSI_CHANGE_LOG);

        setId(id);
        setVersion(version);
        setCreateTs(createTs);
        setCreatedBy(createdBy);
        setUpdateTs(updateTs);
        setUpdatedBy(updatedBy);
        setDeleteTs(deleteTs);
        setDeletedBy(deletedBy);
        setReceived(received);
        setKafkaKey(kafkaKey);
        setTopicName(topicName);
        setKey_(key_);
        setMessage(message);
        setDirection(direction);
        setMessageType(messageType);
        setProcessed(processed);
        setManualCheck(manualCheck);
        setSenderName(senderName);
        setRecipientName(recipientName);
    }

    /**
     * Create a detached, initialised BnaNsiChangeLogRecord
     */
    public BnaNsiChangeLogRecord(nu.studer.sample.tables.pojos.BnaNsiChangeLog value) {
        super(BnaNsiChangeLog.BNA_NSI_CHANGE_LOG);

        if (value != null) {
            setId(value.getId());
            setVersion(value.getVersion());
            setCreateTs(value.getCreateTs());
            setCreatedBy(value.getCreatedBy());
            setUpdateTs(value.getUpdateTs());
            setUpdatedBy(value.getUpdatedBy());
            setDeleteTs(value.getDeleteTs());
            setDeletedBy(value.getDeletedBy());
            setReceived(value.getReceived());
            setKafkaKey(value.getKafkaKey());
            setTopicName(value.getTopicName());
            setKey_(value.getKey_());
            setMessage(value.getMessage());
            setDirection(value.getDirection());
            setMessageType(value.getMessageType());
            setProcessed(value.getProcessed());
            setManualCheck(value.getManualCheck());
            setSenderName(value.getSenderName());
            setRecipientName(value.getRecipientName());
        }
    }
}
