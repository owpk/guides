/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import nu.studer.sample.Indexes;
import nu.studer.sample.Keys;
import nu.studer.sample.Public;
import nu.studer.sample.tables.records.SysCategoryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysCategory extends TableImpl<SysCategoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.sys_category</code>
     */
    public static final SysCategory SYS_CATEGORY = new SysCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysCategoryRecord> getRecordType() {
        return SysCategoryRecord.class;
    }

    /**
     * The column <code>public.sys_category.id</code>.
     */
    public final TableField<SysCategoryRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.sys_category.create_ts</code>.
     */
    public final TableField<SysCategoryRecord, LocalDateTime> CREATE_TS = createField(DSL.name("create_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_category.created_by</code>.
     */
    public final TableField<SysCategoryRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_category.version</code>.
     */
    public final TableField<SysCategoryRecord, Integer> VERSION = createField(DSL.name("version"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.sys_category.update_ts</code>.
     */
    public final TableField<SysCategoryRecord, LocalDateTime> UPDATE_TS = createField(DSL.name("update_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_category.updated_by</code>.
     */
    public final TableField<SysCategoryRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_category.delete_ts</code>.
     */
    public final TableField<SysCategoryRecord, LocalDateTime> DELETE_TS = createField(DSL.name("delete_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_category.deleted_by</code>.
     */
    public final TableField<SysCategoryRecord, String> DELETED_BY = createField(DSL.name("deleted_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_category.name</code>.
     */
    public final TableField<SysCategoryRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.sys_category.special</code>.
     */
    public final TableField<SysCategoryRecord, String> SPECIAL = createField(DSL.name("special"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_category.entity_type</code>.
     */
    public final TableField<SysCategoryRecord, String> ENTITY_TYPE = createField(DSL.name("entity_type"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.sys_category.is_default</code>.
     */
    public final TableField<SysCategoryRecord, Boolean> IS_DEFAULT = createField(DSL.name("is_default"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.sys_category.discriminator</code>.
     */
    public final TableField<SysCategoryRecord, Integer> DISCRIMINATOR = createField(DSL.name("discriminator"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sys_category.locale_names</code>.
     */
    public final TableField<SysCategoryRecord, String> LOCALE_NAMES = createField(DSL.name("locale_names"), SQLDataType.VARCHAR(1000), this, "");

    private SysCategory(Name alias, Table<SysCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysCategory(Name alias, Table<SysCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.sys_category</code> table reference
     */
    public SysCategory(String alias) {
        this(DSL.name(alias), SYS_CATEGORY);
    }

    /**
     * Create an aliased <code>public.sys_category</code> table reference
     */
    public SysCategory(Name alias) {
        this(alias, SYS_CATEGORY);
    }

    /**
     * Create a <code>public.sys_category</code> table reference
     */
    public SysCategory() {
        this(DSL.name("sys_category"), null);
    }

    public <O extends Record> SysCategory(Table<O> child, ForeignKey<O, SysCategoryRecord> key) {
        super(child, key, SYS_CATEGORY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.IDX_SYS_CATEGORY_UNIQ_NAME_ENTITY_TYPE);
    }

    @Override
    public UniqueKey<SysCategoryRecord> getPrimaryKey() {
        return Keys.SYS_CATEGORY_PKEY;
    }

    @Override
    public SysCategory as(String alias) {
        return new SysCategory(DSL.name(alias), this);
    }

    @Override
    public SysCategory as(Name alias) {
        return new SysCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysCategory rename(String name) {
        return new SysCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysCategory rename(Name name) {
        return new SysCategory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<UUID, LocalDateTime, String, Integer, LocalDateTime, String, LocalDateTime, String, String, String, String, Boolean, Integer, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
