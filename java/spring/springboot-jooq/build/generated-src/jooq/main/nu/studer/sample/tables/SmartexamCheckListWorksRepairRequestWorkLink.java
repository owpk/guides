/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import nu.studer.sample.Keys;
import nu.studer.sample.Public;
import nu.studer.sample.tables.records.SmartexamCheckListWorksRepairRequestWorkLinkRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartexamCheckListWorksRepairRequestWorkLink extends TableImpl<SmartexamCheckListWorksRepairRequestWorkLinkRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>public.smartexam_check_list_works_repair_request_work_link</code>
     */
    public static final SmartexamCheckListWorksRepairRequestWorkLink SMARTEXAM_CHECK_LIST_WORKS_REPAIR_REQUEST_WORK_LINK = new SmartexamCheckListWorksRepairRequestWorkLink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SmartexamCheckListWorksRepairRequestWorkLinkRecord> getRecordType() {
        return SmartexamCheckListWorksRepairRequestWorkLinkRecord.class;
    }

    /**
     * The column
     * <code>public.smartexam_check_list_works_repair_request_work_link.check_list_works_id</code>.
     */
    public final TableField<SmartexamCheckListWorksRepairRequestWorkLinkRecord, UUID> CHECK_LIST_WORKS_ID = createField(DSL.name("check_list_works_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public.smartexam_check_list_works_repair_request_work_link.repair_request_work_id</code>.
     */
    public final TableField<SmartexamCheckListWorksRepairRequestWorkLinkRecord, UUID> REPAIR_REQUEST_WORK_ID = createField(DSL.name("repair_request_work_id"), SQLDataType.UUID.nullable(false), this, "");

    private SmartexamCheckListWorksRepairRequestWorkLink(Name alias, Table<SmartexamCheckListWorksRepairRequestWorkLinkRecord> aliased) {
        this(alias, aliased, null);
    }

    private SmartexamCheckListWorksRepairRequestWorkLink(Name alias, Table<SmartexamCheckListWorksRepairRequestWorkLinkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>public.smartexam_check_list_works_repair_request_work_link</code>
     * table reference
     */
    public SmartexamCheckListWorksRepairRequestWorkLink(String alias) {
        this(DSL.name(alias), SMARTEXAM_CHECK_LIST_WORKS_REPAIR_REQUEST_WORK_LINK);
    }

    /**
     * Create an aliased
     * <code>public.smartexam_check_list_works_repair_request_work_link</code>
     * table reference
     */
    public SmartexamCheckListWorksRepairRequestWorkLink(Name alias) {
        this(alias, SMARTEXAM_CHECK_LIST_WORKS_REPAIR_REQUEST_WORK_LINK);
    }

    /**
     * Create a
     * <code>public.smartexam_check_list_works_repair_request_work_link</code>
     * table reference
     */
    public SmartexamCheckListWorksRepairRequestWorkLink() {
        this(DSL.name("smartexam_check_list_works_repair_request_work_link"), null);
    }

    public <O extends Record> SmartexamCheckListWorksRepairRequestWorkLink(Table<O> child, ForeignKey<O, SmartexamCheckListWorksRepairRequestWorkLinkRecord> key) {
        super(child, key, SMARTEXAM_CHECK_LIST_WORKS_REPAIR_REQUEST_WORK_LINK);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<SmartexamCheckListWorksRepairRequestWorkLinkRecord> getPrimaryKey() {
        return Keys.SMARTEXAM_CHECK_LIST_WORKS_REPAIR_REQUEST_WORK_LINK_PKEY;
    }

    @Override
    public List<ForeignKey<SmartexamCheckListWorksRepairRequestWorkLinkRecord, ?>> getReferences() {
        return Arrays.asList(Keys.SMARTEXAM_CHECK_LIST_WORKS_REPAIR_REQUEST_WORK_LINK__FK_CHELISWORREPREQWOR_ON_CHECK_LIST_WORKS, Keys.SMARTEXAM_CHECK_LIST_WORKS_REPAIR_REQUEST_WORK_LINK__FK_CHELISWORREPREQWOR_ON_REPAIR_REQUEST_WORK);
    }

    private transient SmartexamCheckListWorks _smartexamCheckListWorks;
    private transient SmartexamRepairRequestWork _smartexamRepairRequestWork;

    public SmartexamCheckListWorks smartexamCheckListWorks() {
        if (_smartexamCheckListWorks == null)
            _smartexamCheckListWorks = new SmartexamCheckListWorks(this, Keys.SMARTEXAM_CHECK_LIST_WORKS_REPAIR_REQUEST_WORK_LINK__FK_CHELISWORREPREQWOR_ON_CHECK_LIST_WORKS);

        return _smartexamCheckListWorks;
    }

    public SmartexamRepairRequestWork smartexamRepairRequestWork() {
        if (_smartexamRepairRequestWork == null)
            _smartexamRepairRequestWork = new SmartexamRepairRequestWork(this, Keys.SMARTEXAM_CHECK_LIST_WORKS_REPAIR_REQUEST_WORK_LINK__FK_CHELISWORREPREQWOR_ON_REPAIR_REQUEST_WORK);

        return _smartexamRepairRequestWork;
    }

    @Override
    public SmartexamCheckListWorksRepairRequestWorkLink as(String alias) {
        return new SmartexamCheckListWorksRepairRequestWorkLink(DSL.name(alias), this);
    }

    @Override
    public SmartexamCheckListWorksRepairRequestWorkLink as(Name alias) {
        return new SmartexamCheckListWorksRepairRequestWorkLink(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SmartexamCheckListWorksRepairRequestWorkLink rename(String name) {
        return new SmartexamCheckListWorksRepairRequestWorkLink(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SmartexamCheckListWorksRepairRequestWorkLink rename(Name name) {
        return new SmartexamCheckListWorksRepairRequestWorkLink(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
