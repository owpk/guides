/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import nu.studer.sample.Keys;
import nu.studer.sample.Public;
import nu.studer.sample.tables.records.SysFolderRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysFolder extends TableImpl<SysFolderRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.sys_folder</code>
     */
    public static final SysFolder SYS_FOLDER = new SysFolder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysFolderRecord> getRecordType() {
        return SysFolderRecord.class;
    }

    /**
     * The column <code>public.sys_folder.id</code>.
     */
    public final TableField<SysFolderRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.sys_folder.create_ts</code>.
     */
    public final TableField<SysFolderRecord, LocalDateTime> CREATE_TS = createField(DSL.name("create_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_folder.created_by</code>.
     */
    public final TableField<SysFolderRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_folder.version</code>.
     */
    public final TableField<SysFolderRecord, Integer> VERSION = createField(DSL.name("version"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.sys_folder.update_ts</code>.
     */
    public final TableField<SysFolderRecord, LocalDateTime> UPDATE_TS = createField(DSL.name("update_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_folder.updated_by</code>.
     */
    public final TableField<SysFolderRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_folder.delete_ts</code>.
     */
    public final TableField<SysFolderRecord, LocalDateTime> DELETE_TS = createField(DSL.name("delete_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_folder.deleted_by</code>.
     */
    public final TableField<SysFolderRecord, String> DELETED_BY = createField(DSL.name("deleted_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_folder.sys_tenant_id</code>.
     */
    public final TableField<SysFolderRecord, String> SYS_TENANT_ID = createField(DSL.name("sys_tenant_id"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.sys_folder.folder_type</code>.
     */
    public final TableField<SysFolderRecord, String> FOLDER_TYPE = createField(DSL.name("folder_type"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.sys_folder.parent_id</code>.
     */
    public final TableField<SysFolderRecord, UUID> PARENT_ID = createField(DSL.name("parent_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.sys_folder.name</code>.
     */
    public final TableField<SysFolderRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.sys_folder.tab_name</code>.
     */
    public final TableField<SysFolderRecord, String> TAB_NAME = createField(DSL.name("tab_name"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.sys_folder.sort_order</code>.
     */
    public final TableField<SysFolderRecord, Integer> SORT_ORDER = createField(DSL.name("sort_order"), SQLDataType.INTEGER, this, "");

    private SysFolder(Name alias, Table<SysFolderRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysFolder(Name alias, Table<SysFolderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.sys_folder</code> table reference
     */
    public SysFolder(String alias) {
        this(DSL.name(alias), SYS_FOLDER);
    }

    /**
     * Create an aliased <code>public.sys_folder</code> table reference
     */
    public SysFolder(Name alias) {
        this(alias, SYS_FOLDER);
    }

    /**
     * Create a <code>public.sys_folder</code> table reference
     */
    public SysFolder() {
        this(DSL.name("sys_folder"), null);
    }

    public <O extends Record> SysFolder(Table<O> child, ForeignKey<O, SysFolderRecord> key) {
        super(child, key, SYS_FOLDER);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<SysFolderRecord> getPrimaryKey() {
        return Keys.SYS_FOLDER_PKEY;
    }

    @Override
    public List<ForeignKey<SysFolderRecord, ?>> getReferences() {
        return Arrays.asList(Keys.SYS_FOLDER__FK_SYS_FOLDER_PARENT);
    }

    private transient SysFolder _sysFolder;

    public SysFolder sysFolder() {
        if (_sysFolder == null)
            _sysFolder = new SysFolder(this, Keys.SYS_FOLDER__FK_SYS_FOLDER_PARENT);

        return _sysFolder;
    }

    @Override
    public SysFolder as(String alias) {
        return new SysFolder(DSL.name(alias), this);
    }

    @Override
    public SysFolder as(Name alias) {
        return new SysFolder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysFolder rename(String name) {
        return new SysFolder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysFolder rename(Name name) {
        return new SysFolder(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<UUID, LocalDateTime, String, Integer, LocalDateTime, String, LocalDateTime, String, String, String, UUID, String, String, Integer> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
