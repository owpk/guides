/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import nu.studer.sample.tables.SysServer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysServerRecord extends UpdatableRecordImpl<SysServerRecord> implements Record8<UUID, LocalDateTime, String, LocalDateTime, String, String, Boolean, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.sys_server.id</code>.
     */
    public SysServerRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.sys_server.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.sys_server.create_ts</code>.
     */
    public SysServerRecord setCreateTs(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.sys_server.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.sys_server.created_by</code>.
     */
    public SysServerRecord setCreatedBy(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.sys_server.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.sys_server.update_ts</code>.
     */
    public SysServerRecord setUpdateTs(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.sys_server.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.sys_server.updated_by</code>.
     */
    public SysServerRecord setUpdatedBy(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.sys_server.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.sys_server.name</code>.
     */
    public SysServerRecord setName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.sys_server.name</code>.
     */
    public String getName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.sys_server.is_running</code>.
     */
    public SysServerRecord setIsRunning(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.sys_server.is_running</code>.
     */
    public Boolean getIsRunning() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.sys_server.data</code>.
     */
    public SysServerRecord setData(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.sys_server.data</code>.
     */
    public String getData() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, LocalDateTime, String, LocalDateTime, String, String, Boolean, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, LocalDateTime, String, LocalDateTime, String, String, Boolean, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return SysServer.SYS_SERVER.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return SysServer.SYS_SERVER.CREATE_TS;
    }

    @Override
    public Field<String> field3() {
        return SysServer.SYS_SERVER.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return SysServer.SYS_SERVER.UPDATE_TS;
    }

    @Override
    public Field<String> field5() {
        return SysServer.SYS_SERVER.UPDATED_BY;
    }

    @Override
    public Field<String> field6() {
        return SysServer.SYS_SERVER.NAME;
    }

    @Override
    public Field<Boolean> field7() {
        return SysServer.SYS_SERVER.IS_RUNNING;
    }

    @Override
    public Field<String> field8() {
        return SysServer.SYS_SERVER.DATA;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateTs();
    }

    @Override
    public String component3() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdateTs();
    }

    @Override
    public String component5() {
        return getUpdatedBy();
    }

    @Override
    public String component6() {
        return getName();
    }

    @Override
    public Boolean component7() {
        return getIsRunning();
    }

    @Override
    public String component8() {
        return getData();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateTs();
    }

    @Override
    public String value3() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdateTs();
    }

    @Override
    public String value5() {
        return getUpdatedBy();
    }

    @Override
    public String value6() {
        return getName();
    }

    @Override
    public Boolean value7() {
        return getIsRunning();
    }

    @Override
    public String value8() {
        return getData();
    }

    @Override
    public SysServerRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SysServerRecord value2(LocalDateTime value) {
        setCreateTs(value);
        return this;
    }

    @Override
    public SysServerRecord value3(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public SysServerRecord value4(LocalDateTime value) {
        setUpdateTs(value);
        return this;
    }

    @Override
    public SysServerRecord value5(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public SysServerRecord value6(String value) {
        setName(value);
        return this;
    }

    @Override
    public SysServerRecord value7(Boolean value) {
        setIsRunning(value);
        return this;
    }

    @Override
    public SysServerRecord value8(String value) {
        setData(value);
        return this;
    }

    @Override
    public SysServerRecord values(UUID value1, LocalDateTime value2, String value3, LocalDateTime value4, String value5, String value6, Boolean value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysServerRecord
     */
    public SysServerRecord() {
        super(SysServer.SYS_SERVER);
    }

    /**
     * Create a detached, initialised SysServerRecord
     */
    public SysServerRecord(UUID id, LocalDateTime createTs, String createdBy, LocalDateTime updateTs, String updatedBy, String name, Boolean isRunning, String data) {
        super(SysServer.SYS_SERVER);

        setId(id);
        setCreateTs(createTs);
        setCreatedBy(createdBy);
        setUpdateTs(updateTs);
        setUpdatedBy(updatedBy);
        setName(name);
        setIsRunning(isRunning);
        setData(data);
    }

    /**
     * Create a detached, initialised SysServerRecord
     */
    public SysServerRecord(nu.studer.sample.tables.pojos.SysServer value) {
        super(SysServer.SYS_SERVER);

        if (value != null) {
            setId(value.getId());
            setCreateTs(value.getCreateTs());
            setCreatedBy(value.getCreatedBy());
            setUpdateTs(value.getUpdateTs());
            setUpdatedBy(value.getUpdatedBy());
            setName(value.getName());
            setIsRunning(value.getIsRunning());
            setData(value.getData());
        }
    }
}
