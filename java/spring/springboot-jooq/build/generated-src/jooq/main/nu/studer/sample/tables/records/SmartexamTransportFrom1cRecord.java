/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.UUID;

import nu.studer.sample.tables.SmartexamTransportFrom1c;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartexamTransportFrom1cRecord extends UpdatableRecordImpl<SmartexamTransportFrom1cRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.smartexam_transport_from1c.id</code>.
     */
    public SmartexamTransportFrom1cRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.name</code>.
     */
    public SmartexamTransportFrom1cRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.create_year</code>.
     */
    public SmartexamTransportFrom1cRecord setCreateYear(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.create_year</code>.
     */
    public Integer getCreateYear() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.vin</code>.
     */
    public SmartexamTransportFrom1cRecord setVin(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.vin</code>.
     */
    public String getVin() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>public.smartexam_transport_from1c.organization_id</code>.
     */
    public SmartexamTransportFrom1cRecord setOrganizationId(UUID value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_transport_from1c.organization_id</code>.
     */
    public UUID getOrganizationId() {
        return (UUID) get(4);
    }

    /**
     * Setter for
     * <code>public.smartexam_transport_from1c.costs_organization_id</code>.
     */
    public SmartexamTransportFrom1cRecord setCostsOrganizationId(UUID value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_transport_from1c.costs_organization_id</code>.
     */
    public UUID getCostsOrganizationId() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.lizing</code>.
     */
    public SmartexamTransportFrom1cRecord setLizing(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.lizing</code>.
     */
    public String getLizing() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.date_gibdd_set</code>.
     */
    public SmartexamTransportFrom1cRecord setDateGibddSet(LocalDate value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.date_gibdd_set</code>.
     */
    public LocalDate getDateGibddSet() {
        return (LocalDate) get(7);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.status</code>.
     */
    public SmartexamTransportFrom1cRecord setStatus(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.status</code>.
     */
    public String getStatus() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.license_id</code>.
     */
    public SmartexamTransportFrom1cRecord setLicenseId(UUID value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.license_id</code>.
     */
    public UUID getLicenseId() {
        return (UUID) get(9);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.reg_num</code>.
     */
    public SmartexamTransportFrom1cRecord setRegNum(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.reg_num</code>.
     */
    public String getRegNum() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>public.smartexam_transport_from1c.transport_type_id</code>.
     */
    public SmartexamTransportFrom1cRecord setTransportTypeId(UUID value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_transport_from1c.transport_type_id</code>.
     */
    public UUID getTransportTypeId() {
        return (UUID) get(11);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.model</code>.
     */
    public SmartexamTransportFrom1cRecord setModel(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.model</code>.
     */
    public String getModel() {
        return (String) get(12);
    }

    /**
     * Setter for
     * <code>public.smartexam_transport_from1c.online_gibdd_id</code>.
     */
    public SmartexamTransportFrom1cRecord setOnlineGibddId(Integer value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_transport_from1c.online_gibdd_id</code>.
     */
    public Integer getOnlineGibddId() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.received</code>.
     */
    public SmartexamTransportFrom1cRecord setReceived(Boolean value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.received</code>.
     */
    public Boolean getReceived() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.width</code>.
     */
    public SmartexamTransportFrom1cRecord setWidth(Double value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.width</code>.
     */
    public Double getWidth() {
        return (Double) get(15);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.deleted_by</code>.
     */
    public SmartexamTransportFrom1cRecord setDeletedBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.deleted_by</code>.
     */
    public String getDeletedBy() {
        return (String) get(16);
    }

    /**
     * Setter for
     * <code>public.smartexam_transport_from1c.base_garbage_container_id</code>.
     */
    public SmartexamTransportFrom1cRecord setBaseGarbageContainerId(UUID value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_transport_from1c.base_garbage_container_id</code>.
     */
    public UUID getBaseGarbageContainerId() {
        return (UUID) get(17);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.update_ts</code>.
     */
    public SmartexamTransportFrom1cRecord setUpdateTs(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.gps_id</code>.
     */
    public SmartexamTransportFrom1cRecord setGpsId(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.gps_id</code>.
     */
    public String getGpsId() {
        return (String) get(19);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.version</code>.
     */
    public SmartexamTransportFrom1cRecord setVersion(Integer value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(20);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.create_ts</code>.
     */
    public SmartexamTransportFrom1cRecord setCreateTs(LocalDateTime value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return (LocalDateTime) get(21);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.kafka_key</code>.
     */
    public SmartexamTransportFrom1cRecord setKafkaKey(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.kafka_key</code>.
     */
    public String getKafkaKey() {
        return (String) get(22);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.height</code>.
     */
    public SmartexamTransportFrom1cRecord setHeight(Double value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.height</code>.
     */
    public Double getHeight() {
        return (Double) get(23);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c._long</code>.
     */
    public SmartexamTransportFrom1cRecord set_Long(Double value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c._long</code>.
     */
    public Double get_Long() {
        return (Double) get(24);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.consumption</code>.
     */
    public SmartexamTransportFrom1cRecord setConsumption(Double value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.consumption</code>.
     */
    public Double getConsumption() {
        return (Double) get(25);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.updated_by</code>.
     */
    public SmartexamTransportFrom1cRecord setUpdatedBy(String value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(26);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.delete_ts</code>.
     */
    public SmartexamTransportFrom1cRecord setDeleteTs(LocalDateTime value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return (LocalDateTime) get(27);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.created_by</code>.
     */
    public SmartexamTransportFrom1cRecord setCreatedBy(String value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(28);
    }

    /**
     * Setter for <code>public.smartexam_transport_from1c.gps_system</code>.
     */
    public SmartexamTransportFrom1cRecord setGpsSystem(String value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_transport_from1c.gps_system</code>.
     */
    public String getGpsSystem() {
        return (String) get(29);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SmartexamTransportFrom1cRecord
     */
    public SmartexamTransportFrom1cRecord() {
        super(SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C);
    }

    /**
     * Create a detached, initialised SmartexamTransportFrom1cRecord
     */
    public SmartexamTransportFrom1cRecord(UUID id, String name, Integer createYear, String vin, UUID organizationId, UUID costsOrganizationId, String lizing, LocalDate dateGibddSet, String status, UUID licenseId, String regNum, UUID transportTypeId, String model, Integer onlineGibddId, Boolean received, Double width, String deletedBy, UUID baseGarbageContainerId, LocalDateTime updateTs, String gpsId, Integer version, LocalDateTime createTs, String kafkaKey, Double height, Double _Long, Double consumption, String updatedBy, LocalDateTime deleteTs, String createdBy, String gpsSystem) {
        super(SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C);

        setId(id);
        setName(name);
        setCreateYear(createYear);
        setVin(vin);
        setOrganizationId(organizationId);
        setCostsOrganizationId(costsOrganizationId);
        setLizing(lizing);
        setDateGibddSet(dateGibddSet);
        setStatus(status);
        setLicenseId(licenseId);
        setRegNum(regNum);
        setTransportTypeId(transportTypeId);
        setModel(model);
        setOnlineGibddId(onlineGibddId);
        setReceived(received);
        setWidth(width);
        setDeletedBy(deletedBy);
        setBaseGarbageContainerId(baseGarbageContainerId);
        setUpdateTs(updateTs);
        setGpsId(gpsId);
        setVersion(version);
        setCreateTs(createTs);
        setKafkaKey(kafkaKey);
        setHeight(height);
        set_Long(_Long);
        setConsumption(consumption);
        setUpdatedBy(updatedBy);
        setDeleteTs(deleteTs);
        setCreatedBy(createdBy);
        setGpsSystem(gpsSystem);
    }

    /**
     * Create a detached, initialised SmartexamTransportFrom1cRecord
     */
    public SmartexamTransportFrom1cRecord(nu.studer.sample.tables.pojos.SmartexamTransportFrom1c value) {
        super(SmartexamTransportFrom1c.SMARTEXAM_TRANSPORT_FROM1C);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setCreateYear(value.getCreateYear());
            setVin(value.getVin());
            setOrganizationId(value.getOrganizationId());
            setCostsOrganizationId(value.getCostsOrganizationId());
            setLizing(value.getLizing());
            setDateGibddSet(value.getDateGibddSet());
            setStatus(value.getStatus());
            setLicenseId(value.getLicenseId());
            setRegNum(value.getRegNum());
            setTransportTypeId(value.getTransportTypeId());
            setModel(value.getModel());
            setOnlineGibddId(value.getOnlineGibddId());
            setReceived(value.getReceived());
            setWidth(value.getWidth());
            setDeletedBy(value.getDeletedBy());
            setBaseGarbageContainerId(value.getBaseGarbageContainerId());
            setUpdateTs(value.getUpdateTs());
            setGpsId(value.getGpsId());
            setVersion(value.getVersion());
            setCreateTs(value.getCreateTs());
            setKafkaKey(value.getKafkaKey());
            setHeight(value.getHeight());
            set_Long(value.get_Long());
            setConsumption(value.getConsumption());
            setUpdatedBy(value.getUpdatedBy());
            setDeleteTs(value.getDeleteTs());
            setCreatedBy(value.getCreatedBy());
            setGpsSystem(value.getGpsSystem());
        }
    }
}
