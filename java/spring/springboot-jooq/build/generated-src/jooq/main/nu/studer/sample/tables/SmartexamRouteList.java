/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import nu.studer.sample.Indexes;
import nu.studer.sample.Keys;
import nu.studer.sample.Public;
import nu.studer.sample.tables.records.SmartexamRouteListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartexamRouteList extends TableImpl<SmartexamRouteListRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.smartexam_route_list</code>
     */
    public static final SmartexamRouteList SMARTEXAM_ROUTE_LIST = new SmartexamRouteList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SmartexamRouteListRecord> getRecordType() {
        return SmartexamRouteListRecord.class;
    }

    /**
     * The column <code>public.smartexam_route_list.id</code>.
     */
    public final TableField<SmartexamRouteListRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.smartexam_route_list.version</code>.
     */
    public final TableField<SmartexamRouteListRecord, Integer> VERSION = createField(DSL.name("version"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.smartexam_route_list.create_ts</code>.
     */
    public final TableField<SmartexamRouteListRecord, LocalDateTime> CREATE_TS = createField(DSL.name("create_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.smartexam_route_list.created_by</code>.
     */
    public final TableField<SmartexamRouteListRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.smartexam_route_list.update_ts</code>.
     */
    public final TableField<SmartexamRouteListRecord, LocalDateTime> UPDATE_TS = createField(DSL.name("update_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.smartexam_route_list.updated_by</code>.
     */
    public final TableField<SmartexamRouteListRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.smartexam_route_list.delete_ts</code>.
     */
    public final TableField<SmartexamRouteListRecord, LocalDateTime> DELETE_TS = createField(DSL.name("delete_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.smartexam_route_list.deleted_by</code>.
     */
    public final TableField<SmartexamRouteListRecord, String> DELETED_BY = createField(DSL.name("deleted_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.smartexam_route_list.date_</code>.
     */
    public final TableField<SmartexamRouteListRecord, LocalDateTime> DATE_ = createField(DSL.name("date_"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.smartexam_route_list.driver_id</code>.
     */
    public final TableField<SmartexamRouteListRecord, UUID> DRIVER_ID = createField(DSL.name("driver_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.smartexam_route_list.change_</code>.
     */
    public final TableField<SmartexamRouteListRecord, String> CHANGE_ = createField(DSL.name("change_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.smartexam_route_list.date_of_departure</code>.
     */
    public final TableField<SmartexamRouteListRecord, LocalDateTime> DATE_OF_DEPARTURE = createField(DSL.name("date_of_departure"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.smartexam_route_list.speedometer</code>.
     */
    public final TableField<SmartexamRouteListRecord, Double> SPEEDOMETER = createField(DSL.name("speedometer"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.smartexam_route_list.division_id</code>.
     */
    public final TableField<SmartexamRouteListRecord, UUID> DIVISION_ID = createField(DSL.name("division_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.smartexam_route_list.engine_hours</code>.
     */
    public final TableField<SmartexamRouteListRecord, Integer> ENGINE_HOURS = createField(DSL.name("engine_hours"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.smartexam_route_list.transport_id</code>.
     */
    public final TableField<SmartexamRouteListRecord, UUID> TRANSPORT_ID = createField(DSL.name("transport_id"), SQLDataType.UUID, this, "");

    private SmartexamRouteList(Name alias, Table<SmartexamRouteListRecord> aliased) {
        this(alias, aliased, null);
    }

    private SmartexamRouteList(Name alias, Table<SmartexamRouteListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.smartexam_route_list</code> table
     * reference
     */
    public SmartexamRouteList(String alias) {
        this(DSL.name(alias), SMARTEXAM_ROUTE_LIST);
    }

    /**
     * Create an aliased <code>public.smartexam_route_list</code> table
     * reference
     */
    public SmartexamRouteList(Name alias) {
        this(alias, SMARTEXAM_ROUTE_LIST);
    }

    /**
     * Create a <code>public.smartexam_route_list</code> table reference
     */
    public SmartexamRouteList() {
        this(DSL.name("smartexam_route_list"), null);
    }

    public <O extends Record> SmartexamRouteList(Table<O> child, ForeignKey<O, SmartexamRouteListRecord> key) {
        super(child, key, SMARTEXAM_ROUTE_LIST);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.IDX_SMARTEXAM_ROUTE_LIST_ON_DIVISION, Indexes.IDX_SMARTEXAM_ROUTE_LIST_ON_DRIVER, Indexes.IDX_SMARTEXAM_ROUTE_LIST_ON_TRANSPORT);
    }

    @Override
    public UniqueKey<SmartexamRouteListRecord> getPrimaryKey() {
        return Keys.SMARTEXAM_ROUTE_LIST_PKEY;
    }

    @Override
    public List<ForeignKey<SmartexamRouteListRecord, ?>> getReferences() {
        return Arrays.asList(Keys.SMARTEXAM_ROUTE_LIST__FK_SMARTEXAM_ROUTE_LIST_ON_DRIVER, Keys.SMARTEXAM_ROUTE_LIST__FK_SMARTEXAM_ROUTE_LIST_ON_DIVISION, Keys.SMARTEXAM_ROUTE_LIST__FK_SMARTEXAM_ROUTE_LIST_ON_TRANSPORT);
    }

    private transient SmartexamEmployee _smartexamEmployee;
    private transient SmartmonDivision _smartmonDivision;
    private transient SmartmonTransport _smartmonTransport;

    public SmartexamEmployee smartexamEmployee() {
        if (_smartexamEmployee == null)
            _smartexamEmployee = new SmartexamEmployee(this, Keys.SMARTEXAM_ROUTE_LIST__FK_SMARTEXAM_ROUTE_LIST_ON_DRIVER);

        return _smartexamEmployee;
    }

    public SmartmonDivision smartmonDivision() {
        if (_smartmonDivision == null)
            _smartmonDivision = new SmartmonDivision(this, Keys.SMARTEXAM_ROUTE_LIST__FK_SMARTEXAM_ROUTE_LIST_ON_DIVISION);

        return _smartmonDivision;
    }

    public SmartmonTransport smartmonTransport() {
        if (_smartmonTransport == null)
            _smartmonTransport = new SmartmonTransport(this, Keys.SMARTEXAM_ROUTE_LIST__FK_SMARTEXAM_ROUTE_LIST_ON_TRANSPORT);

        return _smartmonTransport;
    }

    @Override
    public SmartexamRouteList as(String alias) {
        return new SmartexamRouteList(DSL.name(alias), this);
    }

    @Override
    public SmartexamRouteList as(Name alias) {
        return new SmartexamRouteList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SmartexamRouteList rename(String name) {
        return new SmartexamRouteList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SmartexamRouteList rename(Name name) {
        return new SmartexamRouteList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, LocalDateTime, UUID, String, LocalDateTime, Double, UUID, Integer, UUID> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
