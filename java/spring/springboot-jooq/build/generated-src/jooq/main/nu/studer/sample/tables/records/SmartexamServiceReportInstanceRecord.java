/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.UUID;

import nu.studer.sample.tables.SmartexamServiceReportInstance;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartexamServiceReportInstanceRecord extends UpdatableRecordImpl<SmartexamServiceReportInstanceRecord> implements Record16<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, LocalDate, String, Boolean, String, UUID, Boolean, UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.smartexam_service_report_instance.id</code>.
     */
    public SmartexamServiceReportInstanceRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_service_report_instance.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.smartexam_service_report_instance.version</code>.
     */
    public SmartexamServiceReportInstanceRecord setVersion(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_service_report_instance.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance.create_ts</code>.
     */
    public SmartexamServiceReportInstanceRecord setCreateTs(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance.created_by</code>.
     */
    public SmartexamServiceReportInstanceRecord setCreatedBy(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance.update_ts</code>.
     */
    public SmartexamServiceReportInstanceRecord setUpdateTs(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance.updated_by</code>.
     */
    public SmartexamServiceReportInstanceRecord setUpdatedBy(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance.delete_ts</code>.
     */
    public SmartexamServiceReportInstanceRecord setDeleteTs(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance.deleted_by</code>.
     */
    public SmartexamServiceReportInstanceRecord setDeletedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance.deleted_by</code>.
     */
    public String getDeletedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.smartexam_service_report_instance.date_</code>.
     */
    public SmartexamServiceReportInstanceRecord setDate_(LocalDate value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_service_report_instance.date_</code>.
     */
    public LocalDate getDate_() {
        return (LocalDate) get(8);
    }

    /**
     * Setter for <code>public.smartexam_service_report_instance.status</code>.
     */
    public SmartexamServiceReportInstanceRecord setStatus(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_service_report_instance.status</code>.
     */
    public String getStatus() {
        return (String) get(9);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance.prediction</code>.
     */
    public SmartexamServiceReportInstanceRecord setPrediction(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance.prediction</code>.
     */
    public Boolean getPrediction() {
        return (Boolean) get(10);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance.description</code>.
     */
    public SmartexamServiceReportInstanceRecord setDescription(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance.description</code>.
     */
    public String getDescription() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance.division_id</code>.
     */
    public SmartexamServiceReportInstanceRecord setDivisionId(UUID value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance.division_id</code>.
     */
    public UUID getDivisionId() {
        return (UUID) get(12);
    }

    /**
     * Setter for <code>public.smartexam_service_report_instance.synch</code>.
     */
    public SmartexamServiceReportInstanceRecord setSynch(Boolean value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexam_service_report_instance.synch</code>.
     */
    public Boolean getSynch() {
        return (Boolean) get(13);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance.check_list_instance_id</code>.
     */
    public SmartexamServiceReportInstanceRecord setCheckListInstanceId(UUID value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance.check_list_instance_id</code>.
     */
    public UUID getCheckListInstanceId() {
        return (UUID) get(14);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance.transport_id</code>.
     */
    public SmartexamServiceReportInstanceRecord setTransportId(UUID value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance.transport_id</code>.
     */
    public UUID getTransportId() {
        return (UUID) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, LocalDate, String, Boolean, String, UUID, Boolean, UUID, UUID> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, LocalDate, String, Boolean, String, UUID, Boolean, UUID, UUID> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.VERSION;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.CREATE_TS;
    }

    @Override
    public Field<String> field4() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.UPDATE_TS;
    }

    @Override
    public Field<String> field6() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.UPDATED_BY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.DELETE_TS;
    }

    @Override
    public Field<String> field8() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.DELETED_BY;
    }

    @Override
    public Field<LocalDate> field9() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.DATE_;
    }

    @Override
    public Field<String> field10() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.STATUS;
    }

    @Override
    public Field<Boolean> field11() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.PREDICTION;
    }

    @Override
    public Field<String> field12() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.DESCRIPTION;
    }

    @Override
    public Field<UUID> field13() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.DIVISION_ID;
    }

    @Override
    public Field<Boolean> field14() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.SYNCH;
    }

    @Override
    public Field<UUID> field15() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.CHECK_LIST_INSTANCE_ID;
    }

    @Override
    public Field<UUID> field16() {
        return SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE.TRANSPORT_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTs();
    }

    @Override
    public String component4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateTs();
    }

    @Override
    public String component6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime component7() {
        return getDeleteTs();
    }

    @Override
    public String component8() {
        return getDeletedBy();
    }

    @Override
    public LocalDate component9() {
        return getDate_();
    }

    @Override
    public String component10() {
        return getStatus();
    }

    @Override
    public Boolean component11() {
        return getPrediction();
    }

    @Override
    public String component12() {
        return getDescription();
    }

    @Override
    public UUID component13() {
        return getDivisionId();
    }

    @Override
    public Boolean component14() {
        return getSynch();
    }

    @Override
    public UUID component15() {
        return getCheckListInstanceId();
    }

    @Override
    public UUID component16() {
        return getTransportId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTs();
    }

    @Override
    public String value4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateTs();
    }

    @Override
    public String value6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime value7() {
        return getDeleteTs();
    }

    @Override
    public String value8() {
        return getDeletedBy();
    }

    @Override
    public LocalDate value9() {
        return getDate_();
    }

    @Override
    public String value10() {
        return getStatus();
    }

    @Override
    public Boolean value11() {
        return getPrediction();
    }

    @Override
    public String value12() {
        return getDescription();
    }

    @Override
    public UUID value13() {
        return getDivisionId();
    }

    @Override
    public Boolean value14() {
        return getSynch();
    }

    @Override
    public UUID value15() {
        return getCheckListInstanceId();
    }

    @Override
    public UUID value16() {
        return getTransportId();
    }

    @Override
    public SmartexamServiceReportInstanceRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value3(LocalDateTime value) {
        setCreateTs(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value4(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value5(LocalDateTime value) {
        setUpdateTs(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value7(LocalDateTime value) {
        setDeleteTs(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value8(String value) {
        setDeletedBy(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value9(LocalDate value) {
        setDate_(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value10(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value11(Boolean value) {
        setPrediction(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value12(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value13(UUID value) {
        setDivisionId(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value14(Boolean value) {
        setSynch(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value15(UUID value) {
        setCheckListInstanceId(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord value16(UUID value) {
        setTransportId(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceRecord values(UUID value1, Integer value2, LocalDateTime value3, String value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8, LocalDate value9, String value10, Boolean value11, String value12, UUID value13, Boolean value14, UUID value15, UUID value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SmartexamServiceReportInstanceRecord
     */
    public SmartexamServiceReportInstanceRecord() {
        super(SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE);
    }

    /**
     * Create a detached, initialised SmartexamServiceReportInstanceRecord
     */
    public SmartexamServiceReportInstanceRecord(UUID id, Integer version, LocalDateTime createTs, String createdBy, LocalDateTime updateTs, String updatedBy, LocalDateTime deleteTs, String deletedBy, LocalDate date_, String status, Boolean prediction, String description, UUID divisionId, Boolean synch, UUID checkListInstanceId, UUID transportId) {
        super(SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE);

        setId(id);
        setVersion(version);
        setCreateTs(createTs);
        setCreatedBy(createdBy);
        setUpdateTs(updateTs);
        setUpdatedBy(updatedBy);
        setDeleteTs(deleteTs);
        setDeletedBy(deletedBy);
        setDate_(date_);
        setStatus(status);
        setPrediction(prediction);
        setDescription(description);
        setDivisionId(divisionId);
        setSynch(synch);
        setCheckListInstanceId(checkListInstanceId);
        setTransportId(transportId);
    }

    /**
     * Create a detached, initialised SmartexamServiceReportInstanceRecord
     */
    public SmartexamServiceReportInstanceRecord(nu.studer.sample.tables.pojos.SmartexamServiceReportInstance value) {
        super(SmartexamServiceReportInstance.SMARTEXAM_SERVICE_REPORT_INSTANCE);

        if (value != null) {
            setId(value.getId());
            setVersion(value.getVersion());
            setCreateTs(value.getCreateTs());
            setCreatedBy(value.getCreatedBy());
            setUpdateTs(value.getUpdateTs());
            setUpdatedBy(value.getUpdatedBy());
            setDeleteTs(value.getDeleteTs());
            setDeletedBy(value.getDeletedBy());
            setDate_(value.getDate_());
            setStatus(value.getStatus());
            setPrediction(value.getPrediction());
            setDescription(value.getDescription());
            setDivisionId(value.getDivisionId());
            setSynch(value.getSynch());
            setCheckListInstanceId(value.getCheckListInstanceId());
            setTransportId(value.getTransportId());
        }
    }
}
