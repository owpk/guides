/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyaddonBaseOrganizationalUnit implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID          id;
    private final Integer       version;
    private final LocalDateTime createTs;
    private final String        createdBy;
    private final LocalDateTime updateTs;
    private final String        updatedBy;
    private final LocalDateTime deleteTs;
    private final String        deletedBy;
    private final Boolean       received;
    private final String        kafkaKey;
    private final String        name;
    private final UUID          parentUnit;
    private final Boolean       usesParentPermissions;
    private final UUID          headPerson;
    private final String        email;

    public CompanyaddonBaseOrganizationalUnit(CompanyaddonBaseOrganizationalUnit value) {
        this.id = value.id;
        this.version = value.version;
        this.createTs = value.createTs;
        this.createdBy = value.createdBy;
        this.updateTs = value.updateTs;
        this.updatedBy = value.updatedBy;
        this.deleteTs = value.deleteTs;
        this.deletedBy = value.deletedBy;
        this.received = value.received;
        this.kafkaKey = value.kafkaKey;
        this.name = value.name;
        this.parentUnit = value.parentUnit;
        this.usesParentPermissions = value.usesParentPermissions;
        this.headPerson = value.headPerson;
        this.email = value.email;
    }

    public CompanyaddonBaseOrganizationalUnit(
        UUID          id,
        Integer       version,
        LocalDateTime createTs,
        String        createdBy,
        LocalDateTime updateTs,
        String        updatedBy,
        LocalDateTime deleteTs,
        String        deletedBy,
        Boolean       received,
        String        kafkaKey,
        String        name,
        UUID          parentUnit,
        Boolean       usesParentPermissions,
        UUID          headPerson,
        String        email
    ) {
        this.id = id;
        this.version = version;
        this.createTs = createTs;
        this.createdBy = createdBy;
        this.updateTs = updateTs;
        this.updatedBy = updatedBy;
        this.deleteTs = deleteTs;
        this.deletedBy = deletedBy;
        this.received = received;
        this.kafkaKey = kafkaKey;
        this.name = name;
        this.parentUnit = parentUnit;
        this.usesParentPermissions = usesParentPermissions;
        this.headPerson = headPerson;
        this.email = email;
    }

    /**
     * Getter for <code>public.companyaddon_base_organizational_unit.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.version</code>.
     */
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return this.createTs;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.created_by</code>.
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return this.updateTs;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.updated_by</code>.
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return this.deleteTs;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.deleted_by</code>.
     */
    public String getDeletedBy() {
        return this.deletedBy;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.received</code>.
     */
    public Boolean getReceived() {
        return this.received;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.kafka_key</code>.
     */
    public String getKafkaKey() {
        return this.kafkaKey;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.parent_unit</code>.
     */
    public UUID getParentUnit() {
        return this.parentUnit;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.uses_parent_permissions</code>.
     */
    public Boolean getUsesParentPermissions() {
        return this.usesParentPermissions;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.head_person</code>.
     */
    public UUID getHeadPerson() {
        return this.headPerson;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_organizational_unit.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CompanyaddonBaseOrganizationalUnit (");

        sb.append(id);
        sb.append(", ").append(version);
        sb.append(", ").append(createTs);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updateTs);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(deleteTs);
        sb.append(", ").append(deletedBy);
        sb.append(", ").append(received);
        sb.append(", ").append(kafkaKey);
        sb.append(", ").append(name);
        sb.append(", ").append(parentUnit);
        sb.append(", ").append(usesParentPermissions);
        sb.append(", ").append(headPerson);
        sb.append(", ").append(email);

        sb.append(")");
        return sb.toString();
    }
}
