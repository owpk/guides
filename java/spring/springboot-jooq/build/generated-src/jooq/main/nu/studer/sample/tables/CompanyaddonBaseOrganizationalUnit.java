/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import nu.studer.sample.Indexes;
import nu.studer.sample.Keys;
import nu.studer.sample.Public;
import nu.studer.sample.tables.records.CompanyaddonBaseOrganizationalUnitRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyaddonBaseOrganizationalUnit extends TableImpl<CompanyaddonBaseOrganizationalUnitRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>public.companyaddon_base_organizational_unit</code>
     */
    public static final CompanyaddonBaseOrganizationalUnit COMPANYADDON_BASE_ORGANIZATIONAL_UNIT = new CompanyaddonBaseOrganizationalUnit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompanyaddonBaseOrganizationalUnitRecord> getRecordType() {
        return CompanyaddonBaseOrganizationalUnitRecord.class;
    }

    /**
     * The column <code>public.companyaddon_base_organizational_unit.id</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.version</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, Integer> VERSION = createField(DSL.name("version"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.create_ts</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, LocalDateTime> CREATE_TS = createField(DSL.name("create_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.created_by</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.update_ts</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, LocalDateTime> UPDATE_TS = createField(DSL.name("update_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.updated_by</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.delete_ts</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, LocalDateTime> DELETE_TS = createField(DSL.name("delete_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.deleted_by</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, String> DELETED_BY = createField(DSL.name("deleted_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.received</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, Boolean> RECEIVED = createField(DSL.name("received"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.kafka_key</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, String> KAFKA_KEY = createField(DSL.name("kafka_key"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.name</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.parent_unit</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, UUID> PARENT_UNIT = createField(DSL.name("parent_unit"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.uses_parent_permissions</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, Boolean> USES_PARENT_PERMISSIONS = createField(DSL.name("uses_parent_permissions"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.head_person</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, UUID> HEAD_PERSON = createField(DSL.name("head_person"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>public.companyaddon_base_organizational_unit.email</code>.
     */
    public final TableField<CompanyaddonBaseOrganizationalUnitRecord, String> EMAIL = createField(DSL.name("email"), SQLDataType.VARCHAR(255), this, "");

    private CompanyaddonBaseOrganizationalUnit(Name alias, Table<CompanyaddonBaseOrganizationalUnitRecord> aliased) {
        this(alias, aliased, null);
    }

    private CompanyaddonBaseOrganizationalUnit(Name alias, Table<CompanyaddonBaseOrganizationalUnitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>public.companyaddon_base_organizational_unit</code> table reference
     */
    public CompanyaddonBaseOrganizationalUnit(String alias) {
        this(DSL.name(alias), COMPANYADDON_BASE_ORGANIZATIONAL_UNIT);
    }

    /**
     * Create an aliased
     * <code>public.companyaddon_base_organizational_unit</code> table reference
     */
    public CompanyaddonBaseOrganizationalUnit(Name alias) {
        this(alias, COMPANYADDON_BASE_ORGANIZATIONAL_UNIT);
    }

    /**
     * Create a <code>public.companyaddon_base_organizational_unit</code> table
     * reference
     */
    public CompanyaddonBaseOrganizationalUnit() {
        this(DSL.name("companyaddon_base_organizational_unit"), null);
    }

    public <O extends Record> CompanyaddonBaseOrganizationalUnit(Table<O> child, ForeignKey<O, CompanyaddonBaseOrganizationalUnitRecord> key) {
        super(child, key, COMPANYADDON_BASE_ORGANIZATIONAL_UNIT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.IDX_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_ON_HEAD_PERSON, Indexes.IDX_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_ON_PARENT_UNIT, Indexes.IDX_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_UK_EMAIL, Indexes.IDX_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_UK_KAFKA_KEY, Indexes.IDX_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_UK_NAME);
    }

    @Override
    public UniqueKey<CompanyaddonBaseOrganizationalUnitRecord> getPrimaryKey() {
        return Keys.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_PKEY;
    }

    @Override
    public List<ForeignKey<CompanyaddonBaseOrganizationalUnitRecord, ?>> getReferences() {
        return Arrays.asList(Keys.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT__FK_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_ON_PARENT_UNIT, Keys.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT__FK_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_ON_HEAD_PERSON);
    }

    private transient CompanyaddonBaseOrganizationalUnit _companyaddonBaseOrganizationalUnit;
    private transient CompanyaddonBaseEmployee _companyaddonBaseEmployee;

    public CompanyaddonBaseOrganizationalUnit companyaddonBaseOrganizationalUnit() {
        if (_companyaddonBaseOrganizationalUnit == null)
            _companyaddonBaseOrganizationalUnit = new CompanyaddonBaseOrganizationalUnit(this, Keys.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT__FK_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_ON_PARENT_UNIT);

        return _companyaddonBaseOrganizationalUnit;
    }

    public CompanyaddonBaseEmployee companyaddonBaseEmployee() {
        if (_companyaddonBaseEmployee == null)
            _companyaddonBaseEmployee = new CompanyaddonBaseEmployee(this, Keys.COMPANYADDON_BASE_ORGANIZATIONAL_UNIT__FK_COMPANYADDON_BASE_ORGANIZATIONAL_UNIT_ON_HEAD_PERSON);

        return _companyaddonBaseEmployee;
    }

    @Override
    public CompanyaddonBaseOrganizationalUnit as(String alias) {
        return new CompanyaddonBaseOrganizationalUnit(DSL.name(alias), this);
    }

    @Override
    public CompanyaddonBaseOrganizationalUnit as(Name alias) {
        return new CompanyaddonBaseOrganizationalUnit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyaddonBaseOrganizationalUnit rename(String name) {
        return new CompanyaddonBaseOrganizationalUnit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyaddonBaseOrganizationalUnit rename(Name name) {
        return new CompanyaddonBaseOrganizationalUnit(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, Boolean, String, String, UUID, Boolean, UUID, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
