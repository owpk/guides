/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartexamEmployee implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID          id;
    private final Integer       version;
    private final LocalDateTime createTs;
    private final String        createdBy;
    private final LocalDateTime updateTs;
    private final String        updatedBy;
    private final LocalDateTime deleteTs;
    private final String        deletedBy;
    private final UUID          divisionId;
    private final String        phone;
    private final String        email;
    private final UUID          positionId;
    private final String        extUuid;
    private final String        name;
    private final UUID          userId;
    private final UUID          userFrom1cId;
    private final UUID          employeeFrom1cId;

    public SmartexamEmployee(SmartexamEmployee value) {
        this.id = value.id;
        this.version = value.version;
        this.createTs = value.createTs;
        this.createdBy = value.createdBy;
        this.updateTs = value.updateTs;
        this.updatedBy = value.updatedBy;
        this.deleteTs = value.deleteTs;
        this.deletedBy = value.deletedBy;
        this.divisionId = value.divisionId;
        this.phone = value.phone;
        this.email = value.email;
        this.positionId = value.positionId;
        this.extUuid = value.extUuid;
        this.name = value.name;
        this.userId = value.userId;
        this.userFrom1cId = value.userFrom1cId;
        this.employeeFrom1cId = value.employeeFrom1cId;
    }

    public SmartexamEmployee(
        UUID          id,
        Integer       version,
        LocalDateTime createTs,
        String        createdBy,
        LocalDateTime updateTs,
        String        updatedBy,
        LocalDateTime deleteTs,
        String        deletedBy,
        UUID          divisionId,
        String        phone,
        String        email,
        UUID          positionId,
        String        extUuid,
        String        name,
        UUID          userId,
        UUID          userFrom1cId,
        UUID          employeeFrom1cId
    ) {
        this.id = id;
        this.version = version;
        this.createTs = createTs;
        this.createdBy = createdBy;
        this.updateTs = updateTs;
        this.updatedBy = updatedBy;
        this.deleteTs = deleteTs;
        this.deletedBy = deletedBy;
        this.divisionId = divisionId;
        this.phone = phone;
        this.email = email;
        this.positionId = positionId;
        this.extUuid = extUuid;
        this.name = name;
        this.userId = userId;
        this.userFrom1cId = userFrom1cId;
        this.employeeFrom1cId = employeeFrom1cId;
    }

    /**
     * Getter for <code>public.smartexam_employee.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.smartexam_employee.version</code>.
     */
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Getter for <code>public.smartexam_employee.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return this.createTs;
    }

    /**
     * Getter for <code>public.smartexam_employee.created_by</code>.
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Getter for <code>public.smartexam_employee.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return this.updateTs;
    }

    /**
     * Getter for <code>public.smartexam_employee.updated_by</code>.
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Getter for <code>public.smartexam_employee.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return this.deleteTs;
    }

    /**
     * Getter for <code>public.smartexam_employee.deleted_by</code>.
     */
    public String getDeletedBy() {
        return this.deletedBy;
    }

    /**
     * Getter for <code>public.smartexam_employee.division_id</code>.
     */
    public UUID getDivisionId() {
        return this.divisionId;
    }

    /**
     * Getter for <code>public.smartexam_employee.phone</code>.
     */
    public String getPhone() {
        return this.phone;
    }

    /**
     * Getter for <code>public.smartexam_employee.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>public.smartexam_employee.position_id</code>.
     */
    public UUID getPositionId() {
        return this.positionId;
    }

    /**
     * Getter for <code>public.smartexam_employee.ext_uuid</code>.
     */
    public String getExtUuid() {
        return this.extUuid;
    }

    /**
     * Getter for <code>public.smartexam_employee.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>public.smartexam_employee.user_id</code>.
     */
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Getter for <code>public.smartexam_employee.user_from1c_id</code>.
     */
    public UUID getUserFrom1cId() {
        return this.userFrom1cId;
    }

    /**
     * Getter for <code>public.smartexam_employee.employee_from1c_id</code>.
     */
    public UUID getEmployeeFrom1cId() {
        return this.employeeFrom1cId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SmartexamEmployee (");

        sb.append(id);
        sb.append(", ").append(version);
        sb.append(", ").append(createTs);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updateTs);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(deleteTs);
        sb.append(", ").append(deletedBy);
        sb.append(", ").append(divisionId);
        sb.append(", ").append(phone);
        sb.append(", ").append(email);
        sb.append(", ").append(positionId);
        sb.append(", ").append(extUuid);
        sb.append(", ").append(name);
        sb.append(", ").append(userId);
        sb.append(", ").append(userFrom1cId);
        sb.append(", ").append(employeeFrom1cId);

        sb.append(")");
        return sb.toString();
    }
}
