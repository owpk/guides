/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.UUID;

import nu.studer.sample.tables.SmartexamServiceReportInstanceTotal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartexamServiceReportInstanceTotalRecord extends UpdatableRecordImpl<SmartexamServiceReportInstanceTotalRecord> implements Record14<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, String, String, LocalDate, UUID, Double, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.id</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.version</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setVersion(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.create_ts</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setCreateTs(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.created_by</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setCreatedBy(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.update_ts</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setUpdateTs(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.updated_by</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setUpdatedBy(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.delete_ts</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setDeleteTs(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.deleted_by</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setDeletedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.deleted_by</code>.
     */
    public String getDeletedBy() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.type_</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setType_(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.type_</code>.
     */
    public String getType_() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.name</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setName(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.name</code>.
     */
    public String getName() {
        return (String) get(9);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.date_</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setDate_(LocalDate value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.date_</code>.
     */
    public LocalDate getDate_() {
        return (LocalDate) get(10);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.division_id</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setDivisionId(UUID value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.division_id</code>.
     */
    public UUID getDivisionId() {
        return (UUID) get(11);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.value_</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setValue_(Double value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.value_</code>.
     */
    public Double getValue_() {
        return (Double) get(12);
    }

    /**
     * Setter for
     * <code>public.smartexam_service_report_instance_total.transport_id</code>.
     */
    public SmartexamServiceReportInstanceTotalRecord setTransportId(UUID value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexam_service_report_instance_total.transport_id</code>.
     */
    public UUID getTransportId() {
        return (UUID) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, String, String, LocalDate, UUID, Double, UUID> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, String, String, LocalDate, UUID, Double, UUID> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.ID;
    }

    @Override
    public Field<Integer> field2() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.VERSION;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.CREATE_TS;
    }

    @Override
    public Field<String> field4() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.UPDATE_TS;
    }

    @Override
    public Field<String> field6() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.UPDATED_BY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.DELETE_TS;
    }

    @Override
    public Field<String> field8() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.DELETED_BY;
    }

    @Override
    public Field<String> field9() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.TYPE_;
    }

    @Override
    public Field<String> field10() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.NAME;
    }

    @Override
    public Field<LocalDate> field11() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.DATE_;
    }

    @Override
    public Field<UUID> field12() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.DIVISION_ID;
    }

    @Override
    public Field<Double> field13() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.VALUE_;
    }

    @Override
    public Field<UUID> field14() {
        return SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL.TRANSPORT_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTs();
    }

    @Override
    public String component4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateTs();
    }

    @Override
    public String component6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime component7() {
        return getDeleteTs();
    }

    @Override
    public String component8() {
        return getDeletedBy();
    }

    @Override
    public String component9() {
        return getType_();
    }

    @Override
    public String component10() {
        return getName();
    }

    @Override
    public LocalDate component11() {
        return getDate_();
    }

    @Override
    public UUID component12() {
        return getDivisionId();
    }

    @Override
    public Double component13() {
        return getValue_();
    }

    @Override
    public UUID component14() {
        return getTransportId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTs();
    }

    @Override
    public String value4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateTs();
    }

    @Override
    public String value6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime value7() {
        return getDeleteTs();
    }

    @Override
    public String value8() {
        return getDeletedBy();
    }

    @Override
    public String value9() {
        return getType_();
    }

    @Override
    public String value10() {
        return getName();
    }

    @Override
    public LocalDate value11() {
        return getDate_();
    }

    @Override
    public UUID value12() {
        return getDivisionId();
    }

    @Override
    public Double value13() {
        return getValue_();
    }

    @Override
    public UUID value14() {
        return getTransportId();
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value3(LocalDateTime value) {
        setCreateTs(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value4(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value5(LocalDateTime value) {
        setUpdateTs(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value7(LocalDateTime value) {
        setDeleteTs(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value8(String value) {
        setDeletedBy(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value9(String value) {
        setType_(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value10(String value) {
        setName(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value11(LocalDate value) {
        setDate_(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value12(UUID value) {
        setDivisionId(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value13(Double value) {
        setValue_(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord value14(UUID value) {
        setTransportId(value);
        return this;
    }

    @Override
    public SmartexamServiceReportInstanceTotalRecord values(UUID value1, Integer value2, LocalDateTime value3, String value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8, String value9, String value10, LocalDate value11, UUID value12, Double value13, UUID value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SmartexamServiceReportInstanceTotalRecord
     */
    public SmartexamServiceReportInstanceTotalRecord() {
        super(SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL);
    }

    /**
     * Create a detached, initialised SmartexamServiceReportInstanceTotalRecord
     */
    public SmartexamServiceReportInstanceTotalRecord(UUID id, Integer version, LocalDateTime createTs, String createdBy, LocalDateTime updateTs, String updatedBy, LocalDateTime deleteTs, String deletedBy, String type_, String name, LocalDate date_, UUID divisionId, Double value_, UUID transportId) {
        super(SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL);

        setId(id);
        setVersion(version);
        setCreateTs(createTs);
        setCreatedBy(createdBy);
        setUpdateTs(updateTs);
        setUpdatedBy(updatedBy);
        setDeleteTs(deleteTs);
        setDeletedBy(deletedBy);
        setType_(type_);
        setName(name);
        setDate_(date_);
        setDivisionId(divisionId);
        setValue_(value_);
        setTransportId(transportId);
    }

    /**
     * Create a detached, initialised SmartexamServiceReportInstanceTotalRecord
     */
    public SmartexamServiceReportInstanceTotalRecord(nu.studer.sample.tables.pojos.SmartexamServiceReportInstanceTotal value) {
        super(SmartexamServiceReportInstanceTotal.SMARTEXAM_SERVICE_REPORT_INSTANCE_TOTAL);

        if (value != null) {
            setId(value.getId());
            setVersion(value.getVersion());
            setCreateTs(value.getCreateTs());
            setCreatedBy(value.getCreatedBy());
            setUpdateTs(value.getUpdateTs());
            setUpdatedBy(value.getUpdatedBy());
            setDeleteTs(value.getDeleteTs());
            setDeletedBy(value.getDeletedBy());
            setType_(value.getType_());
            setName(value.getName());
            setDate_(value.getDate_());
            setDivisionId(value.getDivisionId());
            setValue_(value.getValue_());
            setTransportId(value.getTransportId());
        }
    }
}
