/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import nu.studer.sample.Keys;
import nu.studer.sample.Public;
import nu.studer.sample.tables.records.SecLoggedEntityRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecLoggedEntity extends TableImpl<SecLoggedEntityRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.sec_logged_entity</code>
     */
    public static final SecLoggedEntity SEC_LOGGED_ENTITY = new SecLoggedEntity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SecLoggedEntityRecord> getRecordType() {
        return SecLoggedEntityRecord.class;
    }

    /**
     * The column <code>public.sec_logged_entity.id</code>.
     */
    public final TableField<SecLoggedEntityRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.sec_logged_entity.create_ts</code>.
     */
    public final TableField<SecLoggedEntityRecord, LocalDateTime> CREATE_TS = createField(DSL.name("create_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sec_logged_entity.created_by</code>.
     */
    public final TableField<SecLoggedEntityRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sec_logged_entity.name</code>.
     */
    public final TableField<SecLoggedEntityRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.sec_logged_entity.auto</code>.
     */
    public final TableField<SecLoggedEntityRecord, Boolean> AUTO = createField(DSL.name("auto"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.sec_logged_entity.manual</code>.
     */
    public final TableField<SecLoggedEntityRecord, Boolean> MANUAL = createField(DSL.name("manual"), SQLDataType.BOOLEAN, this, "");

    private SecLoggedEntity(Name alias, Table<SecLoggedEntityRecord> aliased) {
        this(alias, aliased, null);
    }

    private SecLoggedEntity(Name alias, Table<SecLoggedEntityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.sec_logged_entity</code> table reference
     */
    public SecLoggedEntity(String alias) {
        this(DSL.name(alias), SEC_LOGGED_ENTITY);
    }

    /**
     * Create an aliased <code>public.sec_logged_entity</code> table reference
     */
    public SecLoggedEntity(Name alias) {
        this(alias, SEC_LOGGED_ENTITY);
    }

    /**
     * Create a <code>public.sec_logged_entity</code> table reference
     */
    public SecLoggedEntity() {
        this(DSL.name("sec_logged_entity"), null);
    }

    public <O extends Record> SecLoggedEntity(Table<O> child, ForeignKey<O, SecLoggedEntityRecord> key) {
        super(child, key, SEC_LOGGED_ENTITY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<SecLoggedEntityRecord> getPrimaryKey() {
        return Keys.SEC_LOGGED_ENTITY_PKEY;
    }

    @Override
    public List<UniqueKey<SecLoggedEntityRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.SEC_LOGGED_ENTITY_UNIQ_NAME);
    }

    @Override
    public SecLoggedEntity as(String alias) {
        return new SecLoggedEntity(DSL.name(alias), this);
    }

    @Override
    public SecLoggedEntity as(Name alias) {
        return new SecLoggedEntity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SecLoggedEntity rename(String name) {
        return new SecLoggedEntity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SecLoggedEntity rename(Name name) {
        return new SecLoggedEntity(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, LocalDateTime, String, String, Boolean, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
