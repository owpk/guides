/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import nu.studer.sample.tables.SecUserSubstitution;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecUserSubstitutionRecord extends UpdatableRecordImpl<SecUserSubstitutionRecord> implements Record13<UUID, LocalDateTime, String, Integer, LocalDateTime, String, LocalDateTime, String, String, UUID, UUID, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.sec_user_substitution.id</code>.
     */
    public SecUserSubstitutionRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.sec_user_substitution.create_ts</code>.
     */
    public SecUserSubstitutionRecord setCreateTs(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.sec_user_substitution.created_by</code>.
     */
    public SecUserSubstitutionRecord setCreatedBy(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.sec_user_substitution.version</code>.
     */
    public SecUserSubstitutionRecord setVersion(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.sec_user_substitution.update_ts</code>.
     */
    public SecUserSubstitutionRecord setUpdateTs(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.sec_user_substitution.updated_by</code>.
     */
    public SecUserSubstitutionRecord setUpdatedBy(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.sec_user_substitution.delete_ts</code>.
     */
    public SecUserSubstitutionRecord setDeleteTs(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.sec_user_substitution.deleted_by</code>.
     */
    public SecUserSubstitutionRecord setDeletedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.deleted_by</code>.
     */
    public String getDeletedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.sec_user_substitution.sys_tenant_id</code>.
     */
    public SecUserSubstitutionRecord setSysTenantId(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.sys_tenant_id</code>.
     */
    public String getSysTenantId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.sec_user_substitution.user_id</code>.
     */
    public SecUserSubstitutionRecord setUserId(UUID value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(9);
    }

    /**
     * Setter for <code>public.sec_user_substitution.substituted_user_id</code>.
     */
    public SecUserSubstitutionRecord setSubstitutedUserId(UUID value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.substituted_user_id</code>.
     */
    public UUID getSubstitutedUserId() {
        return (UUID) get(10);
    }

    /**
     * Setter for <code>public.sec_user_substitution.start_date</code>.
     */
    public SecUserSubstitutionRecord setStartDate(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.start_date</code>.
     */
    public LocalDateTime getStartDate() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>public.sec_user_substitution.end_date</code>.
     */
    public SecUserSubstitutionRecord setEndDate(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.sec_user_substitution.end_date</code>.
     */
    public LocalDateTime getEndDate() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<UUID, LocalDateTime, String, Integer, LocalDateTime, String, LocalDateTime, String, String, UUID, UUID, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<UUID, LocalDateTime, String, Integer, LocalDateTime, String, LocalDateTime, String, String, UUID, UUID, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.CREATE_TS;
    }

    @Override
    public Field<String> field3() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.CREATED_BY;
    }

    @Override
    public Field<Integer> field4() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.VERSION;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.UPDATE_TS;
    }

    @Override
    public Field<String> field6() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.UPDATED_BY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.DELETE_TS;
    }

    @Override
    public Field<String> field8() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.DELETED_BY;
    }

    @Override
    public Field<String> field9() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.SYS_TENANT_ID;
    }

    @Override
    public Field<UUID> field10() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.USER_ID;
    }

    @Override
    public Field<UUID> field11() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.SUBSTITUTED_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.START_DATE;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return SecUserSubstitution.SEC_USER_SUBSTITUTION.END_DATE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateTs();
    }

    @Override
    public String component3() {
        return getCreatedBy();
    }

    @Override
    public Integer component4() {
        return getVersion();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateTs();
    }

    @Override
    public String component6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime component7() {
        return getDeleteTs();
    }

    @Override
    public String component8() {
        return getDeletedBy();
    }

    @Override
    public String component9() {
        return getSysTenantId();
    }

    @Override
    public UUID component10() {
        return getUserId();
    }

    @Override
    public UUID component11() {
        return getSubstitutedUserId();
    }

    @Override
    public LocalDateTime component12() {
        return getStartDate();
    }

    @Override
    public LocalDateTime component13() {
        return getEndDate();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateTs();
    }

    @Override
    public String value3() {
        return getCreatedBy();
    }

    @Override
    public Integer value4() {
        return getVersion();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateTs();
    }

    @Override
    public String value6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime value7() {
        return getDeleteTs();
    }

    @Override
    public String value8() {
        return getDeletedBy();
    }

    @Override
    public String value9() {
        return getSysTenantId();
    }

    @Override
    public UUID value10() {
        return getUserId();
    }

    @Override
    public UUID value11() {
        return getSubstitutedUserId();
    }

    @Override
    public LocalDateTime value12() {
        return getStartDate();
    }

    @Override
    public LocalDateTime value13() {
        return getEndDate();
    }

    @Override
    public SecUserSubstitutionRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value2(LocalDateTime value) {
        setCreateTs(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value3(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value4(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value5(LocalDateTime value) {
        setUpdateTs(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value7(LocalDateTime value) {
        setDeleteTs(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value8(String value) {
        setDeletedBy(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value9(String value) {
        setSysTenantId(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value10(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value11(UUID value) {
        setSubstitutedUserId(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value12(LocalDateTime value) {
        setStartDate(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord value13(LocalDateTime value) {
        setEndDate(value);
        return this;
    }

    @Override
    public SecUserSubstitutionRecord values(UUID value1, LocalDateTime value2, String value3, Integer value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8, String value9, UUID value10, UUID value11, LocalDateTime value12, LocalDateTime value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecUserSubstitutionRecord
     */
    public SecUserSubstitutionRecord() {
        super(SecUserSubstitution.SEC_USER_SUBSTITUTION);
    }

    /**
     * Create a detached, initialised SecUserSubstitutionRecord
     */
    public SecUserSubstitutionRecord(UUID id, LocalDateTime createTs, String createdBy, Integer version, LocalDateTime updateTs, String updatedBy, LocalDateTime deleteTs, String deletedBy, String sysTenantId, UUID userId, UUID substitutedUserId, LocalDateTime startDate, LocalDateTime endDate) {
        super(SecUserSubstitution.SEC_USER_SUBSTITUTION);

        setId(id);
        setCreateTs(createTs);
        setCreatedBy(createdBy);
        setVersion(version);
        setUpdateTs(updateTs);
        setUpdatedBy(updatedBy);
        setDeleteTs(deleteTs);
        setDeletedBy(deletedBy);
        setSysTenantId(sysTenantId);
        setUserId(userId);
        setSubstitutedUserId(substitutedUserId);
        setStartDate(startDate);
        setEndDate(endDate);
    }

    /**
     * Create a detached, initialised SecUserSubstitutionRecord
     */
    public SecUserSubstitutionRecord(nu.studer.sample.tables.pojos.SecUserSubstitution value) {
        super(SecUserSubstitution.SEC_USER_SUBSTITUTION);

        if (value != null) {
            setId(value.getId());
            setCreateTs(value.getCreateTs());
            setCreatedBy(value.getCreatedBy());
            setVersion(value.getVersion());
            setUpdateTs(value.getUpdateTs());
            setUpdatedBy(value.getUpdatedBy());
            setDeleteTs(value.getDeleteTs());
            setDeletedBy(value.getDeletedBy());
            setSysTenantId(value.getSysTenantId());
            setUserId(value.getUserId());
            setSubstitutedUserId(value.getSubstitutedUserId());
            setStartDate(value.getStartDate());
            setEndDate(value.getEndDate());
        }
    }
}
