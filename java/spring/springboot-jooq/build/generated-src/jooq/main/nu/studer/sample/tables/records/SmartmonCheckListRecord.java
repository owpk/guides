/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import nu.studer.sample.tables.SmartmonCheckList;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartmonCheckListRecord extends UpdatableRecordImpl<SmartmonCheckListRecord> implements Record16<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, String, UUID, String, String, Boolean, UUID, Boolean, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.smartmon_check_list.id</code>.
     */
    public SmartmonCheckListRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.smartmon_check_list.version</code>.
     */
    public SmartmonCheckListRecord setVersion(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.smartmon_check_list.create_ts</code>.
     */
    public SmartmonCheckListRecord setCreateTs(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.smartmon_check_list.created_by</code>.
     */
    public SmartmonCheckListRecord setCreatedBy(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.smartmon_check_list.update_ts</code>.
     */
    public SmartmonCheckListRecord setUpdateTs(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.smartmon_check_list.updated_by</code>.
     */
    public SmartmonCheckListRecord setUpdatedBy(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.smartmon_check_list.delete_ts</code>.
     */
    public SmartmonCheckListRecord setDeleteTs(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.smartmon_check_list.deleted_by</code>.
     */
    public SmartmonCheckListRecord setDeletedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.deleted_by</code>.
     */
    public String getDeletedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.smartmon_check_list.name</code>.
     */
    public SmartmonCheckListRecord setName(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.name</code>.
     */
    public String getName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.smartmon_check_list.transport_type_id</code>.
     */
    public SmartmonCheckListRecord setTransportTypeId(UUID value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.transport_type_id</code>.
     */
    public UUID getTransportTypeId() {
        return (UUID) get(9);
    }

    /**
     * Setter for <code>public.smartmon_check_list.status</code>.
     */
    public SmartmonCheckListRecord setStatus(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.status</code>.
     */
    public String getStatus() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.smartmon_check_list.type_</code>.
     */
    public SmartmonCheckListRecord setType_(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.type_</code>.
     */
    public String getType_() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.smartmon_check_list.archived</code>.
     */
    public SmartmonCheckListRecord setArchived(Boolean value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.archived</code>.
     */
    public Boolean getArchived() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>public.smartmon_check_list.transport_id__u33258</code>.
     */
    public SmartmonCheckListRecord setTransportId_U33258(UUID value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.transport_id__u33258</code>.
     */
    public UUID getTransportId_U33258() {
        return (UUID) get(13);
    }

    /**
     * Setter for <code>public.smartmon_check_list.comment_enabled</code>.
     */
    public SmartmonCheckListRecord setCommentEnabled(Boolean value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.comment_enabled</code>.
     */
    public Boolean getCommentEnabled() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>public.smartmon_check_list.transport_id</code>.
     */
    public SmartmonCheckListRecord setTransportId(UUID value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list.transport_id</code>.
     */
    public UUID getTransportId() {
        return (UUID) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, String, UUID, String, String, Boolean, UUID, Boolean, UUID> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, String, UUID, String, String, Boolean, UUID, Boolean, UUID> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.ID;
    }

    @Override
    public Field<Integer> field2() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.VERSION;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.CREATE_TS;
    }

    @Override
    public Field<String> field4() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.UPDATE_TS;
    }

    @Override
    public Field<String> field6() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.UPDATED_BY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.DELETE_TS;
    }

    @Override
    public Field<String> field8() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.DELETED_BY;
    }

    @Override
    public Field<String> field9() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.NAME;
    }

    @Override
    public Field<UUID> field10() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.TRANSPORT_TYPE_ID;
    }

    @Override
    public Field<String> field11() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.STATUS;
    }

    @Override
    public Field<String> field12() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.TYPE_;
    }

    @Override
    public Field<Boolean> field13() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.ARCHIVED;
    }

    @Override
    public Field<UUID> field14() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.TRANSPORT_ID__U33258;
    }

    @Override
    public Field<Boolean> field15() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.COMMENT_ENABLED;
    }

    @Override
    public Field<UUID> field16() {
        return SmartmonCheckList.SMARTMON_CHECK_LIST.TRANSPORT_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTs();
    }

    @Override
    public String component4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateTs();
    }

    @Override
    public String component6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime component7() {
        return getDeleteTs();
    }

    @Override
    public String component8() {
        return getDeletedBy();
    }

    @Override
    public String component9() {
        return getName();
    }

    @Override
    public UUID component10() {
        return getTransportTypeId();
    }

    @Override
    public String component11() {
        return getStatus();
    }

    @Override
    public String component12() {
        return getType_();
    }

    @Override
    public Boolean component13() {
        return getArchived();
    }

    @Override
    public UUID component14() {
        return getTransportId_U33258();
    }

    @Override
    public Boolean component15() {
        return getCommentEnabled();
    }

    @Override
    public UUID component16() {
        return getTransportId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTs();
    }

    @Override
    public String value4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateTs();
    }

    @Override
    public String value6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime value7() {
        return getDeleteTs();
    }

    @Override
    public String value8() {
        return getDeletedBy();
    }

    @Override
    public String value9() {
        return getName();
    }

    @Override
    public UUID value10() {
        return getTransportTypeId();
    }

    @Override
    public String value11() {
        return getStatus();
    }

    @Override
    public String value12() {
        return getType_();
    }

    @Override
    public Boolean value13() {
        return getArchived();
    }

    @Override
    public UUID value14() {
        return getTransportId_U33258();
    }

    @Override
    public Boolean value15() {
        return getCommentEnabled();
    }

    @Override
    public UUID value16() {
        return getTransportId();
    }

    @Override
    public SmartmonCheckListRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value3(LocalDateTime value) {
        setCreateTs(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value4(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value5(LocalDateTime value) {
        setUpdateTs(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value7(LocalDateTime value) {
        setDeleteTs(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value8(String value) {
        setDeletedBy(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value9(String value) {
        setName(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value10(UUID value) {
        setTransportTypeId(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value11(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value12(String value) {
        setType_(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value13(Boolean value) {
        setArchived(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value14(UUID value) {
        setTransportId_U33258(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value15(Boolean value) {
        setCommentEnabled(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord value16(UUID value) {
        setTransportId(value);
        return this;
    }

    @Override
    public SmartmonCheckListRecord values(UUID value1, Integer value2, LocalDateTime value3, String value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8, String value9, UUID value10, String value11, String value12, Boolean value13, UUID value14, Boolean value15, UUID value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SmartmonCheckListRecord
     */
    public SmartmonCheckListRecord() {
        super(SmartmonCheckList.SMARTMON_CHECK_LIST);
    }

    /**
     * Create a detached, initialised SmartmonCheckListRecord
     */
    public SmartmonCheckListRecord(UUID id, Integer version, LocalDateTime createTs, String createdBy, LocalDateTime updateTs, String updatedBy, LocalDateTime deleteTs, String deletedBy, String name, UUID transportTypeId, String status, String type_, Boolean archived, UUID transportId_U33258, Boolean commentEnabled, UUID transportId) {
        super(SmartmonCheckList.SMARTMON_CHECK_LIST);

        setId(id);
        setVersion(version);
        setCreateTs(createTs);
        setCreatedBy(createdBy);
        setUpdateTs(updateTs);
        setUpdatedBy(updatedBy);
        setDeleteTs(deleteTs);
        setDeletedBy(deletedBy);
        setName(name);
        setTransportTypeId(transportTypeId);
        setStatus(status);
        setType_(type_);
        setArchived(archived);
        setTransportId_U33258(transportId_U33258);
        setCommentEnabled(commentEnabled);
        setTransportId(transportId);
    }

    /**
     * Create a detached, initialised SmartmonCheckListRecord
     */
    public SmartmonCheckListRecord(nu.studer.sample.tables.pojos.SmartmonCheckList value) {
        super(SmartmonCheckList.SMARTMON_CHECK_LIST);

        if (value != null) {
            setId(value.getId());
            setVersion(value.getVersion());
            setCreateTs(value.getCreateTs());
            setCreatedBy(value.getCreatedBy());
            setUpdateTs(value.getUpdateTs());
            setUpdatedBy(value.getUpdatedBy());
            setDeleteTs(value.getDeleteTs());
            setDeletedBy(value.getDeletedBy());
            setName(value.getName());
            setTransportTypeId(value.getTransportTypeId());
            setStatus(value.getStatus());
            setType_(value.getType_());
            setArchived(value.getArchived());
            setTransportId_U33258(value.getTransportId_U33258());
            setCommentEnabled(value.getCommentEnabled());
            setTransportId(value.getTransportId());
        }
    }
}
