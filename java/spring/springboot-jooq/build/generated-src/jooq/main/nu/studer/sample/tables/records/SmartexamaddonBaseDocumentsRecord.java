/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.UUID;

import nu.studer.sample.tables.SmartexamaddonBaseDocuments;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartexamaddonBaseDocumentsRecord extends UpdatableRecordImpl<SmartexamaddonBaseDocumentsRecord> implements Record20<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, Boolean, String, String, String, String, String, LocalDate, LocalDate, String, String, UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.smartexamaddon_base_documents.id</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.version</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setVersion(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.create_ts</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setCreateTs(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.created_by</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setCreatedBy(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.update_ts</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setUpdateTs(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.updated_by</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setUpdatedBy(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.delete_ts</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setDeleteTs(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.deleted_by</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setDeletedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.deleted_by</code>.
     */
    public String getDeletedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.received</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setReceived(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.received</code>.
     */
    public Boolean getReceived() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.kafka_key</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setKafkaKey(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.kafka_key</code>.
     */
    public String getKafkaKey() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.name</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setName(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.name</code>.
     */
    public String getName() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.full_name</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setFullName(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.full_name</code>.
     */
    public String getFullName() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.series</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setSeries(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.series</code>.
     */
    public String getSeries() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.number_</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setNumber_(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.number_</code>.
     */
    public String getNumber_() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.issue_date</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setIssueDate(LocalDate value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.issue_date</code>.
     */
    public LocalDate getIssueDate() {
        return (LocalDate) get(14);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.end_date</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setEndDate(LocalDate value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.end_date</code>.
     */
    public LocalDate getEndDate() {
        return (LocalDate) get(15);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.issued_by</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setIssuedBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.issued_by</code>.
     */
    public String getIssuedBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.photo_link</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setPhotoLink(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.photo_link</code>.
     */
    public String getPhotoLink() {
        return (String) get(17);
    }

    /**
     * Setter for <code>public.smartexamaddon_base_documents.photo_id</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setPhotoId(UUID value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>public.smartexamaddon_base_documents.photo_id</code>.
     */
    public UUID getPhotoId() {
        return (UUID) get(18);
    }

    /**
     * Setter for
     * <code>public.smartexamaddon_base_documents.base_transport_id</code>.
     */
    public SmartexamaddonBaseDocumentsRecord setBaseTransportId(UUID value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.smartexamaddon_base_documents.base_transport_id</code>.
     */
    public UUID getBaseTransportId() {
        return (UUID) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, Boolean, String, String, String, String, String, LocalDate, LocalDate, String, String, UUID, UUID> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, Boolean, String, String, String, String, String, LocalDate, LocalDate, String, String, UUID, UUID> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.VERSION;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.CREATE_TS;
    }

    @Override
    public Field<String> field4() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.UPDATE_TS;
    }

    @Override
    public Field<String> field6() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.UPDATED_BY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.DELETE_TS;
    }

    @Override
    public Field<String> field8() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.DELETED_BY;
    }

    @Override
    public Field<Boolean> field9() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.RECEIVED;
    }

    @Override
    public Field<String> field10() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.KAFKA_KEY;
    }

    @Override
    public Field<String> field11() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.NAME;
    }

    @Override
    public Field<String> field12() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.FULL_NAME;
    }

    @Override
    public Field<String> field13() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.SERIES;
    }

    @Override
    public Field<String> field14() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.NUMBER_;
    }

    @Override
    public Field<LocalDate> field15() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.ISSUE_DATE;
    }

    @Override
    public Field<LocalDate> field16() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.END_DATE;
    }

    @Override
    public Field<String> field17() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.ISSUED_BY;
    }

    @Override
    public Field<String> field18() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.PHOTO_LINK;
    }

    @Override
    public Field<UUID> field19() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.PHOTO_ID;
    }

    @Override
    public Field<UUID> field20() {
        return SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS.BASE_TRANSPORT_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTs();
    }

    @Override
    public String component4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateTs();
    }

    @Override
    public String component6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime component7() {
        return getDeleteTs();
    }

    @Override
    public String component8() {
        return getDeletedBy();
    }

    @Override
    public Boolean component9() {
        return getReceived();
    }

    @Override
    public String component10() {
        return getKafkaKey();
    }

    @Override
    public String component11() {
        return getName();
    }

    @Override
    public String component12() {
        return getFullName();
    }

    @Override
    public String component13() {
        return getSeries();
    }

    @Override
    public String component14() {
        return getNumber_();
    }

    @Override
    public LocalDate component15() {
        return getIssueDate();
    }

    @Override
    public LocalDate component16() {
        return getEndDate();
    }

    @Override
    public String component17() {
        return getIssuedBy();
    }

    @Override
    public String component18() {
        return getPhotoLink();
    }

    @Override
    public UUID component19() {
        return getPhotoId();
    }

    @Override
    public UUID component20() {
        return getBaseTransportId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTs();
    }

    @Override
    public String value4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateTs();
    }

    @Override
    public String value6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime value7() {
        return getDeleteTs();
    }

    @Override
    public String value8() {
        return getDeletedBy();
    }

    @Override
    public Boolean value9() {
        return getReceived();
    }

    @Override
    public String value10() {
        return getKafkaKey();
    }

    @Override
    public String value11() {
        return getName();
    }

    @Override
    public String value12() {
        return getFullName();
    }

    @Override
    public String value13() {
        return getSeries();
    }

    @Override
    public String value14() {
        return getNumber_();
    }

    @Override
    public LocalDate value15() {
        return getIssueDate();
    }

    @Override
    public LocalDate value16() {
        return getEndDate();
    }

    @Override
    public String value17() {
        return getIssuedBy();
    }

    @Override
    public String value18() {
        return getPhotoLink();
    }

    @Override
    public UUID value19() {
        return getPhotoId();
    }

    @Override
    public UUID value20() {
        return getBaseTransportId();
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value3(LocalDateTime value) {
        setCreateTs(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value4(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value5(LocalDateTime value) {
        setUpdateTs(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value7(LocalDateTime value) {
        setDeleteTs(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value8(String value) {
        setDeletedBy(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value9(Boolean value) {
        setReceived(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value10(String value) {
        setKafkaKey(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value11(String value) {
        setName(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value12(String value) {
        setFullName(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value13(String value) {
        setSeries(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value14(String value) {
        setNumber_(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value15(LocalDate value) {
        setIssueDate(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value16(LocalDate value) {
        setEndDate(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value17(String value) {
        setIssuedBy(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value18(String value) {
        setPhotoLink(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value19(UUID value) {
        setPhotoId(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord value20(UUID value) {
        setBaseTransportId(value);
        return this;
    }

    @Override
    public SmartexamaddonBaseDocumentsRecord values(UUID value1, Integer value2, LocalDateTime value3, String value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8, Boolean value9, String value10, String value11, String value12, String value13, String value14, LocalDate value15, LocalDate value16, String value17, String value18, UUID value19, UUID value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SmartexamaddonBaseDocumentsRecord
     */
    public SmartexamaddonBaseDocumentsRecord() {
        super(SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS);
    }

    /**
     * Create a detached, initialised SmartexamaddonBaseDocumentsRecord
     */
    public SmartexamaddonBaseDocumentsRecord(UUID id, Integer version, LocalDateTime createTs, String createdBy, LocalDateTime updateTs, String updatedBy, LocalDateTime deleteTs, String deletedBy, Boolean received, String kafkaKey, String name, String fullName, String series, String number_, LocalDate issueDate, LocalDate endDate, String issuedBy, String photoLink, UUID photoId, UUID baseTransportId) {
        super(SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS);

        setId(id);
        setVersion(version);
        setCreateTs(createTs);
        setCreatedBy(createdBy);
        setUpdateTs(updateTs);
        setUpdatedBy(updatedBy);
        setDeleteTs(deleteTs);
        setDeletedBy(deletedBy);
        setReceived(received);
        setKafkaKey(kafkaKey);
        setName(name);
        setFullName(fullName);
        setSeries(series);
        setNumber_(number_);
        setIssueDate(issueDate);
        setEndDate(endDate);
        setIssuedBy(issuedBy);
        setPhotoLink(photoLink);
        setPhotoId(photoId);
        setBaseTransportId(baseTransportId);
    }

    /**
     * Create a detached, initialised SmartexamaddonBaseDocumentsRecord
     */
    public SmartexamaddonBaseDocumentsRecord(nu.studer.sample.tables.pojos.SmartexamaddonBaseDocuments value) {
        super(SmartexamaddonBaseDocuments.SMARTEXAMADDON_BASE_DOCUMENTS);

        if (value != null) {
            setId(value.getId());
            setVersion(value.getVersion());
            setCreateTs(value.getCreateTs());
            setCreatedBy(value.getCreatedBy());
            setUpdateTs(value.getUpdateTs());
            setUpdatedBy(value.getUpdatedBy());
            setDeleteTs(value.getDeleteTs());
            setDeletedBy(value.getDeletedBy());
            setReceived(value.getReceived());
            setKafkaKey(value.getKafkaKey());
            setName(value.getName());
            setFullName(value.getFullName());
            setSeries(value.getSeries());
            setNumber_(value.getNumber_());
            setIssueDate(value.getIssueDate());
            setEndDate(value.getEndDate());
            setIssuedBy(value.getIssuedBy());
            setPhotoLink(value.getPhotoLink());
            setPhotoId(value.getPhotoId());
            setBaseTransportId(value.getBaseTransportId());
        }
    }
}
