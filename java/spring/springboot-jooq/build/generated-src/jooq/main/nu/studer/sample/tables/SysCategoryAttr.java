/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables;


import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import nu.studer.sample.Indexes;
import nu.studer.sample.Keys;
import nu.studer.sample.Public;
import nu.studer.sample.tables.records.SysCategoryAttrRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysCategoryAttr extends TableImpl<SysCategoryAttrRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.sys_category_attr</code>
     */
    public static final SysCategoryAttr SYS_CATEGORY_ATTR = new SysCategoryAttr();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysCategoryAttrRecord> getRecordType() {
        return SysCategoryAttrRecord.class;
    }

    /**
     * The column <code>public.sys_category_attr.id</code>.
     */
    public final TableField<SysCategoryAttrRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.sys_category_attr.create_ts</code>.
     */
    public final TableField<SysCategoryAttrRecord, LocalDateTime> CREATE_TS = createField(DSL.name("create_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_category_attr.created_by</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_category_attr.version</code>.
     */
    public final TableField<SysCategoryAttrRecord, Integer> VERSION = createField(DSL.name("version"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.sys_category_attr.update_ts</code>.
     */
    public final TableField<SysCategoryAttrRecord, LocalDateTime> UPDATE_TS = createField(DSL.name("update_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_category_attr.updated_by</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_category_attr.delete_ts</code>.
     */
    public final TableField<SysCategoryAttrRecord, LocalDateTime> DELETE_TS = createField(DSL.name("delete_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_category_attr.deleted_by</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> DELETED_BY = createField(DSL.name("deleted_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_category_attr.category_entity_type</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> CATEGORY_ENTITY_TYPE = createField(DSL.name("category_entity_type"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>public.sys_category_attr.name</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.sys_category_attr.code</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> CODE = createField(DSL.name("code"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.sys_category_attr.description</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>public.sys_category_attr.category_id</code>.
     */
    public final TableField<SysCategoryAttrRecord, UUID> CATEGORY_ID = createField(DSL.name("category_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.sys_category_attr.entity_class</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> ENTITY_CLASS = createField(DSL.name("entity_class"), SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>public.sys_category_attr.data_type</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> DATA_TYPE = createField(DSL.name("data_type"), SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.sys_category_attr.default_string</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> DEFAULT_STRING = createField(DSL.name("default_string"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.sys_category_attr.default_int</code>.
     */
    public final TableField<SysCategoryAttrRecord, Integer> DEFAULT_INT = createField(DSL.name("default_int"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sys_category_attr.default_double</code>.
     */
    public final TableField<SysCategoryAttrRecord, BigDecimal> DEFAULT_DOUBLE = createField(DSL.name("default_double"), SQLDataType.NUMERIC(36, 6), this, "");

    /**
     * The column <code>public.sys_category_attr.default_decimal</code>.
     */
    public final TableField<SysCategoryAttrRecord, BigDecimal> DEFAULT_DECIMAL = createField(DSL.name("default_decimal"), SQLDataType.NUMERIC(36, 10), this, "");

    /**
     * The column <code>public.sys_category_attr.default_date</code>.
     */
    public final TableField<SysCategoryAttrRecord, LocalDateTime> DEFAULT_DATE = createField(DSL.name("default_date"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_category_attr.default_date_wo_time</code>.
     */
    public final TableField<SysCategoryAttrRecord, LocalDate> DEFAULT_DATE_WO_TIME = createField(DSL.name("default_date_wo_time"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.sys_category_attr.default_date_is_current</code>.
     */
    public final TableField<SysCategoryAttrRecord, Boolean> DEFAULT_DATE_IS_CURRENT = createField(DSL.name("default_date_is_current"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.sys_category_attr.default_boolean</code>.
     */
    public final TableField<SysCategoryAttrRecord, Boolean> DEFAULT_BOOLEAN = createField(DSL.name("default_boolean"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.sys_category_attr.default_entity_value</code>.
     */
    public final TableField<SysCategoryAttrRecord, UUID> DEFAULT_ENTITY_VALUE = createField(DSL.name("default_entity_value"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>public.sys_category_attr.default_str_entity_value</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> DEFAULT_STR_ENTITY_VALUE = createField(DSL.name("default_str_entity_value"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>public.sys_category_attr.default_int_entity_value</code>.
     */
    public final TableField<SysCategoryAttrRecord, Integer> DEFAULT_INT_ENTITY_VALUE = createField(DSL.name("default_int_entity_value"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>public.sys_category_attr.default_long_entity_value</code>.
     */
    public final TableField<SysCategoryAttrRecord, Long> DEFAULT_LONG_ENTITY_VALUE = createField(DSL.name("default_long_entity_value"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.sys_category_attr.enumeration</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> ENUMERATION = createField(DSL.name("enumeration"), SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>public.sys_category_attr.order_no</code>.
     */
    public final TableField<SysCategoryAttrRecord, Integer> ORDER_NO = createField(DSL.name("order_no"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sys_category_attr.screen</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> SCREEN = createField(DSL.name("screen"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.sys_category_attr.required</code>.
     */
    public final TableField<SysCategoryAttrRecord, Boolean> REQUIRED = createField(DSL.name("required"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.sys_category_attr.lookup</code>.
     */
    public final TableField<SysCategoryAttrRecord, Boolean> LOOKUP = createField(DSL.name("lookup"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.sys_category_attr.target_screens</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> TARGET_SCREENS = createField(DSL.name("target_screens"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>public.sys_category_attr.width</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> WIDTH = createField(DSL.name("width"), SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>public.sys_category_attr.rows_count</code>.
     */
    public final TableField<SysCategoryAttrRecord, Integer> ROWS_COUNT = createField(DSL.name("rows_count"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sys_category_attr.is_collection</code>.
     */
    public final TableField<SysCategoryAttrRecord, Boolean> IS_COLLECTION = createField(DSL.name("is_collection"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.sys_category_attr.join_clause</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> JOIN_CLAUSE = createField(DSL.name("join_clause"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>public.sys_category_attr.where_clause</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> WHERE_CLAUSE = createField(DSL.name("where_clause"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>public.sys_category_attr.filter_xml</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> FILTER_XML = createField(DSL.name("filter_xml"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.sys_category_attr.locale_names</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> LOCALE_NAMES = createField(DSL.name("locale_names"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>public.sys_category_attr.locale_descriptions</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> LOCALE_DESCRIPTIONS = createField(DSL.name("locale_descriptions"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>public.sys_category_attr.enumeration_locales</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> ENUMERATION_LOCALES = createField(DSL.name("enumeration_locales"), SQLDataType.VARCHAR(5000), this, "");

    /**
     * The column
     * <code>public.sys_category_attr.attribute_configuration_json</code>.
     */
    public final TableField<SysCategoryAttrRecord, String> ATTRIBUTE_CONFIGURATION_JSON = createField(DSL.name("attribute_configuration_json"), SQLDataType.CLOB, this, "");

    private SysCategoryAttr(Name alias, Table<SysCategoryAttrRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysCategoryAttr(Name alias, Table<SysCategoryAttrRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.sys_category_attr</code> table reference
     */
    public SysCategoryAttr(String alias) {
        this(DSL.name(alias), SYS_CATEGORY_ATTR);
    }

    /**
     * Create an aliased <code>public.sys_category_attr</code> table reference
     */
    public SysCategoryAttr(Name alias) {
        this(alias, SYS_CATEGORY_ATTR);
    }

    /**
     * Create a <code>public.sys_category_attr</code> table reference
     */
    public SysCategoryAttr() {
        this(DSL.name("sys_category_attr"), null);
    }

    public <O extends Record> SysCategoryAttr(Table<O> child, ForeignKey<O, SysCategoryAttrRecord> key) {
        super(child, key, SYS_CATEGORY_ATTR);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.IDX_CAT_ATTR_ENT_TYPE_AND_CODE, Indexes.IDX_SYS_CATEGORY_ATTR_CATEGORY);
    }

    @Override
    public UniqueKey<SysCategoryAttrRecord> getPrimaryKey() {
        return Keys.SYS_CATEGORY_ATTR_PKEY;
    }

    @Override
    public List<ForeignKey<SysCategoryAttrRecord, ?>> getReferences() {
        return Arrays.asList(Keys.SYS_CATEGORY_ATTR__SYS_CATEGORY_ATTR_CATEGORY_ID);
    }

    private transient SysCategory _sysCategory;

    public SysCategory sysCategory() {
        if (_sysCategory == null)
            _sysCategory = new SysCategory(this, Keys.SYS_CATEGORY_ATTR__SYS_CATEGORY_ATTR_CATEGORY_ID);

        return _sysCategory;
    }

    @Override
    public SysCategoryAttr as(String alias) {
        return new SysCategoryAttr(DSL.name(alias), this);
    }

    @Override
    public SysCategoryAttr as(Name alias) {
        return new SysCategoryAttr(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysCategoryAttr rename(String name) {
        return new SysCategoryAttr(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysCategoryAttr rename(Name name) {
        return new SysCategoryAttr(name, null);
    }
}
