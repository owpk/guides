/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysAccessToken implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID          id;
    private final LocalDateTime createTs;
    private final String        tokenValue;
    private final byte[]        tokenBytes;
    private final String        authenticationKey;
    private final byte[]        authenticationBytes;
    private final LocalDateTime expiry;
    private final String        userLogin;
    private final String        locale;
    private final String        refreshTokenValue;

    public SysAccessToken(SysAccessToken value) {
        this.id = value.id;
        this.createTs = value.createTs;
        this.tokenValue = value.tokenValue;
        this.tokenBytes = value.tokenBytes;
        this.authenticationKey = value.authenticationKey;
        this.authenticationBytes = value.authenticationBytes;
        this.expiry = value.expiry;
        this.userLogin = value.userLogin;
        this.locale = value.locale;
        this.refreshTokenValue = value.refreshTokenValue;
    }

    public SysAccessToken(
        UUID          id,
        LocalDateTime createTs,
        String        tokenValue,
        byte[]        tokenBytes,
        String        authenticationKey,
        byte[]        authenticationBytes,
        LocalDateTime expiry,
        String        userLogin,
        String        locale,
        String        refreshTokenValue
    ) {
        this.id = id;
        this.createTs = createTs;
        this.tokenValue = tokenValue;
        this.tokenBytes = tokenBytes;
        this.authenticationKey = authenticationKey;
        this.authenticationBytes = authenticationBytes;
        this.expiry = expiry;
        this.userLogin = userLogin;
        this.locale = locale;
        this.refreshTokenValue = refreshTokenValue;
    }

    /**
     * Getter for <code>public.sys_access_token.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.sys_access_token.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return this.createTs;
    }

    /**
     * Getter for <code>public.sys_access_token.token_value</code>.
     */
    public String getTokenValue() {
        return this.tokenValue;
    }

    /**
     * Getter for <code>public.sys_access_token.token_bytes</code>.
     */
    public byte[] getTokenBytes() {
        return this.tokenBytes;
    }

    /**
     * Getter for <code>public.sys_access_token.authentication_key</code>.
     */
    public String getAuthenticationKey() {
        return this.authenticationKey;
    }

    /**
     * Getter for <code>public.sys_access_token.authentication_bytes</code>.
     */
    public byte[] getAuthenticationBytes() {
        return this.authenticationBytes;
    }

    /**
     * Getter for <code>public.sys_access_token.expiry</code>.
     */
    public LocalDateTime getExpiry() {
        return this.expiry;
    }

    /**
     * Getter for <code>public.sys_access_token.user_login</code>.
     */
    public String getUserLogin() {
        return this.userLogin;
    }

    /**
     * Getter for <code>public.sys_access_token.locale</code>.
     */
    public String getLocale() {
        return this.locale;
    }

    /**
     * Getter for <code>public.sys_access_token.refresh_token_value</code>.
     */
    public String getRefreshTokenValue() {
        return this.refreshTokenValue;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SysAccessToken (");

        sb.append(id);
        sb.append(", ").append(createTs);
        sb.append(", ").append(tokenValue);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(authenticationKey);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(expiry);
        sb.append(", ").append(userLogin);
        sb.append(", ").append(locale);
        sb.append(", ").append(refreshTokenValue);

        sb.append(")");
        return sb.toString();
    }
}
