/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import nu.studer.sample.tables.SmartmonCheckListItem;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartmonCheckListItemRecord extends UpdatableRecordImpl<SmartmonCheckListItemRecord> implements Record18<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, Integer, String, String, Integer, Double, Double, Boolean, UUID, UUID, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.smartmon_check_list_item.id</code>.
     */
    public SmartmonCheckListItemRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.version</code>.
     */
    public SmartmonCheckListItemRecord setVersion(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.create_ts</code>.
     */
    public SmartmonCheckListItemRecord setCreateTs(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.created_by</code>.
     */
    public SmartmonCheckListItemRecord setCreatedBy(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.update_ts</code>.
     */
    public SmartmonCheckListItemRecord setUpdateTs(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.updated_by</code>.
     */
    public SmartmonCheckListItemRecord setUpdatedBy(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.delete_ts</code>.
     */
    public SmartmonCheckListItemRecord setDeleteTs(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.deleted_by</code>.
     */
    public SmartmonCheckListItemRecord setDeletedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.deleted_by</code>.
     */
    public String getDeletedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.photo_type</code>.
     */
    public SmartmonCheckListItemRecord setPhotoType(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.photo_type</code>.
     */
    public Integer getPhotoType() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.description</code>.
     */
    public SmartmonCheckListItemRecord setDescription(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.description</code>.
     */
    public String getDescription() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.value_type</code>.
     */
    public SmartmonCheckListItemRecord setValueType(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.value_type</code>.
     */
    public String getValueType() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.min_photos</code>.
     */
    public SmartmonCheckListItemRecord setMinPhotos(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.min_photos</code>.
     */
    public Integer getMinPhotos() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.min_value</code>.
     */
    public SmartmonCheckListItemRecord setMinValue(Double value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.min_value</code>.
     */
    public Double getMinValue() {
        return (Double) get(12);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.max_value</code>.
     */
    public SmartmonCheckListItemRecord setMaxValue(Double value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.max_value</code>.
     */
    public Double getMaxValue() {
        return (Double) get(13);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.archived</code>.
     */
    public SmartmonCheckListItemRecord setArchived(Boolean value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.archived</code>.
     */
    public Boolean getArchived() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.parent_item_id</code>.
     */
    public SmartmonCheckListItemRecord setParentItemId(UUID value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.parent_item_id</code>.
     */
    public UUID getParentItemId() {
        return (UUID) get(15);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.list_template_id</code>.
     */
    public SmartmonCheckListItemRecord setListTemplateId(UUID value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.list_template_id</code>.
     */
    public UUID getListTemplateId() {
        return (UUID) get(16);
    }

    /**
     * Setter for <code>public.smartmon_check_list_item.ext_id</code>.
     */
    public SmartmonCheckListItemRecord setExtId(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>public.smartmon_check_list_item.ext_id</code>.
     */
    public String getExtId() {
        return (String) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, Integer, String, String, Integer, Double, Double, Boolean, UUID, UUID, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<UUID, Integer, LocalDateTime, String, LocalDateTime, String, LocalDateTime, String, Integer, String, String, Integer, Double, Double, Boolean, UUID, UUID, String> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.ID;
    }

    @Override
    public Field<Integer> field2() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.VERSION;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.CREATE_TS;
    }

    @Override
    public Field<String> field4() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.UPDATE_TS;
    }

    @Override
    public Field<String> field6() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.UPDATED_BY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.DELETE_TS;
    }

    @Override
    public Field<String> field8() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.DELETED_BY;
    }

    @Override
    public Field<Integer> field9() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.PHOTO_TYPE;
    }

    @Override
    public Field<String> field10() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.DESCRIPTION;
    }

    @Override
    public Field<String> field11() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.VALUE_TYPE;
    }

    @Override
    public Field<Integer> field12() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.MIN_PHOTOS;
    }

    @Override
    public Field<Double> field13() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.MIN_VALUE;
    }

    @Override
    public Field<Double> field14() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.MAX_VALUE;
    }

    @Override
    public Field<Boolean> field15() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.ARCHIVED;
    }

    @Override
    public Field<UUID> field16() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.PARENT_ITEM_ID;
    }

    @Override
    public Field<UUID> field17() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.LIST_TEMPLATE_ID;
    }

    @Override
    public Field<String> field18() {
        return SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM.EXT_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTs();
    }

    @Override
    public String component4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateTs();
    }

    @Override
    public String component6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime component7() {
        return getDeleteTs();
    }

    @Override
    public String component8() {
        return getDeletedBy();
    }

    @Override
    public Integer component9() {
        return getPhotoType();
    }

    @Override
    public String component10() {
        return getDescription();
    }

    @Override
    public String component11() {
        return getValueType();
    }

    @Override
    public Integer component12() {
        return getMinPhotos();
    }

    @Override
    public Double component13() {
        return getMinValue();
    }

    @Override
    public Double component14() {
        return getMaxValue();
    }

    @Override
    public Boolean component15() {
        return getArchived();
    }

    @Override
    public UUID component16() {
        return getParentItemId();
    }

    @Override
    public UUID component17() {
        return getListTemplateId();
    }

    @Override
    public String component18() {
        return getExtId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTs();
    }

    @Override
    public String value4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateTs();
    }

    @Override
    public String value6() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime value7() {
        return getDeleteTs();
    }

    @Override
    public String value8() {
        return getDeletedBy();
    }

    @Override
    public Integer value9() {
        return getPhotoType();
    }

    @Override
    public String value10() {
        return getDescription();
    }

    @Override
    public String value11() {
        return getValueType();
    }

    @Override
    public Integer value12() {
        return getMinPhotos();
    }

    @Override
    public Double value13() {
        return getMinValue();
    }

    @Override
    public Double value14() {
        return getMaxValue();
    }

    @Override
    public Boolean value15() {
        return getArchived();
    }

    @Override
    public UUID value16() {
        return getParentItemId();
    }

    @Override
    public UUID value17() {
        return getListTemplateId();
    }

    @Override
    public String value18() {
        return getExtId();
    }

    @Override
    public SmartmonCheckListItemRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value3(LocalDateTime value) {
        setCreateTs(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value4(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value5(LocalDateTime value) {
        setUpdateTs(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value7(LocalDateTime value) {
        setDeleteTs(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value8(String value) {
        setDeletedBy(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value9(Integer value) {
        setPhotoType(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value10(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value11(String value) {
        setValueType(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value12(Integer value) {
        setMinPhotos(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value13(Double value) {
        setMinValue(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value14(Double value) {
        setMaxValue(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value15(Boolean value) {
        setArchived(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value16(UUID value) {
        setParentItemId(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value17(UUID value) {
        setListTemplateId(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord value18(String value) {
        setExtId(value);
        return this;
    }

    @Override
    public SmartmonCheckListItemRecord values(UUID value1, Integer value2, LocalDateTime value3, String value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8, Integer value9, String value10, String value11, Integer value12, Double value13, Double value14, Boolean value15, UUID value16, UUID value17, String value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SmartmonCheckListItemRecord
     */
    public SmartmonCheckListItemRecord() {
        super(SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM);
    }

    /**
     * Create a detached, initialised SmartmonCheckListItemRecord
     */
    public SmartmonCheckListItemRecord(UUID id, Integer version, LocalDateTime createTs, String createdBy, LocalDateTime updateTs, String updatedBy, LocalDateTime deleteTs, String deletedBy, Integer photoType, String description, String valueType, Integer minPhotos, Double minValue, Double maxValue, Boolean archived, UUID parentItemId, UUID listTemplateId, String extId) {
        super(SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM);

        setId(id);
        setVersion(version);
        setCreateTs(createTs);
        setCreatedBy(createdBy);
        setUpdateTs(updateTs);
        setUpdatedBy(updatedBy);
        setDeleteTs(deleteTs);
        setDeletedBy(deletedBy);
        setPhotoType(photoType);
        setDescription(description);
        setValueType(valueType);
        setMinPhotos(minPhotos);
        setMinValue(minValue);
        setMaxValue(maxValue);
        setArchived(archived);
        setParentItemId(parentItemId);
        setListTemplateId(listTemplateId);
        setExtId(extId);
    }

    /**
     * Create a detached, initialised SmartmonCheckListItemRecord
     */
    public SmartmonCheckListItemRecord(nu.studer.sample.tables.pojos.SmartmonCheckListItem value) {
        super(SmartmonCheckListItem.SMARTMON_CHECK_LIST_ITEM);

        if (value != null) {
            setId(value.getId());
            setVersion(value.getVersion());
            setCreateTs(value.getCreateTs());
            setCreatedBy(value.getCreatedBy());
            setUpdateTs(value.getUpdateTs());
            setUpdatedBy(value.getUpdatedBy());
            setDeleteTs(value.getDeleteTs());
            setDeletedBy(value.getDeletedBy());
            setPhotoType(value.getPhotoType());
            setDescription(value.getDescription());
            setValueType(value.getValueType());
            setMinPhotos(value.getMinPhotos());
            setMinValue(value.getMinValue());
            setMaxValue(value.getMaxValue());
            setArchived(value.getArchived());
            setParentItemId(value.getParentItemId());
            setListTemplateId(value.getListTemplateId());
            setExtId(value.getExtId());
        }
    }
}
