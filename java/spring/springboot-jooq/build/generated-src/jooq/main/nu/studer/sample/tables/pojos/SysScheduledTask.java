/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysScheduledTask implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID           id;
    private final LocalDateTime  createTs;
    private final String         createdBy;
    private final LocalDateTime  updateTs;
    private final String         updatedBy;
    private final LocalDateTime  deleteTs;
    private final String         deletedBy;
    private final String         sysTenantId;
    private final String         definedBy;
    private final String         className;
    private final String         scriptName;
    private final String         beanName;
    private final String         methodName;
    private final String         methodParams;
    private final String         userName;
    private final Boolean        isSingleton;
    private final Boolean        isActive;
    private final Integer        period_;
    private final Integer        timeout;
    private final LocalDateTime  startDate;
    private final Integer        timeFrame;
    private final Integer        startDelay;
    private final String         permittedServers;
    private final Boolean        logStart;
    private final Boolean        logFinish;
    private final OffsetDateTime lastStartTime;
    private final String         lastStartServer;
    private final String         description;
    private final String         cron;
    private final String         schedulingType;

    public SysScheduledTask(SysScheduledTask value) {
        this.id = value.id;
        this.createTs = value.createTs;
        this.createdBy = value.createdBy;
        this.updateTs = value.updateTs;
        this.updatedBy = value.updatedBy;
        this.deleteTs = value.deleteTs;
        this.deletedBy = value.deletedBy;
        this.sysTenantId = value.sysTenantId;
        this.definedBy = value.definedBy;
        this.className = value.className;
        this.scriptName = value.scriptName;
        this.beanName = value.beanName;
        this.methodName = value.methodName;
        this.methodParams = value.methodParams;
        this.userName = value.userName;
        this.isSingleton = value.isSingleton;
        this.isActive = value.isActive;
        this.period_ = value.period_;
        this.timeout = value.timeout;
        this.startDate = value.startDate;
        this.timeFrame = value.timeFrame;
        this.startDelay = value.startDelay;
        this.permittedServers = value.permittedServers;
        this.logStart = value.logStart;
        this.logFinish = value.logFinish;
        this.lastStartTime = value.lastStartTime;
        this.lastStartServer = value.lastStartServer;
        this.description = value.description;
        this.cron = value.cron;
        this.schedulingType = value.schedulingType;
    }

    public SysScheduledTask(
        UUID           id,
        LocalDateTime  createTs,
        String         createdBy,
        LocalDateTime  updateTs,
        String         updatedBy,
        LocalDateTime  deleteTs,
        String         deletedBy,
        String         sysTenantId,
        String         definedBy,
        String         className,
        String         scriptName,
        String         beanName,
        String         methodName,
        String         methodParams,
        String         userName,
        Boolean        isSingleton,
        Boolean        isActive,
        Integer        period_,
        Integer        timeout,
        LocalDateTime  startDate,
        Integer        timeFrame,
        Integer        startDelay,
        String         permittedServers,
        Boolean        logStart,
        Boolean        logFinish,
        OffsetDateTime lastStartTime,
        String         lastStartServer,
        String         description,
        String         cron,
        String         schedulingType
    ) {
        this.id = id;
        this.createTs = createTs;
        this.createdBy = createdBy;
        this.updateTs = updateTs;
        this.updatedBy = updatedBy;
        this.deleteTs = deleteTs;
        this.deletedBy = deletedBy;
        this.sysTenantId = sysTenantId;
        this.definedBy = definedBy;
        this.className = className;
        this.scriptName = scriptName;
        this.beanName = beanName;
        this.methodName = methodName;
        this.methodParams = methodParams;
        this.userName = userName;
        this.isSingleton = isSingleton;
        this.isActive = isActive;
        this.period_ = period_;
        this.timeout = timeout;
        this.startDate = startDate;
        this.timeFrame = timeFrame;
        this.startDelay = startDelay;
        this.permittedServers = permittedServers;
        this.logStart = logStart;
        this.logFinish = logFinish;
        this.lastStartTime = lastStartTime;
        this.lastStartServer = lastStartServer;
        this.description = description;
        this.cron = cron;
        this.schedulingType = schedulingType;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.create_ts</code>.
     */
    public LocalDateTime getCreateTs() {
        return this.createTs;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.created_by</code>.
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.update_ts</code>.
     */
    public LocalDateTime getUpdateTs() {
        return this.updateTs;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.updated_by</code>.
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.delete_ts</code>.
     */
    public LocalDateTime getDeleteTs() {
        return this.deleteTs;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.deleted_by</code>.
     */
    public String getDeletedBy() {
        return this.deletedBy;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.sys_tenant_id</code>.
     */
    public String getSysTenantId() {
        return this.sysTenantId;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.defined_by</code>.
     */
    public String getDefinedBy() {
        return this.definedBy;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.class_name</code>.
     */
    public String getClassName() {
        return this.className;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.script_name</code>.
     */
    public String getScriptName() {
        return this.scriptName;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.bean_name</code>.
     */
    public String getBeanName() {
        return this.beanName;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.method_name</code>.
     */
    public String getMethodName() {
        return this.methodName;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.method_params</code>.
     */
    public String getMethodParams() {
        return this.methodParams;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.user_name</code>.
     */
    public String getUserName() {
        return this.userName;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.is_singleton</code>.
     */
    public Boolean getIsSingleton() {
        return this.isSingleton;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.is_active</code>.
     */
    public Boolean getIsActive() {
        return this.isActive;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.period_</code>.
     */
    public Integer getPeriod_() {
        return this.period_;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.timeout</code>.
     */
    public Integer getTimeout() {
        return this.timeout;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.start_date</code>.
     */
    public LocalDateTime getStartDate() {
        return this.startDate;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.time_frame</code>.
     */
    public Integer getTimeFrame() {
        return this.timeFrame;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.start_delay</code>.
     */
    public Integer getStartDelay() {
        return this.startDelay;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.permitted_servers</code>.
     */
    public String getPermittedServers() {
        return this.permittedServers;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.log_start</code>.
     */
    public Boolean getLogStart() {
        return this.logStart;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.log_finish</code>.
     */
    public Boolean getLogFinish() {
        return this.logFinish;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.last_start_time</code>.
     */
    public OffsetDateTime getLastStartTime() {
        return this.lastStartTime;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.last_start_server</code>.
     */
    public String getLastStartServer() {
        return this.lastStartServer;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.cron</code>.
     */
    public String getCron() {
        return this.cron;
    }

    /**
     * Getter for <code>public.sys_scheduled_task.scheduling_type</code>.
     */
    public String getSchedulingType() {
        return this.schedulingType;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SysScheduledTask (");

        sb.append(id);
        sb.append(", ").append(createTs);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updateTs);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(deleteTs);
        sb.append(", ").append(deletedBy);
        sb.append(", ").append(sysTenantId);
        sb.append(", ").append(definedBy);
        sb.append(", ").append(className);
        sb.append(", ").append(scriptName);
        sb.append(", ").append(beanName);
        sb.append(", ").append(methodName);
        sb.append(", ").append(methodParams);
        sb.append(", ").append(userName);
        sb.append(", ").append(isSingleton);
        sb.append(", ").append(isActive);
        sb.append(", ").append(period_);
        sb.append(", ").append(timeout);
        sb.append(", ").append(startDate);
        sb.append(", ").append(timeFrame);
        sb.append(", ").append(startDelay);
        sb.append(", ").append(permittedServers);
        sb.append(", ").append(logStart);
        sb.append(", ").append(logFinish);
        sb.append(", ").append(lastStartTime);
        sb.append(", ").append(lastStartServer);
        sb.append(", ").append(description);
        sb.append(", ").append(cron);
        sb.append(", ").append(schedulingType);

        sb.append(")");
        return sb.toString();
    }
}
