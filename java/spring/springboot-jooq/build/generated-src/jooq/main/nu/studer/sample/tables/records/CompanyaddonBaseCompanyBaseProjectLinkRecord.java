/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.util.UUID;

import nu.studer.sample.tables.CompanyaddonBaseCompanyBaseProjectLink;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyaddonBaseCompanyBaseProjectLinkRecord extends UpdatableRecordImpl<CompanyaddonBaseCompanyBaseProjectLinkRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>public.companyaddon_base_company_base_project_link.base_company_id</code>.
     */
    public CompanyaddonBaseCompanyBaseProjectLinkRecord setBaseCompanyId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_company_base_project_link.base_company_id</code>.
     */
    public UUID getBaseCompanyId() {
        return (UUID) get(0);
    }

    /**
     * Setter for
     * <code>public.companyaddon_base_company_base_project_link.base_project_id</code>.
     */
    public CompanyaddonBaseCompanyBaseProjectLinkRecord setBaseProjectId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.companyaddon_base_company_base_project_link.base_project_id</code>.
     */
    public UUID getBaseProjectId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return CompanyaddonBaseCompanyBaseProjectLink.COMPANYADDON_BASE_COMPANY_BASE_PROJECT_LINK.BASE_COMPANY_ID;
    }

    @Override
    public Field<UUID> field2() {
        return CompanyaddonBaseCompanyBaseProjectLink.COMPANYADDON_BASE_COMPANY_BASE_PROJECT_LINK.BASE_PROJECT_ID;
    }

    @Override
    public UUID component1() {
        return getBaseCompanyId();
    }

    @Override
    public UUID component2() {
        return getBaseProjectId();
    }

    @Override
    public UUID value1() {
        return getBaseCompanyId();
    }

    @Override
    public UUID value2() {
        return getBaseProjectId();
    }

    @Override
    public CompanyaddonBaseCompanyBaseProjectLinkRecord value1(UUID value) {
        setBaseCompanyId(value);
        return this;
    }

    @Override
    public CompanyaddonBaseCompanyBaseProjectLinkRecord value2(UUID value) {
        setBaseProjectId(value);
        return this;
    }

    @Override
    public CompanyaddonBaseCompanyBaseProjectLinkRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompanyaddonBaseCompanyBaseProjectLinkRecord
     */
    public CompanyaddonBaseCompanyBaseProjectLinkRecord() {
        super(CompanyaddonBaseCompanyBaseProjectLink.COMPANYADDON_BASE_COMPANY_BASE_PROJECT_LINK);
    }

    /**
     * Create a detached, initialised
     * CompanyaddonBaseCompanyBaseProjectLinkRecord
     */
    public CompanyaddonBaseCompanyBaseProjectLinkRecord(UUID baseCompanyId, UUID baseProjectId) {
        super(CompanyaddonBaseCompanyBaseProjectLink.COMPANYADDON_BASE_COMPANY_BASE_PROJECT_LINK);

        setBaseCompanyId(baseCompanyId);
        setBaseProjectId(baseProjectId);
    }

    /**
     * Create a detached, initialised
     * CompanyaddonBaseCompanyBaseProjectLinkRecord
     */
    public CompanyaddonBaseCompanyBaseProjectLinkRecord(nu.studer.sample.tables.pojos.CompanyaddonBaseCompanyBaseProjectLink value) {
        super(CompanyaddonBaseCompanyBaseProjectLink.COMPANYADDON_BASE_COMPANY_BASE_PROJECT_LINK);

        if (value != null) {
            setBaseCompanyId(value.getBaseCompanyId());
            setBaseProjectId(value.getBaseProjectId());
        }
    }
}
