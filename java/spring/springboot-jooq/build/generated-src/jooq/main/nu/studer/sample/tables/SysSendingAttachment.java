/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import nu.studer.sample.Indexes;
import nu.studer.sample.Keys;
import nu.studer.sample.Public;
import nu.studer.sample.tables.records.SysSendingAttachmentRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysSendingAttachment extends TableImpl<SysSendingAttachmentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.sys_sending_attachment</code>
     */
    public static final SysSendingAttachment SYS_SENDING_ATTACHMENT = new SysSendingAttachment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysSendingAttachmentRecord> getRecordType() {
        return SysSendingAttachmentRecord.class;
    }

    /**
     * The column <code>public.sys_sending_attachment.id</code>.
     */
    public final TableField<SysSendingAttachmentRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.sys_sending_attachment.create_ts</code>.
     */
    public final TableField<SysSendingAttachmentRecord, LocalDateTime> CREATE_TS = createField(DSL.name("create_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_sending_attachment.created_by</code>.
     */
    public final TableField<SysSendingAttachmentRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_sending_attachment.version</code>.
     */
    public final TableField<SysSendingAttachmentRecord, Integer> VERSION = createField(DSL.name("version"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.sys_sending_attachment.update_ts</code>.
     */
    public final TableField<SysSendingAttachmentRecord, LocalDateTime> UPDATE_TS = createField(DSL.name("update_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_sending_attachment.updated_by</code>.
     */
    public final TableField<SysSendingAttachmentRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_sending_attachment.delete_ts</code>.
     */
    public final TableField<SysSendingAttachmentRecord, LocalDateTime> DELETE_TS = createField(DSL.name("delete_ts"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.sys_sending_attachment.deleted_by</code>.
     */
    public final TableField<SysSendingAttachmentRecord, String> DELETED_BY = createField(DSL.name("deleted_by"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_sending_attachment.sys_tenant_id</code>.
     */
    public final TableField<SysSendingAttachmentRecord, String> SYS_TENANT_ID = createField(DSL.name("sys_tenant_id"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.sys_sending_attachment.message_id</code>.
     */
    public final TableField<SysSendingAttachmentRecord, UUID> MESSAGE_ID = createField(DSL.name("message_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.sys_sending_attachment.content</code>.
     */
    public final TableField<SysSendingAttachmentRecord, byte[]> CONTENT = createField(DSL.name("content"), SQLDataType.BLOB, this, "");

    /**
     * The column <code>public.sys_sending_attachment.content_file_id</code>.
     */
    public final TableField<SysSendingAttachmentRecord, UUID> CONTENT_FILE_ID = createField(DSL.name("content_file_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.sys_sending_attachment.content_id</code>.
     */
    public final TableField<SysSendingAttachmentRecord, String> CONTENT_ID = createField(DSL.name("content_id"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_sending_attachment.name</code>.
     */
    public final TableField<SysSendingAttachmentRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>public.sys_sending_attachment.disposition</code>.
     */
    public final TableField<SysSendingAttachmentRecord, String> DISPOSITION = createField(DSL.name("disposition"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.sys_sending_attachment.text_encoding</code>.
     */
    public final TableField<SysSendingAttachmentRecord, String> TEXT_ENCODING = createField(DSL.name("text_encoding"), SQLDataType.VARCHAR(50), this, "");

    private SysSendingAttachment(Name alias, Table<SysSendingAttachmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysSendingAttachment(Name alias, Table<SysSendingAttachmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.sys_sending_attachment</code> table
     * reference
     */
    public SysSendingAttachment(String alias) {
        this(DSL.name(alias), SYS_SENDING_ATTACHMENT);
    }

    /**
     * Create an aliased <code>public.sys_sending_attachment</code> table
     * reference
     */
    public SysSendingAttachment(Name alias) {
        this(alias, SYS_SENDING_ATTACHMENT);
    }

    /**
     * Create a <code>public.sys_sending_attachment</code> table reference
     */
    public SysSendingAttachment() {
        this(DSL.name("sys_sending_attachment"), null);
    }

    public <O extends Record> SysSendingAttachment(Table<O> child, ForeignKey<O, SysSendingAttachmentRecord> key) {
        super(child, key, SYS_SENDING_ATTACHMENT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.SYS_SENDING_ATTACHMENT_MESSAGE_IDX);
    }

    @Override
    public UniqueKey<SysSendingAttachmentRecord> getPrimaryKey() {
        return Keys.SYS_SENDING_ATTACHMENT_PKEY;
    }

    @Override
    public List<ForeignKey<SysSendingAttachmentRecord, ?>> getReferences() {
        return Arrays.asList(Keys.SYS_SENDING_ATTACHMENT__FK_SYS_SENDING_ATTACHMENT_SENDING_MESSAGE, Keys.SYS_SENDING_ATTACHMENT__FK_SYS_SENDING_ATTACHMENT_CONTENT_FILE);
    }

    private transient SysSendingMessage _sysSendingMessage;
    private transient SysFile _sysFile;

    public SysSendingMessage sysSendingMessage() {
        if (_sysSendingMessage == null)
            _sysSendingMessage = new SysSendingMessage(this, Keys.SYS_SENDING_ATTACHMENT__FK_SYS_SENDING_ATTACHMENT_SENDING_MESSAGE);

        return _sysSendingMessage;
    }

    public SysFile sysFile() {
        if (_sysFile == null)
            _sysFile = new SysFile(this, Keys.SYS_SENDING_ATTACHMENT__FK_SYS_SENDING_ATTACHMENT_CONTENT_FILE);

        return _sysFile;
    }

    @Override
    public SysSendingAttachment as(String alias) {
        return new SysSendingAttachment(DSL.name(alias), this);
    }

    @Override
    public SysSendingAttachment as(Name alias) {
        return new SysSendingAttachment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysSendingAttachment rename(String name) {
        return new SysSendingAttachment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysSendingAttachment rename(Name name) {
        return new SysSendingAttachment(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<UUID, LocalDateTime, String, Integer, LocalDateTime, String, LocalDateTime, String, String, UUID, byte[], UUID, String, String, String, String> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
